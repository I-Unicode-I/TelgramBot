2020-05-06 13:50:30,144:asyncio:Using selector: SelectSelector
2020-05-06 13:51:06,681:asyncio:Using selector: SelectSelector
2020-05-06 13:51:06,714:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-06 13:51:06,917:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-06 13:51:06,917:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-06 13:51:06,917:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-06 13:51:06,977:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-06 13:51:06,978:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-06 13:51:08,017:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-06 13:51:08,017:aiogram:Updates were skipped successfully.
2020-05-06 13:51:08,017:aiogram.dispatcher.dispatcher:Start polling.
2020-05-06 13:51:08,017:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-06 13:51:08,059:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-06 13:51:08,059:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-06 13:51:28,101:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-06 13:51:28,202:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-06 13:51:34,697:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522441,\n"message":{"message_id":159,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588762293,"text":"Fgg"}}]}'"
2020-05-06 13:51:34,698:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-06 13:51:34,698:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello man!<'}" and files "None"
2020-05-06 13:51:34,768:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":160,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588762293,"text":"Hello man!<"}}'"
2020-05-06 13:51:34,806:aiogram:Make request: "getUpdates" with data: "{'offset': 416522442, 'timeout': 20}" and files "None"
2020-05-06 13:51:36,572:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522442,\n"message":{"message_id":161,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588762295,"text":"Gg"}}]}'"
2020-05-06 13:51:36,572:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-06 13:51:36,572:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello man!<'}" and files "None"
2020-05-06 13:51:36,638:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":162,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588762295,"text":"Hello man!<"}}'"
2020-05-06 13:51:36,676:aiogram:Make request: "getUpdates" with data: "{'offset': 416522443, 'timeout': 20}" and files "None"
2020-05-06 13:51:38,075:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522443,\n"message":{"message_id":163,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588762297,"text":"Ff"}}]}'"
2020-05-06 13:51:38,075:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-06 13:51:38,075:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello man!<'}" and files "None"
2020-05-06 13:51:38,177:aiogram:Make request: "getUpdates" with data: "{'offset': 416522444, 'timeout': 20}" and files "None"
2020-05-06 13:51:38,253:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":164,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588762297,"text":"Hello man!<"}}'"
2020-05-06 13:51:58,299:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-06 13:51:58,400:aiogram:Make request: "getUpdates" with data: "{'offset': 416522444, 'timeout': 20}" and files "None"
2020-05-06 13:52:03,646:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522444,\n"message":{"message_id":165,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588762322,"text":"Stock"}}]}'"
2020-05-06 13:52:03,646:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-06 13:52:03,741:aiogram:Make request: "getUpdates" with data: "{'offset': 416522445, 'timeout': 20}" and files "None"
2020-05-06 13:52:13,183:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522445,\n"message":{"message_id":166,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588762332,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-06 13:52:13,184:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-06 13:52:13,185:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-06 13:52:13,860:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-06 13:52:13,994:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Tesla shares cost in:\n>>Tesla: 768.1$'}" and files "None"
2020-05-06 13:52:13,995:aiogram:Make request: "getUpdates" with data: "{'offset': 416522446, 'timeout': 20}" and files "None"
2020-05-06 13:52:14,126:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":167,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588762333,"text":"Tesla shares cost in:\\n>>Tesla: 768.1$"}}'"
2020-05-06 13:52:34,162:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-06 13:52:34,263:aiogram:Make request: "getUpdates" with data: "{'offset': 416522446, 'timeout': 20}" and files "None"
2020-05-06 13:52:54,319:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-06 13:52:54,419:aiogram:Make request: "getUpdates" with data: "{'offset': 416522446, 'timeout': 20}" and files "None"
2020-05-07 15:52:18,417:asyncio:Using selector: SelectSelector
2020-05-07 15:52:18,529:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 15:52:18,697:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 15:52:18,697:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 15:52:18,697:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 15:52:18,736:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":2}}'"
2020-05-07 15:52:18,736:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 15:52:18,776:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522447,\n"message":{"message_id":169,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588855509,"text":"asdf"}}]}'"
2020-05-07 15:52:18,777:aiogram:Updates were skipped successfully.
2020-05-07 15:52:18,777:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 15:52:18,777:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 15:52:18,817:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-07 15:52:18,817:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 15:52:18,858:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522447,\n"message":{"message_id":169,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588855509,"text":"asdf"}}]}'"
2020-05-07 15:52:18,858:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 15:52:18,858:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'str' object has no attribute 'startstwith'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 72, in message_handler
    if text and isinstance(text, str) and not text.startstwith('/'):
AttributeError: 'str' object has no attribute 'startstwith'
2020-05-07 15:52:18,953:aiogram:Make request: "getUpdates" with data: "{'offset': 416522448, 'timeout': 20}" and files "None"
2020-05-07 15:52:38,994:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:52:39,096:aiogram:Make request: "getUpdates" with data: "{'offset': 416522448, 'timeout': 20}" and files "None"
2020-05-07 15:52:59,143:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:52:59,244:aiogram:Make request: "getUpdates" with data: "{'offset': 416522448, 'timeout': 20}" and files "None"
2020-05-07 15:53:19,286:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:53:19,386:aiogram:Make request: "getUpdates" with data: "{'offset': 416522448, 'timeout': 20}" and files "None"
2020-05-07 15:53:20,979:asyncio:Using selector: SelectSelector
2020-05-07 15:53:20,994:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 15:53:22,231:asyncio:Using selector: SelectSelector
2020-05-07 15:53:22,244:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 15:53:22,370:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 15:53:22,370:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 15:53:22,370:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 15:53:22,409:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 15:53:22,409:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 15:53:23,454:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:53:23,455:aiogram:Updates were skipped successfully.
2020-05-07 15:53:23,455:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 15:53:23,455:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 15:53:23,495:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 15:53:23,495:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 15:53:25,654:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522448,\n"message":{"message_id":170,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856004,"text":"Stock"}}]}'"
2020-05-07 15:53:25,655:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 15:53:25,655:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'str' object has no attribute 'startstwith'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 72, in message_handler
    if text and isinstance(text, str) and not text.startstwith('/'):
AttributeError: 'str' object has no attribute 'startstwith'
2020-05-07 15:53:25,742:aiogram:Make request: "getUpdates" with data: "{'offset': 416522449, 'timeout': 20}" and files "None"
2020-05-07 15:53:30,456:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522449,\n"message":{"message_id":171,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856009,"text":"D"}}]}'"
2020-05-07 15:53:30,456:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 15:53:30,456:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'str' object has no attribute 'startstwith'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 72, in message_handler
    if text and isinstance(text, str) and not text.startstwith('/'):
AttributeError: 'str' object has no attribute 'startstwith'
2020-05-07 15:53:30,558:aiogram:Make request: "getUpdates" with data: "{'offset': 416522450, 'timeout': 20}" and files "None"
2020-05-07 15:53:33,729:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522450,\n"message":{"message_id":172,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856012,"text":"D"}}]}'"
2020-05-07 15:53:33,730:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 15:53:33,730:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'str' object has no attribute 'startstwith'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 72, in message_handler
    if text and isinstance(text, str) and not text.startstwith('/'):
AttributeError: 'str' object has no attribute 'startstwith'
2020-05-07 15:53:33,831:aiogram:Make request: "getUpdates" with data: "{'offset': 416522451, 'timeout': 20}" and files "None"
2020-05-07 15:53:45,761:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522451,\n"message":{"message_id":173,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856024,"text":"Hello"}}]}'"
2020-05-07 15:53:45,761:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 15:53:45,761:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'str' object has no attribute 'startstwith'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 72, in message_handler
    if text and isinstance(text, str) and not text.startstwith('/'):
AttributeError: 'str' object has no attribute 'startstwith'
2020-05-07 15:53:45,863:aiogram:Make request: "getUpdates" with data: "{'offset': 416522452, 'timeout': 20}" and files "None"
2020-05-07 15:53:46,484:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522452,\n"message":{"message_id":174,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856025,"text":"User"}}]}'"
2020-05-07 15:53:46,484:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 15:53:46,484:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'str' object has no attribute 'startstwith'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 72, in message_handler
    if text and isinstance(text, str) and not text.startstwith('/'):
AttributeError: 'str' object has no attribute 'startstwith'
2020-05-07 15:53:46,586:aiogram:Make request: "getUpdates" with data: "{'offset': 416522453, 'timeout': 20}" and files "None"
2020-05-07 15:54:02,279:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522453,\n"message":{"message_id":175,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856041,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 15:54:02,279:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 15:54:02,280:root:<sqlite3.Cursor object at 0x0000022F1AADDB90>
2020-05-07 15:54:02,280:root:<sqlite3.Cursor object at 0x0000022F1AADDB90>
2020-05-07 15:54:02,280:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'User info:\n|Nikita (TSLA, GOOG, AAPL)', 'reply_to_message_id': 175, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-07 15:54:02,355:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":176,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856041,"reply_to_message":{"message_id":175,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856041,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]},"text":"User info:\\n|Nikita (TSLA, GOOG, AAPL)"}}'"
2020-05-07 15:54:02,379:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:54:22,421:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:54:22,522:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:54:42,562:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:54:42,664:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:55:02,705:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:55:02,805:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:55:22,851:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:55:22,952:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:55:42,997:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:55:43,097:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:56:03,143:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:56:03,243:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:56:23,286:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:56:23,387:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:56:43,429:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:56:43,530:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:57:03,572:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:57:03,673:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:57:23,713:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:57:23,813:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:57:43,856:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:57:43,957:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:58:04,002:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:58:04,102:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:58:24,146:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:58:24,246:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:58:44,287:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:58:44,389:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:59:04,434:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:59:04,535:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:59:24,578:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:59:24,679:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 15:59:44,721:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 15:59:44,822:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 16:00:04,861:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:00:04,962:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 16:00:25,004:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:00:25,104:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 16:00:45,147:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:00:45,247:aiogram:Make request: "getUpdates" with data: "{'offset': 416522454, 'timeout': 20}" and files "None"
2020-05-07 16:00:54,481:asyncio:Using selector: SelectSelector
2020-05-07 16:00:54,501:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 16:00:54,628:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 16:00:54,629:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 16:00:54,629:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:00:54,668:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:00:54,668:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 16:00:55,711:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:00:55,711:aiogram:Updates were skipped successfully.
2020-05-07 16:00:55,711:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 16:00:55,711:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:00:55,750:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:00:55,750:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 16:01:03,435:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522454,\n"message":{"message_id":177,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856462,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:01:03,436:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:01:03,436:root:<sqlite3.Cursor object at 0x000001EC1FB2CB90>
2020-05-07 16:01:03,436:root:<sqlite3.Cursor object at 0x000001EC1FB2CB90>
2020-05-07 16:01:03,436:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'User info:\n|Nikita (TSLA, GOOG, AAPL)', 'reply_to_message_id': 177, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-07 16:01:03,537:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:01:03,538:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":178,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856462,"reply_to_message":{"message_id":177,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856462,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]},"text":"User info:\\n|Nikita (TSLA, GOOG, AAPL)"}}'"
2020-05-07 16:01:23,698:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:01:23,798:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:01:43,855:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:01:43,955:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:02:04,008:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:02:04,109:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:02:24,162:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:02:24,263:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:02:44,316:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:02:44,417:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:03:04,470:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:03:04,572:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:03:24,625:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:03:24,727:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:03:44,781:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:03:44,882:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:04:04,937:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:04:05,038:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:04:25,092:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:04:25,193:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:04:45,248:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:04:45,348:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:05:05,402:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:05:05,503:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:05:25,555:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:05:25,657:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:05:45,710:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:05:45,811:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:06:05,864:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:06:05,965:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:06:26,017:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:06:26,118:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:06:46,170:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:06:46,271:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:07:06,324:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:07:06,424:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:07:26,480:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:07:26,580:aiogram:Make request: "getUpdates" with data: "{'offset': 416522455, 'timeout': 20}" and files "None"
2020-05-07 16:07:31,062:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522455,\n"message":{"message_id":179,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856850,"text":"/company","entities":[{"offset":0,"length":8,"type":"bot_command"}]}}]}'"
2020-05-07 16:07:31,062:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:07:31,062:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'str' object has no attribute 'startstwith'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 72, in message_handler
    if text and isinstance(text, str) and not text.startstwith('/'):
AttributeError: 'str' object has no attribute 'startstwith'
2020-05-07 16:07:31,148:aiogram:Make request: "getUpdates" with data: "{'offset': 416522456, 'timeout': 20}" and files "None"
2020-05-07 16:07:33,833:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522456,\n"message":{"message_id":180,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856852,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:07:33,833:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:07:33,834:root:<sqlite3.Cursor object at 0x000001EC1FB2CB90>
2020-05-07 16:07:33,834:root:<sqlite3.Cursor object at 0x000001EC1FB2CB90>
2020-05-07 16:07:33,834:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'User info:\n|Nikita (TSLA, GOOG, AAPL)', 'reply_to_message_id': 180, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-07 16:07:33,935:aiogram:Make request: "getUpdates" with data: "{'offset': 416522457, 'timeout': 20}" and files "None"
2020-05-07 16:07:33,943:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":181,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856853,"reply_to_message":{"message_id":180,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588856852,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]},"text":"User info:\\n|Nikita (TSLA, GOOG, AAPL)"}}'"
2020-05-07 16:07:54,104:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:07:54,205:aiogram:Make request: "getUpdates" with data: "{'offset': 416522457, 'timeout': 20}" and files "None"
2020-05-07 16:08:14,263:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:08:14,363:aiogram:Make request: "getUpdates" with data: "{'offset': 416522457, 'timeout': 20}" and files "None"
2020-05-07 16:08:34,420:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:08:34,521:aiogram:Make request: "getUpdates" with data: "{'offset': 416522457, 'timeout': 20}" and files "None"
2020-05-07 16:08:54,577:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:08:54,678:aiogram:Make request: "getUpdates" with data: "{'offset': 416522457, 'timeout': 20}" and files "None"
2020-05-07 16:09:14,734:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:09:14,835:aiogram:Make request: "getUpdates" with data: "{'offset': 416522457, 'timeout': 20}" and files "None"
2020-05-07 16:09:34,897:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:09:34,997:aiogram:Make request: "getUpdates" with data: "{'offset': 416522457, 'timeout': 20}" and files "None"
2020-05-07 16:09:55,052:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:09:55,153:aiogram:Make request: "getUpdates" with data: "{'offset': 416522457, 'timeout': 20}" and files "None"
2020-05-07 16:10:15,209:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:10:15,309:aiogram:Make request: "getUpdates" with data: "{'offset': 416522457, 'timeout': 20}" and files "None"
2020-05-07 16:10:26,188:asyncio:Using selector: SelectSelector
2020-05-07 16:10:26,203:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 16:10:26,329:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 16:10:26,329:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 16:10:26,329:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:10:26,369:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:10:26,369:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 16:10:27,410:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:10:27,410:aiogram:Updates were skipped successfully.
2020-05-07 16:10:27,410:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 16:10:27,411:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:10:27,450:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:10:27,451:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 16:10:27,878:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522457,\n"message":{"message_id":182,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588857026,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:10:27,878:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:10:27,879:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'User info:\n|Nikita (TSLA, GOOG, AAPL)', 'reply_to_message_id': 182, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-07 16:10:27,945:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":183,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588857027,"reply_to_message":{"message_id":182,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588857026,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]},"text":"User info:\\n|Nikita (TSLA, GOOG, AAPL)"}}'"
2020-05-07 16:10:27,984:aiogram:Make request: "getUpdates" with data: "{'offset': 416522458, 'timeout': 20}" and files "None"
2020-05-07 16:10:48,026:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:10:48,126:aiogram:Make request: "getUpdates" with data: "{'offset': 416522458, 'timeout': 20}" and files "None"
2020-05-07 16:11:08,169:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:11:08,270:aiogram:Make request: "getUpdates" with data: "{'offset': 416522458, 'timeout': 20}" and files "None"
2020-05-07 16:11:28,314:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:11:28,414:aiogram:Make request: "getUpdates" with data: "{'offset': 416522458, 'timeout': 20}" and files "None"
2020-05-07 16:11:48,455:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:11:48,555:aiogram:Make request: "getUpdates" with data: "{'offset': 416522458, 'timeout': 20}" and files "None"
2020-05-07 16:12:08,598:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:12:08,698:aiogram:Make request: "getUpdates" with data: "{'offset': 416522458, 'timeout': 20}" and files "None"
2020-05-07 16:12:28,740:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:12:28,841:aiogram:Make request: "getUpdates" with data: "{'offset': 416522458, 'timeout': 20}" and files "None"
2020-05-07 16:12:48,880:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:12:48,981:aiogram:Make request: "getUpdates" with data: "{'offset': 416522458, 'timeout': 20}" and files "None"
2020-05-07 16:13:09,022:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:13:09,122:aiogram:Make request: "getUpdates" with data: "{'offset': 416522458, 'timeout': 20}" and files "None"
2020-05-07 16:13:20,816:asyncio:Using selector: SelectSelector
2020-05-07 16:13:20,835:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 16:13:20,998:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 16:13:20,999:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 16:13:20,999:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:13:21,052:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:13:21,052:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 16:13:22,104:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:13:22,104:aiogram:Updates were skipped successfully.
2020-05-07 16:13:22,104:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 16:13:22,104:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:13:22,155:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:13:22,155:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 16:13:25,298:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522458,\n"message":{"message_id":184,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588857204,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:13:25,298:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:25:28,453:asyncio:Using selector: SelectSelector
2020-05-07 16:25:28,468:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 16:25:28,597:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 16:25:28,597:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 16:25:28,597:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:25:28,636:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-07 16:25:28,636:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 16:25:28,676:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522458,\n"message":{"message_id":184,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588857204,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:25:28,677:aiogram:Updates were skipped successfully.
2020-05-07 16:25:28,677:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 16:25:28,677:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:25:28,717:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-07 16:25:28,717:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 16:25:28,756:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522458,\n"message":{"message_id":184,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588857204,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:25:28,757:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:25:28,758:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'User info:\n|Nikita (TSLA, GOOG, AAPL)\n* NikitaUnknown (TSLA, AMZN, FB)', 'reply_to_message_id': 184, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-07 16:25:28,840:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":185,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588857927,"reply_to_message":{"message_id":184,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588857204,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]},"text":"User info:\\n|Nikita (TSLA, GOOG, AAPL)\\n* NikitaUnknown (TSLA, AMZN, FB)"}}'"
2020-05-07 16:25:28,863:aiogram:Make request: "getUpdates" with data: "{'offset': 416522459, 'timeout': 20}" and files "None"
2020-05-07 16:25:34,255:asyncio:Using selector: SelectSelector
2020-05-07 16:25:34,269:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 16:25:34,394:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 16:25:34,394:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 16:25:34,394:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:25:34,435:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:25:34,435:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 16:25:35,475:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:25:35,475:aiogram:Updates were skipped successfully.
2020-05-07 16:25:35,475:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 16:25:35,475:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:25:35,517:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:25:35,517:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 16:25:37,155:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522459,\n"message":{"message_id":186,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588857936,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:25:37,155:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:25:37,156:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'User info:\n|Nikita (TSLA, GOOG, AAPL)\n* NikitaUnknown (TSLA, AMZN, FB)', 'reply_to_message_id': 186, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-07 16:25:37,222:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":187,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588857936,"reply_to_message":{"message_id":186,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588857936,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]},"text":"User info:\\n|Nikita (TSLA, GOOG, AAPL)\\n* NikitaUnknown (TSLA, AMZN, FB)"}}'"
2020-05-07 16:25:37,245:aiogram:Make request: "getUpdates" with data: "{'offset': 416522460, 'timeout': 20}" and files "None"
2020-05-07 16:25:57,287:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:25:57,389:aiogram:Make request: "getUpdates" with data: "{'offset': 416522460, 'timeout': 20}" and files "None"
2020-05-07 16:26:17,432:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:26:17,532:aiogram:Make request: "getUpdates" with data: "{'offset': 416522460, 'timeout': 20}" and files "None"
2020-05-07 16:26:37,574:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:26:37,674:aiogram:Make request: "getUpdates" with data: "{'offset': 416522460, 'timeout': 20}" and files "None"
2020-05-07 16:26:57,716:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:26:57,816:aiogram:Make request: "getUpdates" with data: "{'offset': 416522460, 'timeout': 20}" and files "None"
2020-05-07 16:27:03,261:asyncio:Using selector: SelectSelector
2020-05-07 16:27:03,274:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 16:27:03,397:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 16:27:03,397:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 16:27:03,397:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:27:03,437:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-07 16:27:03,437:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 16:27:03,477:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522460,\n"message":{"message_id":188,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858021,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:27:03,478:aiogram:Updates were skipped successfully.
2020-05-07 16:27:03,478:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 16:27:03,478:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:27:03,518:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-07 16:27:03,518:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 16:27:03,558:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522460,\n"message":{"message_id":188,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858021,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:27:03,558:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:27:03,559:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'User info:|\nNikita (TSLA, GOOG, AAPL)\n| NikitaUnknown (TSLA, AMZN, FB)', 'reply_to_message_id': 188, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-07 16:27:03,625:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":189,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858022,"reply_to_message":{"message_id":188,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858021,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]},"text":"User info:|\\nNikita (TSLA, GOOG, AAPL)\\n| NikitaUnknown (TSLA, AMZN, FB)"}}'"
2020-05-07 16:27:03,649:aiogram:Make request: "getUpdates" with data: "{'offset': 416522461, 'timeout': 20}" and files "None"
2020-05-07 16:27:23,690:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:27:23,791:aiogram:Make request: "getUpdates" with data: "{'offset': 416522461, 'timeout': 20}" and files "None"
2020-05-07 16:27:43,833:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:27:43,933:aiogram:Make request: "getUpdates" with data: "{'offset': 416522461, 'timeout': 20}" and files "None"
2020-05-07 16:28:03,974:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:28:04,075:aiogram:Make request: "getUpdates" with data: "{'offset': 416522461, 'timeout': 20}" and files "None"
2020-05-07 16:28:24,115:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:28:24,216:aiogram:Make request: "getUpdates" with data: "{'offset': 416522461, 'timeout': 20}" and files "None"
2020-05-07 16:28:44,257:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:28:44,357:aiogram:Make request: "getUpdates" with data: "{'offset': 416522461, 'timeout': 20}" and files "None"
2020-05-07 16:28:55,506:asyncio:Using selector: SelectSelector
2020-05-07 16:28:55,519:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 16:28:55,676:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 16:28:55,677:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 16:28:55,677:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:28:55,729:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:28:55,729:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 16:28:55,931:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522461,\n"message":{"message_id":190,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858134,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:28:55,931:aiogram:Updates were skipped successfully.
2020-05-07 16:28:55,931:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 16:28:55,931:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:28:55,982:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-07 16:28:55,982:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 16:28:56,033:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522461,\n"message":{"message_id":190,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858134,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:28:56,033:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:28:56,034:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'User info:|\nNikita (TSLA, GOOG, AAPL)\n| NikitaUnknown (TSLA, AMZN, FB)', 'reply_to_message_id': 190, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-07 16:28:56,113:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":191,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858135,"reply_to_message":{"message_id":190,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858134,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]},"text":"User info:|\\nNikita (TSLA, GOOG, AAPL)\\n| NikitaUnknown (TSLA, AMZN, FB)"}}'"
2020-05-07 16:28:56,136:aiogram:Make request: "getUpdates" with data: "{'offset': 416522462, 'timeout': 20}" and files "None"
2020-05-07 16:29:16,188:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:29:16,289:aiogram:Make request: "getUpdates" with data: "{'offset': 416522462, 'timeout': 20}" and files "None"
2020-05-07 16:29:36,341:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:29:36,441:aiogram:Make request: "getUpdates" with data: "{'offset': 416522462, 'timeout': 20}" and files "None"
2020-05-07 16:29:49,059:asyncio:Using selector: SelectSelector
2020-05-07 16:29:49,074:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 16:29:49,202:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 16:29:49,202:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 16:29:49,202:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:29:49,243:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:29:49,243:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 16:29:49,448:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522462,\n"message":{"message_id":192,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858188,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:29:49,448:aiogram:Updates were skipped successfully.
2020-05-07 16:29:49,448:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 16:29:49,448:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:29:49,489:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-07 16:29:49,489:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 16:29:49,530:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522462,\n"message":{"message_id":192,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858188,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-07 16:29:49,531:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:29:49,531:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'User info:\n| Nikita (TSLA, GOOG, AAPL)\n| NikitaUnknown (TSLA, AMZN, FB)', 'reply_to_message_id': 192, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-07 16:29:49,618:aiogram:Make request: "getUpdates" with data: "{'offset': 416522463, 'timeout': 20}" and files "None"
2020-05-07 16:29:49,673:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":193,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858188,"reply_to_message":{"message_id":192,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858188,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]},"text":"User info:\\n| Nikita (TSLA, GOOG, AAPL)\\n| NikitaUnknown (TSLA, AMZN, FB)"}}'"
2020-05-07 16:30:09,792:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:30:09,892:aiogram:Make request: "getUpdates" with data: "{'offset': 416522463, 'timeout': 20}" and files "None"
2020-05-07 16:30:29,947:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:30:30,047:aiogram:Make request: "getUpdates" with data: "{'offset': 416522463, 'timeout': 20}" and files "None"
2020-05-07 16:30:50,104:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:30:50,204:aiogram:Make request: "getUpdates" with data: "{'offset': 416522463, 'timeout': 20}" and files "None"
2020-05-07 16:31:10,259:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:31:10,359:aiogram:Make request: "getUpdates" with data: "{'offset': 416522463, 'timeout': 20}" and files "None"
2020-05-07 16:31:30,416:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:31:30,517:aiogram:Make request: "getUpdates" with data: "{'offset': 416522463, 'timeout': 20}" and files "None"
2020-05-07 16:31:50,572:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:31:50,673:aiogram:Make request: "getUpdates" with data: "{'offset': 416522463, 'timeout': 20}" and files "None"
2020-05-07 16:32:10,728:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:32:10,828:aiogram:Make request: "getUpdates" with data: "{'offset': 416522463, 'timeout': 20}" and files "None"
2020-05-07 16:32:18,014:asyncio:Using selector: SelectSelector
2020-05-07 16:32:18,029:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 16:32:18,207:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 16:32:18,207:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 16:32:18,207:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:32:18,263:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:32:18,263:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 16:32:19,320:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:32:19,320:aiogram:Updates were skipped successfully.
2020-05-07 16:32:19,320:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 16:32:19,321:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:32:19,378:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:32:19,379:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 16:32:24,256:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522463,\n"message":{"message_id":194,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858343,"text":"g"}}]}'"
2020-05-07 16:32:24,256:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:32:24,256:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'str' object has no attribute 'startstwith'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 71, in message_handler
    if text and isinstance(text, str) and not text.startstwith('/'):
AttributeError: 'str' object has no attribute 'startstwith'
2020-05-07 16:32:24,358:aiogram:Make request: "getUpdates" with data: "{'offset': 416522464, 'timeout': 20}" and files "None"
2020-05-07 16:32:44,415:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:32:44,516:aiogram:Make request: "getUpdates" with data: "{'offset': 416522464, 'timeout': 20}" and files "None"
2020-05-07 16:32:59,366:asyncio:Using selector: SelectSelector
2020-05-07 16:32:59,381:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-07 16:32:59,508:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-07 16:32:59,508:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-07 16:32:59,508:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:32:59,548:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-07 16:32:59,548:aiogram:Make request: "getUpdates" with data: "{'offset': -1, 'timeout': 1}" and files "None"
2020-05-07 16:33:00,014:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522464,\n"message":{"message_id":195,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858379,"text":"asdf"}}]}'"
2020-05-07 16:33:00,014:aiogram:Updates were skipped successfully.
2020-05-07 16:33:00,015:aiogram.dispatcher.dispatcher:Start polling.
2020-05-07 16:33:00,015:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-07 16:33:00,055:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-07 16:33:00,055:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-07 16:33:00,097:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522464,\n"message":{"message_id":195,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858379,"text":"asdf"}}]}'"
2020-05-07 16:33:00,097:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:33:00,098:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello man!<', 'reply_markup': '{"keyboard": [[{"text": "Stock"}, {"text": "Hello"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-07 16:33:00,167:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":196,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858379,"text":"Hello man!<"}}'"
2020-05-07 16:33:00,206:aiogram:Make request: "getUpdates" with data: "{'offset': 416522465, 'timeout': 20}" and files "None"
2020-05-07 16:33:14,723:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522465,\n"message":{"message_id":197,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858393,"text":"Stock"}}]}'"
2020-05-07 16:33:14,723:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:33:14,832:aiogram:Make request: "getUpdates" with data: "{'offset': 416522466, 'timeout': 20}" and files "None"
2020-05-07 16:33:24,014:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522466,\n"message":{"message_id":198,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858403,"text":"User"}}]}'"
2020-05-07 16:33:24,014:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:33:24,116:aiogram:Make request: "getUpdates" with data: "{'offset': 416522467, 'timeout': 20}" and files "None"
2020-05-07 16:33:24,541:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522467,\n"message":{"message_id":199,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858403,"text":"Hello"}}]}'"
2020-05-07 16:33:24,541:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:33:24,542:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello man!<', 'reply_markup': '{"keyboard": [[{"text": "Stock"}, {"text": "Hello"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-07 16:33:24,610:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":200,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858403,"text":"Hello man!<"}}'"
2020-05-07 16:33:24,633:aiogram:Make request: "getUpdates" with data: "{'offset': 416522468, 'timeout': 20}" and files "None"
2020-05-07 16:33:26,744:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":416522468,\n"message":{"message_id":201,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858405,"text":"Hello"}}]}'"
2020-05-07 16:33:26,744:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-07 16:33:26,745:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello man!<', 'reply_markup': '{"keyboard": [[{"text": "Stock"}, {"text": "Hello"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-07 16:33:26,812:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":202,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1588858405,"text":"Hello man!<"}}'"
2020-05-07 16:33:26,850:aiogram:Make request: "getUpdates" with data: "{'offset': 416522469, 'timeout': 20}" and files "None"
2020-05-07 16:33:46,891:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:33:46,991:aiogram:Make request: "getUpdates" with data: "{'offset': 416522469, 'timeout': 20}" and files "None"
2020-05-07 16:34:07,033:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:34:07,134:aiogram:Make request: "getUpdates" with data: "{'offset': 416522469, 'timeout': 20}" and files "None"
2020-05-07 16:34:27,182:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-07 16:34:27,284:aiogram:Make request: "getUpdates" with data: "{'offset': 416522469, 'timeout': 20}" and files "None"
2020-05-17 16:06:32,607:asyncio:Using selector: SelectSelector
2020-05-17 16:06:32,686:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-17 16:06:32,869:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-17 16:06:32,869:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-17 16:06:32,869:aiogram.dispatcher.dispatcher:Start polling.
2020-05-17 16:06:32,869:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-17 16:06:32,909:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-17 16:06:32,909:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:06:52,952:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:06:53,052:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:07:13,094:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:07:13,195:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:07:33,236:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:07:33,337:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:07:53,379:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:07:53,479:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:08:13,521:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:08:13,621:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:08:33,663:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:08:33,764:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:08:53,805:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:08:53,905:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:09:13,947:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:09:14,047:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:09:34,088:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:09:34,189:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:09:54,230:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:09:54,330:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:10:14,371:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:10:14,472:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:10:34,511:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:10:34,613:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:10:54,654:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:10:54,755:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:11:14,796:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:11:14,896:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:11:34,937:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:11:35,038:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:11:55,078:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:11:55,178:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:12:15,220:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:12:15,321:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:12:35,363:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:12:35,463:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:12:55,507:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:12:55,608:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:13:15,651:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:13:15,752:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:13:35,793:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:13:35,893:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:13:55,935:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:13:56,036:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:14:16,078:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:14:16,178:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:14:36,219:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:14:36,320:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:14:56,361:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:14:56,461:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:15:16,502:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:15:16,603:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:15:36,645:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:15:36,745:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:15:56,787:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:15:56,887:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:16:16,928:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:16:17,030:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:16:37,072:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:16:37,173:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:16:57,213:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:16:57,314:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:17:17,355:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:17:17,455:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:17:37,496:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:17:37,597:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:17:57,639:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:17:57,740:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:18:17,780:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:18:17,882:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:18:37,924:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:18:38,024:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:18:58,064:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:18:58,165:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:19:18,206:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:19:18,307:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:19:38,348:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:19:38,449:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:19:58,491:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:19:58,592:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:20:18,631:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:20:18,734:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:20:38,776:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:20:38,877:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:20:58,920:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:20:59,020:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:21:19,061:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:21:19,162:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:21:39,203:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:21:39,304:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:21:59,346:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:21:59,447:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:22:19,490:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:22:19,590:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:22:39,634:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:22:39,735:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:22:59,777:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:22:59,877:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:23:19,918:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:23:20,019:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:23:40,061:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:23:40,161:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:24:00,204:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:24:00,304:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:24:20,345:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:24:20,446:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:24:40,486:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:24:40,586:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:25:00,627:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:25:00,728:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:25:20,771:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:25:20,872:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:25:40,913:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:25:41,014:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:26:01,056:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:26:01,156:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:26:21,197:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:26:21,298:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:26:41,339:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:26:41,440:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:27:01,490:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:27:01,591:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:27:21,632:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:27:21,733:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:27:41,773:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:27:41,875:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:28:01,916:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:28:02,017:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:28:22,058:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:28:22,159:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:28:42,199:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:28:42,300:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:29:02,342:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:29:02,443:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:29:22,484:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:29:22,584:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:29:42,625:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:29:42,726:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:30:02,767:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:30:02,867:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:30:22,908:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:30:23,008:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:30:43,050:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:30:43,150:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:31:03,192:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:31:03,293:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:31:23,335:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:31:23,435:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:31:43,476:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:31:43,577:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:32:03,622:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:32:03,723:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:32:23,764:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:32:23,865:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:32:43,906:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:32:44,006:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:33:04,049:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:33:04,150:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:33:24,191:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:33:24,291:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:33:44,332:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:33:44,433:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:34:04,472:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:34:04,574:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:34:24,614:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:34:24,715:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:34:44,758:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:34:44,858:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:35:04,900:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:35:05,000:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:35:25,041:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:35:25,141:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:35:45,182:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:35:45,282:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:36:05,323:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:36:05,424:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:36:25,464:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:36:25,565:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:36:45,607:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:36:45,709:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:37:05,751:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:37:05,853:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:37:25,894:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:37:25,995:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:37:46,036:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:37:46,137:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:38:06,178:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:38:06,279:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:38:26,322:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:38:26,422:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:38:46,469:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:38:46,569:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:39:06,616:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:39:06,718:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:39:26,762:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:39:26,862:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:39:47,033:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:39:47,133:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:40:07,190:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:40:07,291:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:40:27,347:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:40:27,448:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:40:47,506:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:40:47,607:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:41:07,664:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:41:07,764:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:41:27,822:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:41:27,922:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:41:47,978:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:41:48,079:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:42:08,138:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:42:08,239:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:42:28,295:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:42:28,397:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:42:48,454:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:42:48,554:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:43:08,609:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:43:08,710:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:43:28,766:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:43:28,867:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:43:48,925:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:43:49,026:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:44:09,082:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:44:09,182:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:44:29,238:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:44:29,339:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:44:49,397:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:44:49,498:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:45:09,555:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:45:09,660:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:45:29,719:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:45:29,820:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:45:49,875:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:45:49,976:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:46:10,033:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:46:10,133:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:46:30,190:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:46:30,290:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:46:50,347:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:46:50,447:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:47:10,505:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:47:10,606:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:47:30,661:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:47:30,762:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:47:50,817:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:47:50,918:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:48:10,974:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:48:11,076:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:48:31,132:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:48:31,233:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:48:51,290:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:48:51,390:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:49:11,449:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:49:11,550:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-17 16:49:31,607:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-17 16:49:31,707:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 13:04:15,787:asyncio:Using selector: SelectSelector
2020-05-24 13:04:15,866:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 13:04:16,142:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 13:04:16,142:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 13:04:16,142:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 13:04:16,142:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 13:04:16,196:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":2}}'"
2020-05-24 13:04:16,196:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 13:04:16,252:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734971,\n"message":{"message_id":203,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314646,"text":"Hello"}},{"update_id":210734972,\n"message":{"message_id":204,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314654,"text":"Hello"}}]}'"
2020-05-24 13:04:16,252:aiogram.dispatcher.dispatcher:Received 2 updates.
2020-05-24 13:04:16,253:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello!', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 13:04:16,254:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello!', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 13:04:16,356:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":205,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314656,"text":"Hello!"}}'"
2020-05-24 13:04:16,356:aiogram:Make request: "getUpdates" with data: "{'offset': 210734973, 'timeout': 20}" and files "None"
2020-05-24 13:04:16,695:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":206,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314656,"text":"Hello!"}}'"
2020-05-24 13:04:23,490:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734973,\n"message":{"message_id":207,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314663,"text":"Stock"}}]}'"
2020-05-24 13:04:23,490:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 13:04:23,491:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello!', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 13:04:23,592:aiogram:Make request: "getUpdates" with data: "{'offset': 210734974, 'timeout': 20}" and files "None"
2020-05-24 13:04:23,687:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":208,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314663,"text":"Hello!"}}'"
2020-05-24 13:04:29,982:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734974,\n"message":{"message_id":209,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314670,"text":"User"}}]}'"
2020-05-24 13:04:29,983:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 13:04:29,983:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello!', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 13:04:30,066:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":210,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314670,"text":"Hello!"}}'"
2020-05-24 13:04:30,088:aiogram:Make request: "getUpdates" with data: "{'offset': 210734975, 'timeout': 20}" and files "None"
2020-05-24 13:04:42,860:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734975,\n"message":{"message_id":211,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314682,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-24 13:04:42,860:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 13:04:42,860:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'User info:\n| Nikita (TSLA, GOOG, AAPL)\n| NikitaUnknown (TSLA, AMZN, FB)', 'reply_to_message_id': 211, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-24 13:04:42,962:aiogram:Make request: "getUpdates" with data: "{'offset': 210734976, 'timeout': 20}" and files "None"
2020-05-24 13:04:42,970:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":212,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314683,"reply_to_message":{"message_id":211,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314682,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]},"text":"User info:\\n| Nikita (TSLA, GOOG, AAPL)\\n| NikitaUnknown (TSLA, AMZN, FB)"}}'"
2020-05-24 13:05:03,086:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:05:03,187:aiogram:Make request: "getUpdates" with data: "{'offset': 210734976, 'timeout': 20}" and files "None"
2020-05-24 13:05:17,879:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734976,\n"message":{"message_id":213,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314717,"text":"Hello"}}]}'"
2020-05-24 13:05:17,880:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 13:05:17,880:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello!', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 13:05:17,981:aiogram:Make request: "getUpdates" with data: "{'offset': 210734977, 'timeout': 20}" and files "None"
2020-05-24 13:05:18,011:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":214,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314718,"text":"Hello!"}}'"
2020-05-24 13:05:21,481:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734977,\n"message":{"message_id":215,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314721,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 13:05:21,481:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 13:05:21,482:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-24 13:05:21,571:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":216,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314721,"text":"Hello!\\nI\'m StockBot, and I can help you monitor popular companies and their market prices!"}}'"
2020-05-24 13:05:21,571:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /company'}" and files "None"
2020-05-24 13:05:21,572:aiogram:Make request: "getUpdates" with data: "{'offset': 210734978, 'timeout': 20}" and files "None"
2020-05-24 13:05:21,661:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":217,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314721,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /company","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":8,"type":"bot_command"}]}}'"
2020-05-24 13:05:41,612:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:05:41,713:aiogram:Make request: "getUpdates" with data: "{'offset': 210734978, 'timeout': 20}" and files "None"
2020-05-24 13:05:46,084:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734978,\n"message":{"message_id":218,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314746,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 13:05:46,084:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 13:05:46,086:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-24 13:05:46,786:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-24 13:05:46,983:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Tesla shares cost in:\n>>Tesla: 816.4$'}" and files "None"
2020-05-24 13:05:46,984:aiogram:Make request: "getUpdates" with data: "{'offset': 210734979, 'timeout': 20}" and files "None"
2020-05-24 13:05:47,146:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":219,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314747,"text":"Tesla shares cost in:\\n>>Tesla: 816.4$"}}'"
2020-05-24 13:05:53,776:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734979,\n"message":{"message_id":220,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314753,"text":"/help","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-24 13:05:53,776:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 13:05:53,776:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-24 13:05:53,872:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":221,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314753,"text":"Hello!\\nI\'m StockBot, and I can help you monitor popular companies and their market prices!"}}'"
2020-05-24 13:05:53,872:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /company'}" and files "None"
2020-05-24 13:05:53,872:aiogram:Make request: "getUpdates" with data: "{'offset': 210734980, 'timeout': 20}" and files "None"
2020-05-24 13:05:53,955:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":222,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314754,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /company","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":8,"type":"bot_command"}]}}'"
2020-05-24 13:05:56,007:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734980,\n"message":{"message_id":223,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314756,"text":"/company","entities":[{"offset":0,"length":8,"type":"bot_command"}]}}]}'"
2020-05-24 13:05:56,007:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 13:05:56,007:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello!', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 13:05:56,095:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":224,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590314756,"text":"Hello!"}}'"
2020-05-24 13:05:56,118:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:06:16,159:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:06:16,259:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:06:36,300:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:06:36,400:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:06:56,447:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:06:56,547:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:07:16,588:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:07:16,689:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:07:36,729:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:07:36,831:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:07:56,871:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:07:56,972:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:08:17,012:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:08:17,113:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:08:37,152:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:08:37,254:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:08:57,295:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:08:57,396:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:09:17,439:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:09:17,540:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:09:37,582:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:09:37,682:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:09:57,724:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:09:57,824:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:10:17,866:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:10:17,966:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:10:38,007:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:10:38,108:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:10:58,148:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:10:58,249:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:11:18,289:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:11:18,391:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:11:38,433:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:11:38,534:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:11:58,574:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:11:58,675:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:12:18,717:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:12:18,818:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:12:38,859:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:12:38,960:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:12:59,000:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:12:59,102:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:13:19,144:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:13:19,244:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:13:39,285:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:13:39,385:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:13:59,426:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:13:59,527:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:14:19,567:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:14:19,668:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:14:39,708:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:14:39,809:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:14:59,850:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:14:59,952:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:15:19,992:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:15:20,093:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:15:40,134:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:15:40,235:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 13:16:00,282:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 13:16:00,383:aiogram:Make request: "getUpdates" with data: "{'offset': 210734981, 'timeout': 20}" and files "None"
2020-05-24 14:45:21,941:asyncio:Using selector: SelectSelector
2020-05-24 14:45:21,957:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 14:45:22,148:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 14:45:22,148:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 14:45:22,149:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 14:45:22,149:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 14:45:22,204:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 14:45:22,204:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:45:42,267:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:45:42,367:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:45:58,779:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734981,\n"message":{"message_id":225,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590320758,"text":"\\u0425\\u0435\\u0439"}}]}'"
2020-05-24 14:45:58,779:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:45:58,779:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('can only concatenate str (not "int") to str')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 134, in message_handler
    await message.answer(text='Hello! ' + message.from_user.id, reply_markup=reply_markup)
TypeError: can only concatenate str (not "int") to str
2020-05-24 14:45:58,880:aiogram:Make request: "getUpdates" with data: "{'offset': 210734982, 'timeout': 20}" and files "None"
2020-05-24 14:46:04,288:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734982,\n"message":{"message_id":226,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590320764,"text":"Hey"}}]}'"
2020-05-24 14:46:04,288:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:46:04,289:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('can only concatenate str (not "int") to str')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 134, in message_handler
    await message.answer(text='Hello! ' + message.from_user.id, reply_markup=reply_markup)
TypeError: can only concatenate str (not "int") to str
2020-05-24 14:46:04,374:aiogram:Make request: "getUpdates" with data: "{'offset': 210734983, 'timeout': 20}" and files "None"
2020-05-24 14:46:24,430:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:46:24,531:aiogram:Make request: "getUpdates" with data: "{'offset': 210734983, 'timeout': 20}" and files "None"
2020-05-24 14:46:30,372:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734983,\n"message":{"message_id":227,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590320790,"text":"Hh"}}]}'"
2020-05-24 14:46:30,372:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:46:30,373:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('can only concatenate str (not "int") to str')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 134, in message_handler
    await message.answer(text='Hello! ' + message.from_user.id, reply_markup=reply_markup)
TypeError: can only concatenate str (not "int") to str
2020-05-24 14:46:30,473:aiogram:Make request: "getUpdates" with data: "{'offset': 210734984, 'timeout': 20}" and files "None"
2020-05-24 14:46:34,875:asyncio:Using selector: SelectSelector
2020-05-24 14:46:34,896:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 14:46:35,065:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 14:46:35,066:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 14:46:35,066:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 14:46:35,066:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 14:46:35,118:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 14:46:35,118:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:46:38,744:asyncio:Using selector: SelectSelector
2020-05-24 14:46:38,761:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 14:46:38,884:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 14:46:38,884:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 14:46:38,884:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 14:46:38,884:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 14:46:38,923:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 14:46:38,923:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:46:41,994:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734984,\n"message":{"message_id":228,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590320801,"text":"H"}}]}'"
2020-05-24 14:46:41,994:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:46:41,995:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('can only concatenate str (not "int") to str')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 134, in message_handler
    await message.answer(text='Hello! ' + message.from_user.id, reply_markup=reply_markup)
TypeError: can only concatenate str (not "int") to str
2020-05-24 14:46:42,096:aiogram:Make request: "getUpdates" with data: "{'offset': 210734985, 'timeout': 20}" and files "None"
2020-05-24 14:47:02,137:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:47:02,237:aiogram:Make request: "getUpdates" with data: "{'offset': 210734985, 'timeout': 20}" and files "None"
2020-05-24 14:47:13,279:asyncio:Using selector: SelectSelector
2020-05-24 14:47:13,294:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 14:47:13,423:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 14:47:13,423:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 14:47:13,423:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 14:47:13,423:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 14:47:13,464:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 14:47:13,464:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:47:14,106:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734985,\n"message":{"message_id":229,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590320833,"text":"G"}}]}'"
2020-05-24 14:47:14,106:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:47:14,106:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello! ', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 14:47:14,175:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":230,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590320833,"text":"Hello!"}}'"
2020-05-24 14:47:14,213:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:47:34,256:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:47:34,356:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:47:54,399:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:47:54,499:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:48:14,541:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:48:14,642:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:48:34,684:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:48:34,784:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:48:54,825:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:48:54,926:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:49:14,969:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:49:15,069:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:49:35,111:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:49:35,212:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:49:55,254:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:49:55,354:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:50:15,395:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:50:15,496:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:50:35,537:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:50:35,638:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:50:55,680:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:50:55,781:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:51:15,825:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:51:15,925:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:51:35,968:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:51:36,068:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:51:56,110:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:51:56,211:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:52:16,253:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:52:16,354:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:52:36,396:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:52:36,496:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:52:56,538:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:52:56,638:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:53:16,679:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:53:16,780:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:53:36,822:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:53:36,923:aiogram:Make request: "getUpdates" with data: "{'offset': 210734986, 'timeout': 20}" and files "None"
2020-05-24 14:53:52,821:asyncio:Using selector: SelectSelector
2020-05-24 14:53:52,835:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 14:53:52,961:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 14:53:52,961:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 14:53:52,961:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 14:53:52,961:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 14:53:53,003:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 14:53:53,003:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:54:00,371:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734986,\n"message":{"message_id":231,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321240,"text":"fa"}}]}'"
2020-05-24 14:54:00,371:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:54:00,372:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('can only concatenate str (not "int") to str')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 134, in message_handler
    await message.answer(text='Hello! ' + message.from_user.id, reply_markup=reply_markup)
TypeError: can only concatenate str (not "int") to str
2020-05-24 14:54:00,474:aiogram:Make request: "getUpdates" with data: "{'offset': 210734987, 'timeout': 20}" and files "None"
2020-05-24 14:54:20,514:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:54:20,614:aiogram:Make request: "getUpdates" with data: "{'offset': 210734987, 'timeout': 20}" and files "None"
2020-05-24 14:54:40,656:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:54:40,756:aiogram:Make request: "getUpdates" with data: "{'offset': 210734987, 'timeout': 20}" and files "None"
2020-05-24 14:54:49,560:asyncio:Using selector: SelectSelector
2020-05-24 14:54:49,574:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 14:54:49,745:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 14:54:49,745:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 14:54:49,745:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 14:54:49,745:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 14:54:49,801:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 14:54:49,801:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:54:55,076:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734987,\n"message":{"message_id":232,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321294,"text":"Hr"}}]}'"
2020-05-24 14:54:55,076:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:54:55,077:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello! 425452377', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 14:54:55,178:aiogram:Make request: "getUpdates" with data: "{'offset': 210734988, 'timeout': 20}" and files "None"
2020-05-24 14:54:55,186:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":233,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321294,"text":"Hello! 425452377"}}'"
2020-05-24 14:55:15,297:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:55:15,398:aiogram:Make request: "getUpdates" with data: "{'offset': 210734988, 'timeout': 20}" and files "None"
2020-05-24 14:55:35,442:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:55:35,542:aiogram:Make request: "getUpdates" with data: "{'offset': 210734988, 'timeout': 20}" and files "None"
2020-05-24 14:55:45,290:asyncio:Using selector: SelectSelector
2020-05-24 14:55:45,303:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 14:55:45,461:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 14:55:45,461:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 14:55:45,461:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 14:55:45,461:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 14:55:45,511:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 14:55:45,511:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:55:47,543:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734988,\n"message":{"message_id":234,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321347,"text":"Stock"}}]}'"
2020-05-24 14:55:47,543:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:55:47,544:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello! Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 14:55:47,620:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":235,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321347,"text":"Hello! Nikita"}}'"
2020-05-24 14:55:47,643:aiogram:Make request: "getUpdates" with data: "{'offset': 210734989, 'timeout': 20}" and files "None"
2020-05-24 14:56:07,695:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:56:07,795:aiogram:Make request: "getUpdates" with data: "{'offset': 210734989, 'timeout': 20}" and files "None"
2020-05-24 14:56:27,846:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:56:27,948:aiogram:Make request: "getUpdates" with data: "{'offset': 210734989, 'timeout': 20}" and files "None"
2020-05-24 14:56:48,000:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:56:48,100:aiogram:Make request: "getUpdates" with data: "{'offset': 210734989, 'timeout': 20}" and files "None"
2020-05-24 14:57:08,153:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:57:08,253:aiogram:Make request: "getUpdates" with data: "{'offset': 210734989, 'timeout': 20}" and files "None"
2020-05-24 14:57:27,753:asyncio:Using selector: SelectSelector
2020-05-24 14:57:27,767:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 14:57:27,944:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 14:57:27,944:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 14:57:27,944:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 14:57:27,944:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 14:57:28,000:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 14:57:28,000:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:57:30,282:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734989,\n"message":{"message_id":236,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321449,"text":"Stock"}}]}'"
2020-05-24 14:57:30,282:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:57:30,282:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello! <property object at 0x0000023794E05818>', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 14:57:30,368:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":237,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321450,"text":"Hello! <property object at 0x0000023794E05818>"}}'"
2020-05-24 14:57:30,368:aiogram:Make request: "getUpdates" with data: "{'offset': 210734990, 'timeout': 20}" and files "None"
2020-05-24 14:57:50,426:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:57:50,526:aiogram:Make request: "getUpdates" with data: "{'offset': 210734990, 'timeout': 20}" and files "None"
2020-05-24 14:58:03,569:asyncio:Using selector: SelectSelector
2020-05-24 14:58:03,584:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 14:58:03,708:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 14:58:03,708:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 14:58:03,708:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 14:58:03,709:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 14:58:03,749:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 14:58:03,749:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:58:07,609:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734990,\n"message":{"message_id":238,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321487,"text":"Hey"}}]}'"
2020-05-24 14:58:07,609:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:58:07,610:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello! <property object at 0x0000019BB03359A8>', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 14:58:07,674:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":239,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321487,"text":"Hello! <property object at 0x0000019BB03359A8>"}}'"
2020-05-24 14:58:07,713:aiogram:Make request: "getUpdates" with data: "{'offset': 210734991, 'timeout': 20}" and files "None"
2020-05-24 14:58:27,755:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:58:27,856:aiogram:Make request: "getUpdates" with data: "{'offset': 210734991, 'timeout': 20}" and files "None"
2020-05-24 14:58:47,897:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:58:47,997:aiogram:Make request: "getUpdates" with data: "{'offset': 210734991, 'timeout': 20}" and files "None"
2020-05-24 14:59:08,039:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:59:08,140:aiogram:Make request: "getUpdates" with data: "{'offset': 210734991, 'timeout': 20}" and files "None"
2020-05-24 14:59:10,137:asyncio:Using selector: SelectSelector
2020-05-24 14:59:10,152:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 14:59:10,321:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 14:59:10,321:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 14:59:10,321:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 14:59:10,321:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 14:59:10,376:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 14:59:10,377:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:59:14,062:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734991,\n"message":{"message_id":240,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321553,"text":"Het"}}]}'"
2020-05-24 14:59:14,062:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:59:14,063:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello! [Nikita](tg://user?id=425452377)', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 14:59:14,163:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":241,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321553,"text":"Hello! [Nikita](tg://user?id=425452377)","entities":[{"offset":16,"length":23,"type":"url"}]}}'"
2020-05-24 14:59:14,164:aiogram:Make request: "getUpdates" with data: "{'offset': 210734992, 'timeout': 20}" and files "None"
2020-05-24 14:59:34,219:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 14:59:34,320:aiogram:Make request: "getUpdates" with data: "{'offset': 210734992, 'timeout': 20}" and files "None"
2020-05-24 14:59:50,257:asyncio:Using selector: SelectSelector
2020-05-24 14:59:50,271:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 14:59:50,436:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 14:59:50,436:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 14:59:50,436:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 14:59:50,436:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 14:59:50,490:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 14:59:50,490:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 14:59:52,850:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734992,\n"message":{"message_id":242,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321592,"text":"Ge"}}]}'"
2020-05-24 14:59:52,850:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 14:59:52,850:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello! @OneUnix', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-24 14:59:52,935:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":243,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590321592,"text":"Hello! @OneUnix","entities":[{"offset":7,"length":8,"type":"mention"}]}}'"
2020-05-24 14:59:52,936:aiogram:Make request: "getUpdates" with data: "{'offset': 210734993, 'timeout': 20}" and files "None"
2020-05-24 15:00:12,991:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:00:13,091:aiogram:Make request: "getUpdates" with data: "{'offset': 210734993, 'timeout': 20}" and files "None"
2020-05-24 15:00:33,147:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:00:33,247:aiogram:Make request: "getUpdates" with data: "{'offset': 210734993, 'timeout': 20}" and files "None"
2020-05-24 15:00:53,301:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:00:53,402:aiogram:Make request: "getUpdates" with data: "{'offset': 210734993, 'timeout': 20}" and files "None"
2020-05-24 15:45:35,133:asyncio:Using selector: SelectSelector
2020-05-24 15:45:35,153:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 15:45:35,281:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 15:45:35,281:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 15:45:35,281:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 15:45:35,281:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 15:45:35,321:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 15:45:35,321:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 15:45:45,343:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734993,\n"message":{"message_id":244,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324344,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 15:45:45,343:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 15:45:45,344:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'User' object has no attribute '__dict__'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 47, in start_handler
    reminder_action=None))
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user.__dict__
AttributeError: 'User' object has no attribute '__dict__'
2020-05-24 15:45:45,448:aiogram:Make request: "getUpdates" with data: "{'offset': 210734994, 'timeout': 20}" and files "None"
2020-05-24 15:46:05,489:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:46:05,589:aiogram:Make request: "getUpdates" with data: "{'offset': 210734994, 'timeout': 20}" and files "None"
2020-05-24 15:46:25,630:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:46:25,731:aiogram:Make request: "getUpdates" with data: "{'offset': 210734994, 'timeout': 20}" and files "None"
2020-05-24 15:46:45,772:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:46:45,872:aiogram:Make request: "getUpdates" with data: "{'offset': 210734994, 'timeout': 20}" and files "None"
2020-05-24 15:47:05,914:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:47:06,015:aiogram:Make request: "getUpdates" with data: "{'offset': 210734994, 'timeout': 20}" and files "None"
2020-05-24 15:47:26,057:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:47:26,157:aiogram:Make request: "getUpdates" with data: "{'offset': 210734994, 'timeout': 20}" and files "None"
2020-05-24 15:47:36,085:asyncio:Using selector: SelectSelector
2020-05-24 15:47:36,100:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 15:47:36,264:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 15:47:36,264:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 15:47:36,264:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 15:47:36,264:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 15:47:36,317:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 15:47:36,317:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 15:47:56,371:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:47:56,471:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 15:47:56,829:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734994,\n"message":{"message_id":245,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324476,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 15:47:56,829:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 15:47:56,830:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'User' object has no attribute '__dict__'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 47, in start_handler
    reminder_action=None))
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user.__dict__
AttributeError: 'User' object has no attribute '__dict__'
2020-05-24 15:47:56,931:aiogram:Make request: "getUpdates" with data: "{'offset': 210734995, 'timeout': 20}" and files "None"
2020-05-24 15:48:16,985:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:48:17,085:aiogram:Make request: "getUpdates" with data: "{'offset': 210734995, 'timeout': 20}" and files "None"
2020-05-24 15:48:37,141:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:48:37,242:aiogram:Make request: "getUpdates" with data: "{'offset': 210734995, 'timeout': 20}" and files "None"
2020-05-24 15:48:57,293:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:48:57,395:aiogram:Make request: "getUpdates" with data: "{'offset': 210734995, 'timeout': 20}" and files "None"
2020-05-24 15:49:07,894:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734995,\n"message":{"message_id":246,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324547,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 15:49:07,895:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 15:49:07,895:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'User' object has no attribute '__dict__'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 47, in start_handler
    reminder_action=None))
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user.__dict__
AttributeError: 'User' object has no attribute '__dict__'
2020-05-24 15:49:07,996:aiogram:Make request: "getUpdates" with data: "{'offset': 210734996, 'timeout': 20}" and files "None"
2020-05-24 15:49:28,049:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:49:28,149:aiogram:Make request: "getUpdates" with data: "{'offset': 210734996, 'timeout': 20}" and files "None"
2020-05-24 15:49:48,202:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:49:48,303:aiogram:Make request: "getUpdates" with data: "{'offset': 210734996, 'timeout': 20}" and files "None"
2020-05-24 15:50:08,355:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:50:08,456:aiogram:Make request: "getUpdates" with data: "{'offset': 210734996, 'timeout': 20}" and files "None"
2020-05-24 15:50:18,931:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734996,\n"message":{"message_id":247,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324618,"text":"/help","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-24 15:50:18,931:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 15:50:18,931:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /company'}" and files "None"
2020-05-24 15:50:19,022:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":248,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324618,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /company","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":8,"type":"bot_command"}]}}'"
2020-05-24 15:50:19,023:aiogram:Make request: "getUpdates" with data: "{'offset': 210734997, 'timeout': 20}" and files "None"
2020-05-24 15:50:26,145:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734997,\n"message":{"message_id":249,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324625,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 15:50:26,145:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 15:50:26,146:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'User' object has no attribute '__dict__'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 47, in start_handler
    reminder_action=None))
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user.__dict__
AttributeError: 'User' object has no attribute '__dict__'
2020-05-24 15:50:26,247:aiogram:Make request: "getUpdates" with data: "{'offset': 210734998, 'timeout': 20}" and files "None"
2020-05-24 15:50:41,170:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734998,\n"message":{"message_id":250,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324640,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 15:50:41,170:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 15:50:41,171:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'User' object has no attribute '__dict__'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 47, in start_handler
    reminder_action=None))
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user.__dict__
AttributeError: 'User' object has no attribute '__dict__'
2020-05-24 15:50:41,272:aiogram:Make request: "getUpdates" with data: "{'offset': 210734999, 'timeout': 20}" and files "None"
2020-05-24 15:50:44,098:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210734999,\n"message":{"message_id":251,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324643,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 15:50:44,098:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 15:50:44,099:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'User' object has no attribute '__dict__'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 47, in start_handler
    reminder_action=None))
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user.__dict__
AttributeError: 'User' object has no attribute '__dict__'
2020-05-24 15:50:44,200:aiogram:Make request: "getUpdates" with data: "{'offset': 210735000, 'timeout': 20}" and files "None"
2020-05-24 15:51:04,253:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 15:51:04,353:aiogram:Make request: "getUpdates" with data: "{'offset': 210735000, 'timeout': 20}" and files "None"
2020-05-24 15:51:11,961:asyncio:Using selector: SelectSelector
2020-05-24 15:51:11,981:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 15:51:12,123:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 15:51:12,124:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 15:51:12,124:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 15:51:12,124:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 15:51:12,165:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 15:51:12,165:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 15:51:12,573:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735000,\n"message":{"message_id":252,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324672,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 15:51:12,574:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 15:51:12,574:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-24 15:51:12,648:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":253,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324672,"text":"Hello!\\nI\'m StockBot, and I can help you monitor popular companies and their market prices!"}}'"
2020-05-24 15:51:12,648:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /companyList of all companies -- /companies'}" and files "None"
2020-05-24 15:51:12,673:aiogram:Make request: "getUpdates" with data: "{'offset': 210735001, 'timeout': 20}" and files "None"
2020-05-24 15:51:12,719:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":254,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324672,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /companyList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":12,"type":"bot_command"},{"offset":161,"length":10,"type":"bot_command"}]}}'"
2020-05-24 15:51:27,958:asyncio:Using selector: SelectSelector
2020-05-24 15:51:27,975:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 15:51:28,099:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 15:51:28,100:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 15:51:28,100:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 15:51:28,100:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 15:51:28,140:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 15:51:28,140:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 15:51:28,735:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735001,\n"message":{"message_id":255,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324688,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 15:51:28,736:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 15:54:20,221:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'User' object has no attribute '__dict__'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 47, in start_handler
    reminder_action=None))
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user.__dict__
AttributeError: 'User' object has no attribute '__dict__'
2020-05-24 15:54:20,223:aiogram:Make request: "getUpdates" with data: "{'offset': 210735002, 'timeout': 20}" and files "None"
2020-05-24 15:54:48,470:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735002,\n"message":{"message_id":256,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324807,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735003,\n"message":{"message_id":257,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324868,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 15:54:48,471:aiogram.dispatcher.dispatcher:Received 2 updates.
2020-05-24 15:58:45,249:asyncio:Using selector: SelectSelector
2020-05-24 15:58:45,266:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 15:58:45,440:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 15:58:45,440:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 15:58:45,440:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 15:58:45,440:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 15:58:45,495:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":3}}'"
2020-05-24 15:58:45,495:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 15:58:45,550:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735002,\n"message":{"message_id":256,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324807,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735003,\n"message":{"message_id":257,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324868,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735004,\n"message":{"message_id":258,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324886,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 15:58:45,551:aiogram.dispatcher.dispatcher:Received 3 updates.
2020-05-24 16:02:34,431:asyncio:Using selector: SelectSelector
2020-05-24 16:02:34,448:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:02:34,621:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:02:34,621:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:02:34,621:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:02:34,621:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:02:34,676:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":3}}'"
2020-05-24 16:02:34,676:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:02:34,731:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735002,\n"message":{"message_id":256,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324807,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735003,\n"message":{"message_id":257,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324868,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735004,\n"message":{"message_id":258,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324886,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:02:34,732:aiogram.dispatcher.dispatcher:Received 3 updates.
2020-05-24 16:04:13,377:asyncio:Using selector: SelectSelector
2020-05-24 16:04:13,391:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:04:13,555:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:04:13,555:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:04:13,555:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:04:13,555:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:04:13,606:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":3}}'"
2020-05-24 16:04:13,606:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:04:13,658:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735002,\n"message":{"message_id":256,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324807,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735003,\n"message":{"message_id":257,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324868,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735004,\n"message":{"message_id":258,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590324886,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:04:13,658:aiogram.dispatcher.dispatcher:Received 3 updates.
2020-05-24 16:04:18,700:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=OperationalError('database is locked')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user._asdict()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\db.py", line 22, in insert
    conn.commit()
sqlite3.OperationalError: database is locked
2020-05-24 16:04:18,702:aiogram:Make request: "getUpdates" with data: "{'offset': 210735005, 'timeout': 20}" and files "None"
2020-05-24 16:04:18,755:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735005,\n"message":{"message_id":259,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590325457,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:04:18,755:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:04:18,755:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 46, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 62, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-24 16:04:18,856:aiogram:Make request: "getUpdates" with data: "{'offset': 210735006, 'timeout': 20}" and files "None"
2020-05-24 16:04:38,909:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 16:04:39,010:aiogram:Make request: "getUpdates" with data: "{'offset': 210735006, 'timeout': 20}" and files "None"
2020-05-24 16:04:59,065:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 16:04:59,166:aiogram:Make request: "getUpdates" with data: "{'offset': 210735006, 'timeout': 20}" and files "None"
2020-05-24 16:05:20,188:asyncio:Using selector: SelectSelector
2020-05-24 16:05:20,207:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:05:20,352:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:05:20,353:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:05:20,353:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:05:20,353:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:05:20,394:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 16:05:20,395:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:05:25,170:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735006,\n"message":{"message_id":260,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590325524,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:05:25,171:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:06:39,648:asyncio:Using selector: SelectSelector
2020-05-24 16:06:39,668:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:06:39,801:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:06:39,801:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:06:39,802:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:06:39,802:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:06:39,842:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:06:39,842:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:06:39,883:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735006,\n"message":{"message_id":260,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590325524,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:06:39,883:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:07:12,584:asyncio:Using selector: SelectSelector
2020-05-24 16:07:12,598:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:07:12,767:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:07:12,767:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:07:12,767:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:07:12,768:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:07:12,823:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:07:12,823:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:07:12,877:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735006,\n"message":{"message_id":260,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590325524,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:07:12,877:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:07:17,917:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=OperationalError('database is locked')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user._asdict()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\db.py", line 22, in insert
    conn.commit()
sqlite3.OperationalError: database is locked
2020-05-24 16:07:17,918:aiogram:Make request: "getUpdates" with data: "{'offset': 210735007, 'timeout': 20}" and files "None"
2020-05-24 16:07:17,973:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735007,\n"message":{"message_id":261,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590325633,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:07:17,973:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:07:17,973:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 46, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 62, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-24 16:07:18,075:aiogram:Make request: "getUpdates" with data: "{'offset': 210735008, 'timeout': 20}" and files "None"
2020-05-24 16:09:00,759:asyncio:Using selector: SelectSelector
2020-05-24 16:09:00,776:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:09:00,905:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:09:00,905:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:09:00,905:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:09:00,905:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:09:00,945:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 16:09:00,945:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:09:02,824:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735008,\n"message":{"message_id":262,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590325742,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:09:02,824:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:15:31,555:asyncio:Using selector: SelectSelector
2020-05-24 16:15:31,571:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:15:31,704:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:15:31,704:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:15:31,704:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:15:31,704:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:15:31,745:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:15:31,745:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:15:31,787:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735008,\n"message":{"message_id":262,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590325742,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:15:31,788:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:15:36,836:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=OperationalError('database is locked')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user._asdict()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\db.py", line 22, in insert
    conn.commit()
sqlite3.OperationalError: database is locked
2020-05-24 16:15:36,837:aiogram:Make request: "getUpdates" with data: "{'offset': 210735009, 'timeout': 20}" and files "None"
2020-05-24 16:15:36,881:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735009,\n"message":{"message_id":263,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326134,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:15:36,881:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:15:36,881:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 46, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 62, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-24 16:15:36,983:aiogram:Make request: "getUpdates" with data: "{'offset': 210735010, 'timeout': 20}" and files "None"
2020-05-24 16:15:46,441:asyncio:Using selector: SelectSelector
2020-05-24 16:15:46,460:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:15:46,635:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:15:46,635:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:15:46,635:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:15:46,635:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:15:46,690:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 16:15:46,691:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:15:49,755:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735010,\n"message":{"message_id":264,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326149,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:15:49,755:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:17:40,665:asyncio:Using selector: SelectSelector
2020-05-24 16:17:40,684:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:17:40,861:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:17:40,861:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:17:40,862:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:17:40,862:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:17:40,917:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:17:40,917:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:17:40,973:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735010,\n"message":{"message_id":264,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326149,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:17:40,973:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:17:55,901:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-24 16:18:21,090:asyncio:Using selector: SelectSelector
2020-05-24 16:18:21,111:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:18:21,272:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:18:21,273:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:18:21,273:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:18:21,273:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:18:21,326:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:18:21,326:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:18:21,380:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735010,\n"message":{"message_id":264,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326149,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:18:21,380:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:18:21,381:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 46, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 62, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-24 16:18:21,482:aiogram:Make request: "getUpdates" with data: "{'offset': 210735011, 'timeout': 20}" and files "None"
2020-05-24 16:18:24,113:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735011,\n"message":{"message_id":265,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326303,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:18:24,113:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:18:24,114:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 46, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 62, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-24 16:18:24,215:aiogram:Make request: "getUpdates" with data: "{'offset': 210735012, 'timeout': 20}" and files "None"
2020-05-24 16:18:44,268:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 16:18:44,369:aiogram:Make request: "getUpdates" with data: "{'offset': 210735012, 'timeout': 20}" and files "None"
2020-05-24 16:19:02,813:asyncio:Using selector: SelectSelector
2020-05-24 16:19:02,834:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:19:02,968:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:19:02,968:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:19:02,968:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:19:02,968:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:19:03,009:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 16:19:03,009:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:19:16,110:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735012,\n"message":{"message_id":266,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326355,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:19:16,110:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:20:32,140:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 46, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 62, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-24 16:20:32,142:aiogram:Make request: "getUpdates" with data: "{'offset': 210735013, 'timeout': 20}" and files "None"
2020-05-24 16:20:41,446:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735013,\n"message":{"message_id":267,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326429,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735014,\n"message":{"message_id":268,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326438,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:20:41,447:aiogram.dispatcher.dispatcher:Received 2 updates.
2020-05-24 16:21:05,965:aiogram:Make request: "getUpdates" with data: "{'offset': 210735015, 'timeout': 20}" and files "None"
2020-05-24 16:21:09,548:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 46, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 62, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-24 16:21:19,721:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735015,\n"message":{"message_id":269,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326475,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:21:19,721:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:22:24,957:asyncio:Using selector: SelectSelector
2020-05-24 16:22:24,975:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:22:25,141:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:22:25,141:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:22:25,141:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:22:25,141:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:22:25,192:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:22:25,192:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:22:25,243:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735015,\n"message":{"message_id":269,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326475,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:22:25,243:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:22:51,446:asyncio:Using selector: SelectSelector
2020-05-24 16:22:51,464:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:22:51,597:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:22:51,597:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:22:51,597:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:22:51,598:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:22:51,638:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:22:51,639:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:22:51,679:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735015,\n"message":{"message_id":269,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326475,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:22:51,680:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:23:10,784:asyncio:Using selector: SelectSelector
2020-05-24 16:23:10,802:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:23:10,971:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:23:10,972:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:23:10,972:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:23:10,972:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:23:11,025:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:23:11,026:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:23:11,078:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735015,\n"message":{"message_id":269,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326475,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:23:11,078:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:23:44,751:asyncio:Using selector: SelectSelector
2020-05-24 16:23:44,769:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:23:44,933:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:23:44,934:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:23:44,934:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:23:44,934:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:23:44,986:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:23:44,986:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:23:45,038:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735015,\n"message":{"message_id":269,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326475,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:23:45,038:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:25:15,702:asyncio:Using selector: SelectSelector
2020-05-24 16:25:15,720:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:25:15,851:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:25:15,851:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:25:15,852:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:25:15,852:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:25:15,894:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:25:15,895:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:25:15,937:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735015,\n"message":{"message_id":269,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326475,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:25:15,937:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:26:03,537:asyncio:Using selector: SelectSelector
2020-05-24 16:26:03,554:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:26:03,723:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:26:03,724:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:26:03,724:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:26:03,724:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:26:03,778:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:26:03,779:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:26:03,833:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735015,\n"message":{"message_id":269,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326475,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:26:03,833:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:26:03,834:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-24 16:26:03,918:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":270,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326763,"text":"Hello!\\nI\'m StockBot, and I can help you monitor popular companies and their market prices!"}}'"
2020-05-24 16:26:03,919:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /companyList of all companies -- /companies'}" and files "None"
2020-05-24 16:26:03,920:aiogram:Make request: "getUpdates" with data: "{'offset': 210735016, 'timeout': 20}" and files "None"
2020-05-24 16:26:04,008:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":271,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326763,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /companyList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":12,"type":"bot_command"},{"offset":161,"length":10,"type":"bot_command"}]}}'"
2020-05-24 16:26:12,737:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735016,\n"message":{"message_id":272,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326772,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:26:12,738:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:26:12,738:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-24 16:26:12,840:aiogram:Make request: "getUpdates" with data: "{'offset': 210735017, 'timeout': 20}" and files "None"
2020-05-24 16:26:12,845:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":273,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326772,"text":"Hello!\\nI\'m StockBot, and I can help you monitor popular companies and their market prices!"}}'"
2020-05-24 16:26:12,845:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /companyList of all companies -- /companies'}" and files "None"
2020-05-24 16:26:12,978:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":274,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326772,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /companyList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":12,"type":"bot_command"},{"offset":161,"length":10,"type":"bot_command"}]}}'"
2020-05-24 16:26:32,894:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-24 16:26:32,996:aiogram:Make request: "getUpdates" with data: "{'offset': 210735017, 'timeout': 20}" and files "None"
2020-05-24 16:26:37,224:asyncio:Using selector: SelectSelector
2020-05-24 16:26:37,242:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:26:37,380:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:26:37,380:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:26:37,381:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:26:37,381:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:26:37,421:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 16:26:37,421:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:26:44,651:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735017,\n"message":{"message_id":275,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326804,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:26:44,651:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:28:42,060:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 46, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 62, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-24 16:28:42,063:aiogram:Make request: "getUpdates" with data: "{'offset': 210735018, 'timeout': 20}" and files "None"
2020-05-24 16:28:57,532:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735018,\n"message":{"message_id":276,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326927,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:28:57,532:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:31:07,013:asyncio:Using selector: SelectSelector
2020-05-24 16:31:07,027:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:31:07,157:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:31:07,157:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:31:07,157:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:31:07,157:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:31:07,198:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:31:07,198:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:31:07,239:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735018,\n"message":{"message_id":276,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590326927,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:31:07,242:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:31:07,242:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 46, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 62, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-24 16:31:07,343:aiogram:Make request: "getUpdates" with data: "{'offset': 210735019, 'timeout': 20}" and files "None"
2020-05-24 16:31:12,213:asyncio:Using selector: SelectSelector
2020-05-24 16:31:12,231:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:31:12,361:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:31:12,362:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:31:12,362:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:31:12,362:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:31:12,402:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 16:31:12,403:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:31:21,019:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735019,\n"message":{"message_id":277,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590327080,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:31:21,019:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:34:52,168:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 46, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 62, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-24 16:34:52,170:aiogram:Make request: "getUpdates" with data: "{'offset': 210735020, 'timeout': 20}" and files "None"
2020-05-24 16:35:11,793:asyncio:Using selector: SelectSelector
2020-05-24 16:35:11,816:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:35:11,945:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:35:11,946:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:35:11,946:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:35:11,946:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:35:11,987:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-24 16:35:11,988:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:35:28,592:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735020,\n"message":{"message_id":278,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590327328,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:35:28,592:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-24 16:38:08,810:asyncio:Using selector: SelectSelector
2020-05-24 16:38:08,829:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-24 16:38:09,002:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-24 16:38:09,002:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-24 16:38:09,002:aiogram.dispatcher.dispatcher:Start polling.
2020-05-24 16:38:09,003:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-24 16:38:09,057:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-24 16:38:09,057:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-24 16:38:09,113:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735020,\n"message":{"message_id":278,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590327328,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-24 16:38:09,113:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 10:59:11,687:asyncio:Using selector: SelectSelector
2020-05-27 10:59:11,762:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 10:59:15,046:asyncio:Using selector: SelectSelector
2020-05-27 10:59:15,070:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 10:59:15,249:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 10:59:15,249:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 10:59:15,250:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 10:59:15,250:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 10:59:15,299:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 10:59:15,299:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 10:59:26,873:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735021,\n"message":{"message_id":279,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590566366,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 10:59:26,873:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 11:00:31,778:asyncio:Using selector: SelectSelector
2020-05-27 11:00:31,799:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 11:00:31,975:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 11:00:31,975:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 11:00:31,975:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 11:00:31,976:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 11:00:32,031:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 11:00:32,031:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:00:32,087:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735021,\n"message":{"message_id":279,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590566366,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 11:00:32,088:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 11:02:00,712:asyncio:Using selector: SelectSelector
2020-05-27 11:02:00,742:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 11:02:00,904:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 11:02:00,905:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 11:02:00,905:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 11:02:00,905:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 11:02:00,959:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":2}}'"
2020-05-27 11:02:00,959:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:02:01,011:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735021,\n"message":{"message_id":279,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590566366,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735022,\n"message":{"message_id":280,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590566435,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 11:02:01,012:aiogram.dispatcher.dispatcher:Received 2 updates.
2020-05-27 11:02:32,653:asyncio:Using selector: SelectSelector
2020-05-27 11:02:32,670:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 11:02:32,834:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 11:02:32,834:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 11:02:32,834:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 11:02:32,835:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 11:02:32,887:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":2}}'"
2020-05-27 11:02:32,888:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:02:32,939:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735021,\n"message":{"message_id":279,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590566366,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735022,\n"message":{"message_id":280,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590566435,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 11:02:32,939:aiogram.dispatcher.dispatcher:Received 2 updates.
2020-05-27 11:06:22,994:asyncio:Using selector: SelectSelector
2020-05-27 11:06:23,023:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 11:06:23,198:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 11:06:23,198:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 11:06:23,198:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 11:06:23,199:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 11:06:23,254:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":2}}'"
2020-05-27 11:06:23,255:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:06:23,309:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735021,\n"message":{"message_id":279,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590566366,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735022,\n"message":{"message_id":280,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590566435,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 11:06:23,309:aiogram.dispatcher.dispatcher:Received 2 updates.
2020-05-27 11:06:42,504:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-27 11:06:55,982:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=IntegrityError('UNIQUE constraint failed: users.id')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 48, in start_handler
    Info.insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user._asdict()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\db.py", line 21, in insert
    values)
sqlite3.IntegrityError: UNIQUE constraint failed: users.id
2020-05-27 11:06:56,003:aiogram:Make request: "getUpdates" with data: "{'offset': 210735023, 'timeout': 20}" and files "None"
2020-05-27 11:06:56,865:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":281,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590566816,"text":"Hello!\\nI\'m StockBot, and I can help you monitor popular companies and their market prices!"}}'"
2020-05-27 11:06:56,922:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /companyList of all companies -- /companies'}" and files "None"
2020-05-27 11:06:58,980:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":282,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590566818,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /companyList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":12,"type":"bot_command"},{"offset":161,"length":10,"type":"bot_command"}]}}'"
2020-05-27 11:08:16,237:asyncio:Using selector: SelectSelector
2020-05-27 11:08:16,254:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 11:08:16,381:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 11:08:16,382:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 11:08:16,382:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 11:08:16,382:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 11:08:16,423:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 11:08:16,423:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:08:36,465:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:08:36,566:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:08:56,615:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:08:56,716:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:09:16,759:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:09:16,859:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:09:36,901:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:09:37,001:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:54:32,160:asyncio:Using selector: SelectSelector
2020-05-27 11:54:32,176:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 11:54:32,347:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 11:54:32,347:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 11:54:32,347:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 11:54:32,347:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 11:54:32,403:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 11:54:32,403:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:54:52,458:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:54:52,559:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:55:12,614:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:55:12,714:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:55:13,454:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735023,\n"message":{"message_id":283,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590569713,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 11:55:13,454:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 11:55:13,455:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 151, in button_addcompany_handler
    companies = Info().get_all_companies()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 53, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 69, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-27 11:55:13,541:aiogram:Make request: "getUpdates" with data: "{'offset': 210735024, 'timeout': 20}" and files "None"
2020-05-27 11:55:33,597:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:55:33,698:aiogram:Make request: "getUpdates" with data: "{'offset': 210735024, 'timeout': 20}" and files "None"
2020-05-27 11:55:53,752:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:55:53,853:aiogram:Make request: "getUpdates" with data: "{'offset': 210735024, 'timeout': 20}" and files "None"
2020-05-27 11:56:13,910:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:56:14,011:aiogram:Make request: "getUpdates" with data: "{'offset': 210735024, 'timeout': 20}" and files "None"
2020-05-27 11:56:34,065:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:56:34,166:aiogram:Make request: "getUpdates" with data: "{'offset': 210735024, 'timeout': 20}" and files "None"
2020-05-27 11:56:53,331:asyncio:Using selector: SelectSelector
2020-05-27 11:56:53,349:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 11:56:53,478:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 11:56:53,478:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 11:56:53,479:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 11:56:53,479:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 11:56:53,519:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 11:56:53,520:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:56:58,022:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735024,\n"message":{"message_id":284,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590569817,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 11:56:58,022:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 11:56:58,024:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 151, in button_addcompany_handler
    companies = Info().get_all_companies()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 53, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 69, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-27 11:56:58,126:aiogram:Make request: "getUpdates" with data: "{'offset': 210735025, 'timeout': 20}" and files "None"
2020-05-27 11:57:18,168:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:57:18,270:aiogram:Make request: "getUpdates" with data: "{'offset': 210735025, 'timeout': 20}" and files "None"
2020-05-27 11:57:38,313:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:57:38,414:aiogram:Make request: "getUpdates" with data: "{'offset': 210735025, 'timeout': 20}" and files "None"
2020-05-27 11:57:58,455:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:57:58,557:aiogram:Make request: "getUpdates" with data: "{'offset': 210735025, 'timeout': 20}" and files "None"
2020-05-27 11:58:13,989:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735025,\n"message":{"message_id":285,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590569893,"text":"/help","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-27 11:58:13,990:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 11:58:13,990:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /company'}" and files "None"
2020-05-27 11:58:14,060:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":286,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590569893,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /company","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":8,"type":"bot_command"}]}}'"
2020-05-27 11:58:14,097:aiogram:Make request: "getUpdates" with data: "{'offset': 210735026, 'timeout': 20}" and files "None"
2020-05-27 11:58:34,140:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:58:34,240:aiogram:Make request: "getUpdates" with data: "{'offset': 210735026, 'timeout': 20}" and files "None"
2020-05-27 11:58:48,991:asyncio:Using selector: SelectSelector
2020-05-27 11:58:49,009:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 11:58:49,175:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 11:58:49,175:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 11:58:49,176:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 11:58:49,176:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 11:58:49,228:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 11:58:49,229:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 11:58:51,097:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735026,\n"message":{"message_id":287,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590569930,"text":"/help","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-27 11:58:51,098:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 11:58:51,098:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /mycompany\nList of all companies -- /companies'}" and files "None"
2020-05-27 11:58:51,177:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":288,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590569930,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /mycompany\\nList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":10,"type":"bot_command"},{"offset":164,"length":10,"type":"bot_command"}]}}'"
2020-05-27 11:58:51,199:aiogram:Make request: "getUpdates" with data: "{'offset': 210735027, 'timeout': 20}" and files "None"
2020-05-27 11:58:52,999:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735027,\n"message":{"message_id":289,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590569932,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-27 11:58:53,000:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 11:58:53,001:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 133, in button_company_handler
    users = Info().get_all_users()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 53, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 69, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-27 11:58:53,104:aiogram:Make request: "getUpdates" with data: "{'offset': 210735028, 'timeout': 20}" and files "None"
2020-05-27 11:59:03,233:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735028,\n"message":{"message_id":290,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590569942,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 11:59:03,234:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 11:59:03,235:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 152, in button_addcompany_handler
    companies = Info().get_all_companies()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 53, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 69, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-27 11:59:03,337:aiogram:Make request: "getUpdates" with data: "{'offset': 210735029, 'timeout': 20}" and files "None"
2020-05-27 11:59:23,391:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:59:23,491:aiogram:Make request: "getUpdates" with data: "{'offset': 210735029, 'timeout': 20}" and files "None"
2020-05-27 11:59:43,545:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 11:59:43,646:aiogram:Make request: "getUpdates" with data: "{'offset': 210735029, 'timeout': 20}" and files "None"
2020-05-27 12:00:03,699:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:00:03,801:aiogram:Make request: "getUpdates" with data: "{'offset': 210735029, 'timeout': 20}" and files "None"
2020-05-27 12:00:23,855:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:00:23,955:aiogram:Make request: "getUpdates" with data: "{'offset': 210735029, 'timeout': 20}" and files "None"
2020-05-27 12:00:38,330:asyncio:Using selector: SelectSelector
2020-05-27 12:00:38,348:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:00:38,476:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:00:38,476:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:00:38,477:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:00:38,477:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:00:38,516:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:00:38,517:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:00:41,843:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735029,\n"message":{"message_id":291,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570041,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:00:41,844:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:02:27,904:asyncio:Using selector: SelectSelector
2020-05-27 12:02:27,922:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:02:28,083:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:02:28,084:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:02:28,084:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:02:28,084:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:02:28,134:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 12:02:28,134:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:02:28,185:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735029,\n"message":{"message_id":291,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570041,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:02:28,186:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:04:16,296:asyncio:Using selector: SelectSelector
2020-05-27 12:04:16,314:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:04:16,494:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:04:16,495:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:04:16,495:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:04:16,495:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:04:16,555:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":3}}'"
2020-05-27 12:04:16,555:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:04:16,612:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735029,\n"message":{"message_id":291,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570041,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}},{"update_id":210735030,\n"message":{"message_id":292,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570247,"text":"/companies","entities":[{"offset":0,"length":10,"type":"bot_command"}]}},{"update_id":210735031,\n"message":{"message_id":293,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570249,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-27 12:04:16,613:aiogram.dispatcher.dispatcher:Received 3 updates.
2020-05-27 12:04:38,442:asyncio:Using selector: SelectSelector
2020-05-27 12:04:38,460:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:04:38,597:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:04:38,598:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:04:38,598:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:04:38,598:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:04:38,640:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":3}}'"
2020-05-27 12:04:38,640:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:04:38,682:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735029,\n"message":{"message_id":291,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570041,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}},{"update_id":210735030,\n"message":{"message_id":292,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570247,"text":"/companies","entities":[{"offset":0,"length":10,"type":"bot_command"}]}},{"update_id":210735031,\n"message":{"message_id":293,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570249,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-27 12:04:38,683:aiogram.dispatcher.dispatcher:Received 3 updates.
2020-05-27 12:04:44,590:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 12:04:50,824:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 152, in button_addcompany_handler
    companies = Info().get_all_companies()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 53, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 69, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-27 12:04:50,827:aiogram:Make request: "getUpdates" with data: "{'offset': 210735032, 'timeout': 20}" and files "None"
2020-05-27 12:05:07,826:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":294,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570290,"text":"Hello Nikita"}}'"
2020-05-27 12:05:10,465:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735032,\n"message":{"message_id":295,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570305,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-27 12:05:10,465:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:07:53,753:asyncio:Using selector: SelectSelector
2020-05-27 12:07:53,771:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:07:53,941:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:07:53,941:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:07:53,941:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:07:53,941:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:07:53,995:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 12:07:53,995:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:07:54,049:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735032,\n"message":{"message_id":295,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570305,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-27 12:07:54,050:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:08:00,918:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 134, in button_company_handler
    users = Info().get_all_users()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 53, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 69, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-27 12:08:00,920:aiogram:Make request: "getUpdates" with data: "{'offset': 210735033, 'timeout': 20}" and files "None"
2020-05-27 12:08:17,734:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735033,\n"message":{"message_id":296,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570494,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-27 12:08:17,735:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:08:18,539:aiogram:Make request: "getUpdates" with data: "{'offset': 210735034, 'timeout': 20}" and files "None"
2020-05-27 12:08:19,145:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 114, in button_user_handler
    info = Info()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 53, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 69, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-27 12:08:40,753:asyncio:Using selector: SelectSelector
2020-05-27 12:08:40,771:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:08:40,900:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:08:40,901:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:08:40,901:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:08:40,901:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:08:40,942:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:08:40,942:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:08:45,284:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735034,\n"message":{"message_id":297,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570524,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-27 12:08:45,285:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:10:34,146:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 114, in button_user_handler
    info = Info()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 53, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 69, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-27 12:10:34,147:aiogram:Make request: "getUpdates" with data: "{'offset': 210735035, 'timeout': 20}" and files "None"
2020-05-27 12:10:37,085:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735035,\n"message":{"message_id":298,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570628,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 12:10:37,086:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:10:53,278:asyncio:Using selector: SelectSelector
2020-05-27 12:10:53,296:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:10:53,470:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:10:53,470:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:10:53,470:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:10:53,470:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:10:53,526:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 12:10:53,526:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:10:53,581:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735035,\n"message":{"message_id":298,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570628,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 12:10:53,582:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:12:18,843:asyncio:Using selector: SelectSelector
2020-05-27 12:12:18,864:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:12:18,986:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:12:18,987:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:12:18,987:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:12:18,987:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:12:19,029:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":2}}'"
2020-05-27 12:12:19,029:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:12:19,068:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735035,\n"message":{"message_id":298,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570628,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735036,\n"message":{"message_id":299,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570733,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 12:12:19,068:aiogram.dispatcher.dispatcher:Received 2 updates.
2020-05-27 12:12:19,069:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-27 12:12:19,069:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-27 12:12:19,133:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":300,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570738,"text":"Hello!\\nI\'m StockBot, and I can help you monitor popular companies and their market prices!"}}'"
2020-05-27 12:12:19,134:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /mycompany\nList of all companies -- /companies'}" and files "None"
2020-05-27 12:12:19,172:aiogram:Make request: "getUpdates" with data: "{'offset': 210735037, 'timeout': 20}" and files "None"
2020-05-27 12:12:19,202:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":301,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570738,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /mycompany\\nList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":10,"type":"bot_command"},{"offset":164,"length":10,"type":"bot_command"}]}}'"
2020-05-27 12:12:19,202:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=AttributeError("'NoneType' object has no attribute 'split'")>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 49, in start_handler
    Info().insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 31, in __init__
    self._info_user = self._load_info_user()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 53, in _load_info_user
    info = self._fill_info_user(info)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 69, in _fill_info_user
    info_user_company = user['company'].split(',')
AttributeError: 'NoneType' object has no attribute 'split'
2020-05-27 12:12:19,257:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":302,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570738,"text":"Hello!\\nI\'m StockBot, and I can help you monitor popular companies and their market prices!"}}'"
2020-05-27 12:12:19,258:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /mycompany\nList of all companies -- /companies'}" and files "None"
2020-05-27 12:12:19,362:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":303,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570739,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /mycompany\\nList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":10,"type":"bot_command"},{"offset":164,"length":10,"type":"bot_command"}]}}'"
2020-05-27 12:12:39,307:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:12:39,408:aiogram:Make request: "getUpdates" with data: "{'offset': 210735037, 'timeout': 20}" and files "None"
2020-05-27 12:12:59,449:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:12:59,550:aiogram:Make request: "getUpdates" with data: "{'offset': 210735037, 'timeout': 20}" and files "None"
2020-05-27 12:13:19,396:asyncio:Using selector: SelectSelector
2020-05-27 12:13:19,414:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:13:19,546:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:13:19,546:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:13:19,546:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:13:19,547:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:13:19,587:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:13:19,588:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:13:27,045:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735037,\n"message":{"message_id":304,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570806,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 12:13:27,045:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:13:48,230:asyncio:Using selector: SelectSelector
2020-05-27 12:13:48,247:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:13:48,428:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:13:48,428:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:13:48,428:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:13:48,428:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:13:48,485:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 12:13:48,486:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:13:48,544:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735037,\n"message":{"message_id":304,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570806,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 12:13:48,544:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:13:57,547:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-27 12:14:06,522:asyncio:Using selector: SelectSelector
2020-05-27 12:14:06,538:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:14:06,661:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:14:06,661:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:14:06,661:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:14:06,662:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:14:06,702:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 12:14:06,703:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:14:06,744:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735037,\n"message":{"message_id":304,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570806,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 12:14:06,744:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:14:06,744:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-27 12:14:06,846:aiogram:Make request: "getUpdates" with data: "{'offset': 210735038, 'timeout': 20}" and files "None"
2020-05-27 12:14:06,874:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":305,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570846,"text":"Hello!\\nI\'m StockBot, and I can help you monitor popular companies and their market prices!"}}'"
2020-05-27 12:14:06,874:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /mycompany\nList of all companies -- /companies'}" and files "None"
2020-05-27 12:14:06,961:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":306,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590570846,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /mycompany\\nList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":10,"type":"bot_command"},{"offset":164,"length":10,"type":"bot_command"}]}}'"
2020-05-27 12:14:06,962:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=IntegrityError('UNIQUE constraint failed: users.id')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 49, in start_handler
    Info.insert_info_user(user)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 38, in insert_info_user
    'users', user._asdict()
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\db.py", line 21, in insert
    values)
sqlite3.IntegrityError: UNIQUE constraint failed: users.id
2020-05-27 12:14:27,006:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:14:27,107:aiogram:Make request: "getUpdates" with data: "{'offset': 210735038, 'timeout': 20}" and files "None"
2020-05-27 12:14:47,161:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:14:47,262:aiogram:Make request: "getUpdates" with data: "{'offset': 210735038, 'timeout': 20}" and files "None"
2020-05-27 12:15:07,315:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:15:07,415:aiogram:Make request: "getUpdates" with data: "{'offset': 210735038, 'timeout': 20}" and files "None"
2020-05-27 12:15:27,469:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:15:27,569:aiogram:Make request: "getUpdates" with data: "{'offset': 210735038, 'timeout': 20}" and files "None"
2020-05-27 12:15:47,623:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:15:47,723:aiogram:Make request: "getUpdates" with data: "{'offset': 210735038, 'timeout': 20}" and files "None"
2020-05-27 12:16:07,776:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:16:07,877:aiogram:Make request: "getUpdates" with data: "{'offset': 210735038, 'timeout': 20}" and files "None"
2020-05-27 12:16:27,930:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:16:28,031:aiogram:Make request: "getUpdates" with data: "{'offset': 210735038, 'timeout': 20}" and files "None"
2020-05-27 12:16:48,084:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:16:48,185:aiogram:Make request: "getUpdates" with data: "{'offset': 210735038, 'timeout': 20}" and files "None"
2020-05-27 12:17:08,239:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:17:08,339:aiogram:Make request: "getUpdates" with data: "{'offset': 210735038, 'timeout': 20}" and files "None"
2020-05-27 12:17:28,392:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:17:28,493:aiogram:Make request: "getUpdates" with data: "{'offset': 210735038, 'timeout': 20}" and files "None"
2020-05-27 12:20:06,440:asyncio:Using selector: SelectSelector
2020-05-27 12:20:06,458:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:20:06,621:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:20:06,621:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:20:06,622:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:20:06,622:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:20:06,674:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:20:06,674:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:20:16,904:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735038,\n"message":{"message_id":307,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571216,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:20:16,904:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:24:50,847:asyncio:Using selector: SelectSelector
2020-05-27 12:24:50,870:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:24:51,050:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:24:51,051:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:24:51,051:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:24:51,051:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:24:51,107:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 12:24:51,107:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:24:51,165:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735038,\n"message":{"message_id":307,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571216,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:24:51,165:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:25:18,139:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n | Market name\tCompany name\nTSLA\tTesla', 'reply_to_message_id': 307, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:25:20,825:aiogram:Make request: "getUpdates" with data: "{'offset': 210735039, 'timeout': 20}" and files "None"
2020-05-27 12:25:21,679:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":308,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571521,"reply_to_message":{"message_id":307,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571216,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]},"text":"Enter company what you need: \\n | Market name Company name\\nTSLA Tesla"}}'"
2020-05-27 12:25:56,513:asyncio:Using selector: SelectSelector
2020-05-27 12:25:56,531:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:25:56,658:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:25:56,658:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:25:56,658:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:25:56,658:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:25:56,697:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:25:56,697:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:26:16,740:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:26:16,841:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:28:35,038:asyncio:Using selector: SelectSelector
2020-05-27 12:28:35,056:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:28:35,215:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:28:35,216:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:28:35,216:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:28:35,216:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:28:35,266:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 12:28:35,266:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:28:35,317:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735039,\n"message":{"message_id":309,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571709,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:28:35,318:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:31:12,902:asyncio:Using selector: SelectSelector
2020-05-27 12:31:12,926:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:31:13,059:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:31:13,060:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:31:13,060:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:31:13,060:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:31:13,102:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 12:31:13,102:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:31:13,143:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735039,\n"message":{"message_id":309,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571709,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:31:13,143:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:31:20,349:asyncio:Using selector: SelectSelector
2020-05-27 12:31:20,364:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:31:20,540:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:31:20,540:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:31:20,540:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:31:20,540:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:31:20,594:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 12:31:20,594:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:31:20,654:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735039,\n"message":{"message_id":309,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571709,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:31:20,654:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:31:20,655:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n | Market name\tCompany name\nTSLA\tTesla\n | GOOG\tGoogle\n | MSFT\tMicrosoft\n | APPL\tApple\n | AMZN\tAmazon\n | FB\tFacebook\n | NFLX\tNetflix\n | WMT\tWalmart\n | SSNLF\tSamsung\n | DIS\tWalt Disney\n | CSCO\tCisco\n | ADBE\tAdobe\n | INTC\tIntel\n | NVDA\tNVIDIA\n | AMD\tAMD\n | IBM\tIBM\n | DELL\tDell\n | HPQ\tHP-Hewlett Packard\n | V\tVISA\n | MA\tMasterCard\n | NSRGF\tNestle\n | JPM\tJPMorgan\n | JNJ\tJ&J\n | BABA\tAlibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:31:20,739:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":310,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571880,"text":"Enter company what you need: \\n | Market name Company name\\nTSLA Tesla\\n | GOOG Google\\n | MSFT Microsoft\\n | APPL Apple\\n | AMZN Amazon\\n | FB Facebook\\n | NFLX Netflix\\n | WMT Walmart\\n | SSNLF Samsung\\n | DIS Walt Disney\\n | CSCO Cisco\\n | ADBE Adobe\\n | INTC Intel\\n | NVDA NVIDIA\\n | AMD AMD\\n | IBM IBM\\n | DELL Dell\\n | HPQ HP-Hewlett Packard\\n | V VISA\\n | MA MasterCard\\n | NSRGF Nestle\\n | JPM JPMorgan\\n | JNJ J&J\\n | BABA Alibaba ADR"}}'"
2020-05-27 12:31:20,740:aiogram:Make request: "getUpdates" with data: "{'offset': 210735040, 'timeout': 20}" and files "None"
2020-05-27 12:32:04,807:asyncio:Using selector: SelectSelector
2020-05-27 12:32:04,821:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:32:04,985:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:32:04,985:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:32:04,985:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:32:04,985:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:32:05,037:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:32:05,037:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:32:06,867:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735040,\n"message":{"message_id":311,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571926,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:32:06,868:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:32:06,868:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n | Market name\tCompany name\n| TSLA\tTesla\n | GOOG\tGoogle\n | MSFT\tMicrosoft\n | APPL\tApple\n | AMZN\tAmazon\n | FB\tFacebook\n | NFLX\tNetflix\n | WMT\tWalmart\n | SSNLF\tSamsung\n | DIS\tWalt Disney\n | CSCO\tCisco\n | ADBE\tAdobe\n | INTC\tIntel\n | NVDA\tNVIDIA\n | AMD\tAMD\n | IBM\tIBM\n | DELL\tDell\n | HPQ\tHP-Hewlett Packard\n | V\tVISA\n | MA\tMasterCard\n | NSRGF\tNestle\n | JPM\tJPMorgan\n | JNJ\tJ&J\n | BABA\tAlibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:32:06,961:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":312,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571926,"text":"Enter company what you need: \\n | Market name Company name\\n| TSLA Tesla\\n | GOOG Google\\n | MSFT Microsoft\\n | APPL Apple\\n | AMZN Amazon\\n | FB Facebook\\n | NFLX Netflix\\n | WMT Walmart\\n | SSNLF Samsung\\n | DIS Walt Disney\\n | CSCO Cisco\\n | ADBE Adobe\\n | INTC Intel\\n | NVDA NVIDIA\\n | AMD AMD\\n | IBM IBM\\n | DELL Dell\\n | HPQ HP-Hewlett Packard\\n | V VISA\\n | MA MasterCard\\n | NSRGF Nestle\\n | JPM JPMorgan\\n | JNJ J&J\\n | BABA Alibaba ADR"}}'"
2020-05-27 12:32:06,961:aiogram:Make request: "getUpdates" with data: "{'offset': 210735041, 'timeout': 20}" and files "None"
2020-05-27 12:32:19,371:asyncio:Using selector: SelectSelector
2020-05-27 12:32:19,385:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:32:19,549:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:32:19,550:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:32:19,550:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:32:19,550:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:32:19,606:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:32:19,606:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:32:21,940:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735041,\n"message":{"message_id":313,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571940,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:32:21,940:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:32:21,941:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n | Market name\tCompany name\n | TSLA\tTesla\n | GOOG\tGoogle\n | MSFT\tMicrosoft\n | APPL\tApple\n | AMZN\tAmazon\n | FB\tFacebook\n | NFLX\tNetflix\n | WMT\tWalmart\n | SSNLF\tSamsung\n | DIS\tWalt Disney\n | CSCO\tCisco\n | ADBE\tAdobe\n | INTC\tIntel\n | NVDA\tNVIDIA\n | AMD\tAMD\n | IBM\tIBM\n | DELL\tDell\n | HPQ\tHP-Hewlett Packard\n | V\tVISA\n | MA\tMasterCard\n | NSRGF\tNestle\n | JPM\tJPMorgan\n | JNJ\tJ&J\n | BABA\tAlibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:32:22,019:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":314,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590571941,"text":"Enter company what you need: \\n | Market name Company name\\n | TSLA Tesla\\n | GOOG Google\\n | MSFT Microsoft\\n | APPL Apple\\n | AMZN Amazon\\n | FB Facebook\\n | NFLX Netflix\\n | WMT Walmart\\n | SSNLF Samsung\\n | DIS Walt Disney\\n | CSCO Cisco\\n | ADBE Adobe\\n | INTC Intel\\n | NVDA NVIDIA\\n | AMD AMD\\n | IBM IBM\\n | DELL Dell\\n | HPQ HP-Hewlett Packard\\n | V VISA\\n | MA MasterCard\\n | NSRGF Nestle\\n | JPM JPMorgan\\n | JNJ J&J\\n | BABA Alibaba ADR"}}'"
2020-05-27 12:32:22,019:aiogram:Make request: "getUpdates" with data: "{'offset': 210735042, 'timeout': 20}" and files "None"
2020-05-27 12:32:42,073:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:32:42,173:aiogram:Make request: "getUpdates" with data: "{'offset': 210735042, 'timeout': 20}" and files "None"
2020-05-27 12:33:01,681:asyncio:Using selector: SelectSelector
2020-05-27 12:33:01,697:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:33:01,861:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:33:01,861:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:33:01,861:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:33:01,861:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:33:01,914:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:33:01,914:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:33:21,969:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:33:22,070:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:33:26,775:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735042,\n"message":{"message_id":315,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572006,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:33:26,775:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:33:26,776:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name Company name\n | TSLA\t\tTesla\n | GOOG\t\tGoogle\n | MSFT\t\tMicrosoft\n | APPL\t\tApple\n | AMZN\t\tAmazon\n | FB\t\tFacebook\n | NFLX\t\tNetflix\n | WMT\t\tWalmart\n | SSNLF\t\tSamsung\n | DIS\t\tWalt Disney\n | CSCO\t\tCisco\n | ADBE\t\tAdobe\n | INTC\t\tIntel\n | NVDA\t\tNVIDIA\n | AMD\t\tAMD\n | IBM\t\tIBM\n | DELL\t\tDell\n | HPQ\t\tHP-Hewlett Packard\n | V\t\tVISA\n | MA\t\tMasterCard\n | NSRGF\t\tNestle\n | JPM\t\tJPMorgan\n | JNJ\t\tJ&J\n | BABA\t\tAlibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:33:26,855:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":316,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572006,"text":"Enter company what you need: \\n Market name Company name\\n | TSLA  Tesla\\n | GOOG  Google\\n | MSFT  Microsoft\\n | APPL  Apple\\n | AMZN  Amazon\\n | FB  Facebook\\n | NFLX  Netflix\\n | WMT  Walmart\\n | SSNLF  Samsung\\n | DIS  Walt Disney\\n | CSCO  Cisco\\n | ADBE  Adobe\\n | INTC  Intel\\n | NVDA  NVIDIA\\n | AMD  AMD\\n | IBM  IBM\\n | DELL  Dell\\n | HPQ  HP-Hewlett Packard\\n | V  VISA\\n | MA  MasterCard\\n | NSRGF  Nestle\\n | JPM  JPMorgan\\n | JNJ  J&J\\n | BABA  Alibaba ADR"}}'"
2020-05-27 12:33:26,878:aiogram:Make request: "getUpdates" with data: "{'offset': 210735043, 'timeout': 20}" and files "None"
2020-05-27 12:33:46,932:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:33:47,032:aiogram:Make request: "getUpdates" with data: "{'offset': 210735043, 'timeout': 20}" and files "None"
2020-05-27 12:34:07,092:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:34:07,193:aiogram:Make request: "getUpdates" with data: "{'offset': 210735043, 'timeout': 20}" and files "None"
2020-05-27 12:34:27,246:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:34:27,348:aiogram:Make request: "getUpdates" with data: "{'offset': 210735043, 'timeout': 20}" and files "None"
2020-05-27 12:34:47,402:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:34:47,502:aiogram:Make request: "getUpdates" with data: "{'offset': 210735043, 'timeout': 20}" and files "None"
2020-05-27 12:35:01,346:asyncio:Using selector: SelectSelector
2020-05-27 12:35:01,361:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:35:01,485:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:35:01,485:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:35:01,485:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:35:01,485:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:35:01,525:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:35:01,525:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:35:04,059:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735043,\n"message":{"message_id":317,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572103,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:35:04,059:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:35:04,060:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name Company name\n |  TSLA\tTesla\n | GOOG\tGoogle\n | MSFT\tMicrosoft\n | APPL\tApple\n | AMZN\tAmazon\n | FB\tFacebook\n | NFLX\tNetflix\n | WMT\tWalmart\n | SSNLF\tSamsung\n | DIS\tWalt Disney\n | CSCO\tCisco\n | ADBE\tAdobe\n | INTC\tIntel\n | NVDA\tNVIDIA\n | AMD\tAMD\n | IBM\tIBM\n | DELL\tDell\n | HPQ\tHP-Hewlett Packard\n | V\tVISA\n | MA\tMasterCard\n | NSRGF\tNestle\n | JPM\tJPMorgan\n | JNJ\tJ&J\n | BABA\tAlibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:35:04,160:aiogram:Make request: "getUpdates" with data: "{'offset': 210735044, 'timeout': 20}" and files "None"
2020-05-27 12:35:04,179:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":318,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572103,"text":"Enter company what you need: \\n Market name Company name\\n |  TSLA Tesla\\n | GOOG Google\\n | MSFT Microsoft\\n | APPL Apple\\n | AMZN Amazon\\n | FB Facebook\\n | NFLX Netflix\\n | WMT Walmart\\n | SSNLF Samsung\\n | DIS Walt Disney\\n | CSCO Cisco\\n | ADBE Adobe\\n | INTC Intel\\n | NVDA NVIDIA\\n | AMD AMD\\n | IBM IBM\\n | DELL Dell\\n | HPQ HP-Hewlett Packard\\n | V VISA\\n | MA MasterCard\\n | NSRGF Nestle\\n | JPM JPMorgan\\n | JNJ J&J\\n | BABA Alibaba ADR"}}'"
2020-05-27 12:35:24,331:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:35:24,431:aiogram:Make request: "getUpdates" with data: "{'offset': 210735044, 'timeout': 20}" and files "None"
2020-05-27 12:35:44,488:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:35:44,589:aiogram:Make request: "getUpdates" with data: "{'offset': 210735044, 'timeout': 20}" and files "None"
2020-05-27 12:36:04,647:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:36:04,747:aiogram:Make request: "getUpdates" with data: "{'offset': 210735044, 'timeout': 20}" and files "None"
2020-05-27 12:36:08,456:asyncio:Using selector: SelectSelector
2020-05-27 12:36:08,472:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:36:08,652:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:36:08,652:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:36:08,653:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:36:08,653:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:36:08,705:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:36:08,705:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:36:11,477:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735044,\n"message":{"message_id":319,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572171,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:36:11,478:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:36:11,478:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name Company name\n | TSLA~~~~~~~~~Tesla\n | GOOG~~~~~~~~~Google\n | MSFT~~~~~~~~~Microsoft\n | APPL~~~~~~~~~Apple\n | AMZN~~~~~~~~~Amazon\n | FB~~~~~~~~~Facebook\n | NFLX~~~~~~~~~Netflix\n | WMT~~~~~~~~~Walmart\n | SSNLF~~~~~~~~~Samsung\n | DIS~~~~~~~~~Walt Disney\n | CSCO~~~~~~~~~Cisco\n | ADBE~~~~~~~~~Adobe\n | INTC~~~~~~~~~Intel\n | NVDA~~~~~~~~~NVIDIA\n | AMD~~~~~~~~~AMD\n | IBM~~~~~~~~~IBM\n | DELL~~~~~~~~~Dell\n | HPQ~~~~~~~~~HP-Hewlett Packard\n | V~~~~~~~~~VISA\n | MA~~~~~~~~~MasterCard\n | NSRGF~~~~~~~~~Nestle\n | JPM~~~~~~~~~JPMorgan\n | JNJ~~~~~~~~~J&J\n | BABA~~~~~~~~~Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:36:11,570:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":320,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572171,"text":"Enter company what you need: \\n Market name Company name\\n | TSLA~~~~~~~~~Tesla\\n | GOOG~~~~~~~~~Google\\n | MSFT~~~~~~~~~Microsoft\\n | APPL~~~~~~~~~Apple\\n | AMZN~~~~~~~~~Amazon\\n | FB~~~~~~~~~Facebook\\n | NFLX~~~~~~~~~Netflix\\n | WMT~~~~~~~~~Walmart\\n | SSNLF~~~~~~~~~Samsung\\n | DIS~~~~~~~~~Walt Disney\\n | CSCO~~~~~~~~~Cisco\\n | ADBE~~~~~~~~~Adobe\\n | INTC~~~~~~~~~Intel\\n | NVDA~~~~~~~~~NVIDIA\\n | AMD~~~~~~~~~AMD\\n | IBM~~~~~~~~~IBM\\n | DELL~~~~~~~~~Dell\\n | HPQ~~~~~~~~~HP-Hewlett Packard\\n | V~~~~~~~~~VISA\\n | MA~~~~~~~~~MasterCard\\n | NSRGF~~~~~~~~~Nestle\\n | JPM~~~~~~~~~JPMorgan\\n | JNJ~~~~~~~~~J&J\\n | BABA~~~~~~~~~Alibaba ADR"}}'"
2020-05-27 12:36:11,570:aiogram:Make request: "getUpdates" with data: "{'offset': 210735045, 'timeout': 20}" and files "None"
2020-05-27 12:36:20,312:asyncio:Using selector: SelectSelector
2020-05-27 12:36:20,328:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:36:20,457:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:36:20,457:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:36:20,457:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:36:20,458:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:36:20,499:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:36:20,500:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:36:21,749:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735045,\n"message":{"message_id":321,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572181,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:36:21,749:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:36:21,750:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name Company name\n | TSLA~~~~~~Tesla\n | GOOG~~~~~~Google\n | MSFT~~~~~~Microsoft\n | APPL~~~~~~Apple\n | AMZN~~~~~~Amazon\n | FB~~~~~~Facebook\n | NFLX~~~~~~Netflix\n | WMT~~~~~~Walmart\n | SSNLF~~~~~~Samsung\n | DIS~~~~~~Walt Disney\n | CSCO~~~~~~Cisco\n | ADBE~~~~~~Adobe\n | INTC~~~~~~Intel\n | NVDA~~~~~~NVIDIA\n | AMD~~~~~~AMD\n | IBM~~~~~~IBM\n | DELL~~~~~~Dell\n | HPQ~~~~~~HP-Hewlett Packard\n | V~~~~~~VISA\n | MA~~~~~~MasterCard\n | NSRGF~~~~~~Nestle\n | JPM~~~~~~JPMorgan\n | JNJ~~~~~~J&J\n | BABA~~~~~~Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:36:21,818:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":322,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572181,"text":"Enter company what you need: \\n Market name Company name\\n | TSLA~~~~~~Tesla\\n | GOOG~~~~~~Google\\n | MSFT~~~~~~Microsoft\\n | APPL~~~~~~Apple\\n | AMZN~~~~~~Amazon\\n | FB~~~~~~Facebook\\n | NFLX~~~~~~Netflix\\n | WMT~~~~~~Walmart\\n | SSNLF~~~~~~Samsung\\n | DIS~~~~~~Walt Disney\\n | CSCO~~~~~~Cisco\\n | ADBE~~~~~~Adobe\\n | INTC~~~~~~Intel\\n | NVDA~~~~~~NVIDIA\\n | AMD~~~~~~AMD\\n | IBM~~~~~~IBM\\n | DELL~~~~~~Dell\\n | HPQ~~~~~~HP-Hewlett Packard\\n | V~~~~~~VISA\\n | MA~~~~~~MasterCard\\n | NSRGF~~~~~~Nestle\\n | JPM~~~~~~JPMorgan\\n | JNJ~~~~~~J&J\\n | BABA~~~~~~Alibaba ADR"}}'"
2020-05-27 12:36:21,841:aiogram:Make request: "getUpdates" with data: "{'offset': 210735046, 'timeout': 20}" and files "None"
2020-05-27 12:36:41,890:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:36:41,991:aiogram:Make request: "getUpdates" with data: "{'offset': 210735046, 'timeout': 20}" and files "None"
2020-05-27 12:36:53,756:asyncio:Using selector: SelectSelector
2020-05-27 12:36:53,772:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:36:53,898:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:36:53,899:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:36:53,899:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:36:53,899:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:36:53,939:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:36:53,939:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:36:57,790:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735046,\n"message":{"message_id":323,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572217,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:36:57,791:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:36:57,791:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name Company name\n | TSLA\t~~\tTesla\n | GOOG\t~~\tGoogle\n | MSFT\t~~\tMicrosoft\n | APPL\t~~\tApple\n | AMZN\t~~\tAmazon\n | FB\t~~\tFacebook\n | NFLX\t~~\tNetflix\n | WMT\t~~\tWalmart\n | SSNLF\t~~\tSamsung\n | DIS\t~~\tWalt Disney\n | CSCO\t~~\tCisco\n | ADBE\t~~\tAdobe\n | INTC\t~~\tIntel\n | NVDA\t~~\tNVIDIA\n | AMD\t~~\tAMD\n | IBM\t~~\tIBM\n | DELL\t~~\tDell\n | HPQ\t~~\tHP-Hewlett Packard\n | V\t~~\tVISA\n | MA\t~~\tMasterCard\n | NSRGF\t~~\tNestle\n | JPM\t~~\tJPMorgan\n | JNJ\t~~\tJ&J\n | BABA\t~~\tAlibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:36:57,892:aiogram:Make request: "getUpdates" with data: "{'offset': 210735047, 'timeout': 20}" and files "None"
2020-05-27 12:36:57,909:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":324,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572217,"text":"Enter company what you need: \\n Market name Company name\\n | TSLA ~~ Tesla\\n | GOOG ~~ Google\\n | MSFT ~~ Microsoft\\n | APPL ~~ Apple\\n | AMZN ~~ Amazon\\n | FB ~~ Facebook\\n | NFLX ~~ Netflix\\n | WMT ~~ Walmart\\n | SSNLF ~~ Samsung\\n | DIS ~~ Walt Disney\\n | CSCO ~~ Cisco\\n | ADBE ~~ Adobe\\n | INTC ~~ Intel\\n | NVDA ~~ NVIDIA\\n | AMD ~~ AMD\\n | IBM ~~ IBM\\n | DELL ~~ Dell\\n | HPQ ~~ HP-Hewlett Packard\\n | V ~~ VISA\\n | MA ~~ MasterCard\\n | NSRGF ~~ Nestle\\n | JPM ~~ JPMorgan\\n | JNJ ~~ J&J\\n | BABA ~~ Alibaba ADR"}}'"
2020-05-27 12:37:18,012:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:37:18,113:aiogram:Make request: "getUpdates" with data: "{'offset': 210735047, 'timeout': 20}" and files "None"
2020-05-27 12:37:28,292:asyncio:Using selector: SelectSelector
2020-05-27 12:37:28,307:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:37:28,437:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:37:28,437:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:37:28,437:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:37:28,437:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:37:28,478:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:37:28,478:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:37:30,743:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735047,\n"message":{"message_id":325,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572250,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:37:30,743:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:37:30,744:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name Company name\n | TSLA\r~~\rTesla\n | GOOG\r~~\rGoogle\n | MSFT\r~~\rMicrosoft\n | APPL\r~~\rApple\n | AMZN\r~~\rAmazon\n | FB\r~~\rFacebook\n | NFLX\r~~\rNetflix\n | WMT\r~~\rWalmart\n | SSNLF\r~~\rSamsung\n | DIS\r~~\rWalt Disney\n | CSCO\r~~\rCisco\n | ADBE\r~~\rAdobe\n | INTC\r~~\rIntel\n | NVDA\r~~\rNVIDIA\n | AMD\r~~\rAMD\n | IBM\r~~\rIBM\n | DELL\r~~\rDell\n | HPQ\r~~\rHP-Hewlett Packard\n | V\r~~\rVISA\n | MA\r~~\rMasterCard\n | NSRGF\r~~\rNestle\n | JPM\r~~\rJPMorgan\n | JNJ\r~~\rJ&J\n | BABA\r~~\rAlibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:37:30,815:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":326,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572250,"text":"Enter company what you need: \\n Market name Company name\\n | TSLA~~Tesla\\n | GOOG~~Google\\n | MSFT~~Microsoft\\n | APPL~~Apple\\n | AMZN~~Amazon\\n | FB~~Facebook\\n | NFLX~~Netflix\\n | WMT~~Walmart\\n | SSNLF~~Samsung\\n | DIS~~Walt Disney\\n | CSCO~~Cisco\\n | ADBE~~Adobe\\n | INTC~~Intel\\n | NVDA~~NVIDIA\\n | AMD~~AMD\\n | IBM~~IBM\\n | DELL~~Dell\\n | HPQ~~HP-Hewlett Packard\\n | V~~VISA\\n | MA~~MasterCard\\n | NSRGF~~Nestle\\n | JPM~~JPMorgan\\n | JNJ~~J&J\\n | BABA~~Alibaba ADR"}}'"
2020-05-27 12:37:30,852:aiogram:Make request: "getUpdates" with data: "{'offset': 210735048, 'timeout': 20}" and files "None"
2020-05-27 12:37:49,581:asyncio:Using selector: SelectSelector
2020-05-27 12:37:49,596:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:37:49,721:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:37:49,721:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:37:49,721:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:37:49,721:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:37:49,760:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:37:49,760:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:37:50,369:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735048,\n"message":{"message_id":327,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572269,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:37:50,369:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:37:50,370:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name Company name\n | TSLA~~Tesla\n | \tGOOG~~Google\n | \tMSFT~~Microsoft\n | \tAPPL~~Apple\n | \tAMZN~~Amazon\n | \tFB~~Facebook\n | \tNFLX~~Netflix\n | \tWMT~~Walmart\n | \tSSNLF~~Samsung\n | \tDIS~~Walt Disney\n | \tCSCO~~Cisco\n | \tADBE~~Adobe\n | \tINTC~~Intel\n | \tNVDA~~NVIDIA\n | \tAMD~~AMD\n | \tIBM~~IBM\n | \tDELL~~Dell\n | \tHPQ~~HP-Hewlett Packard\n | \tV~~VISA\n | \tMA~~MasterCard\n | \tNSRGF~~Nestle\n | \tJPM~~JPMorgan\n | \tJNJ~~J&J\n | \tBABA~~Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:37:50,452:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":328,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572270,"text":"Enter company what you need: \\n Market name Company name\\n | TSLA~~Tesla\\n |  GOOG~~Google\\n |  MSFT~~Microsoft\\n |  APPL~~Apple\\n |  AMZN~~Amazon\\n |  FB~~Facebook\\n |  NFLX~~Netflix\\n |  WMT~~Walmart\\n |  SSNLF~~Samsung\\n |  DIS~~Walt Disney\\n |  CSCO~~Cisco\\n |  ADBE~~Adobe\\n |  INTC~~Intel\\n |  NVDA~~NVIDIA\\n |  AMD~~AMD\\n |  IBM~~IBM\\n |  DELL~~Dell\\n |  HPQ~~HP-Hewlett Packard\\n |  V~~VISA\\n |  MA~~MasterCard\\n |  NSRGF~~Nestle\\n |  JPM~~JPMorgan\\n |  JNJ~~J&J\\n |  BABA~~Alibaba ADR"}}'"
2020-05-27 12:37:50,475:aiogram:Make request: "getUpdates" with data: "{'offset': 210735049, 'timeout': 20}" and files "None"
2020-05-27 12:38:09,715:asyncio:Using selector: SelectSelector
2020-05-27 12:38:09,730:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:38:09,909:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:38:09,909:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:38:09,909:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:38:09,909:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:38:09,966:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:38:09,966:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:38:10,385:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735049,\n"message":{"message_id":329,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572289,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:38:10,385:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:38:10,386:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name Company name\n | TSLA~~Tesla\n |      GOOG~~Google\n |      MSFT~~Microsoft\n |      APPL~~Apple\n |      AMZN~~Amazon\n |      FB~~Facebook\n |      NFLX~~Netflix\n |      WMT~~Walmart\n |      SSNLF~~Samsung\n |      DIS~~Walt Disney\n |      CSCO~~Cisco\n |      ADBE~~Adobe\n |      INTC~~Intel\n |      NVDA~~NVIDIA\n |      AMD~~AMD\n |      IBM~~IBM\n |      DELL~~Dell\n |      HPQ~~HP-Hewlett Packard\n |      V~~VISA\n |      MA~~MasterCard\n |      NSRGF~~Nestle\n |      JPM~~JPMorgan\n |      JNJ~~J&J\n |      BABA~~Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:38:10,479:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":330,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572290,"text":"Enter company what you need: \\n Market name Company name\\n | TSLA~~Tesla\\n |      GOOG~~Google\\n |      MSFT~~Microsoft\\n |      APPL~~Apple\\n |      AMZN~~Amazon\\n |      FB~~Facebook\\n |      NFLX~~Netflix\\n |      WMT~~Walmart\\n |      SSNLF~~Samsung\\n |      DIS~~Walt Disney\\n |      CSCO~~Cisco\\n |      ADBE~~Adobe\\n |      INTC~~Intel\\n |      NVDA~~NVIDIA\\n |      AMD~~AMD\\n |      IBM~~IBM\\n |      DELL~~Dell\\n |      HPQ~~HP-Hewlett Packard\\n |      V~~VISA\\n |      MA~~MasterCard\\n |      NSRGF~~Nestle\\n |      JPM~~JPMorgan\\n |      JNJ~~J&J\\n |      BABA~~Alibaba ADR"}}'"
2020-05-27 12:38:10,479:aiogram:Make request: "getUpdates" with data: "{'offset': 210735050, 'timeout': 20}" and files "None"
2020-05-27 12:38:30,538:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:38:30,639:aiogram:Make request: "getUpdates" with data: "{'offset': 210735050, 'timeout': 20}" and files "None"
2020-05-27 12:38:45,937:asyncio:Using selector: SelectSelector
2020-05-27 12:38:45,952:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:38:46,074:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:38:46,074:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:38:46,074:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:38:46,074:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:38:46,116:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:38:46,116:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:38:48,125:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735050,\n"message":{"message_id":331,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572327,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:38:48,125:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:38:48,126:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name ~~ Company name\n |           TSLA~~Tesla\n |  GOOG~~Google\n |  MSFT~~Microsoft\n |  APPL~~Apple\n |  AMZN~~Amazon\n |  FB~~Facebook\n |  NFLX~~Netflix\n |  WMT~~Walmart\n |  SSNLF~~Samsung\n |  DIS~~Walt Disney\n |  CSCO~~Cisco\n |  ADBE~~Adobe\n |  INTC~~Intel\n |  NVDA~~NVIDIA\n |  AMD~~AMD\n |  IBM~~IBM\n |  DELL~~Dell\n |  HPQ~~HP-Hewlett Packard\n |  V~~VISA\n |  MA~~MasterCard\n |  NSRGF~~Nestle\n |  JPM~~JPMorgan\n |  JNJ~~J&J\n |  BABA~~Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:38:48,193:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":332,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572327,"text":"Enter company what you need: \\n Market name ~~ Company name\\n |           TSLA~~Tesla\\n |  GOOG~~Google\\n |  MSFT~~Microsoft\\n |  APPL~~Apple\\n |  AMZN~~Amazon\\n |  FB~~Facebook\\n |  NFLX~~Netflix\\n |  WMT~~Walmart\\n |  SSNLF~~Samsung\\n |  DIS~~Walt Disney\\n |  CSCO~~Cisco\\n |  ADBE~~Adobe\\n |  INTC~~Intel\\n |  NVDA~~NVIDIA\\n |  AMD~~AMD\\n |  IBM~~IBM\\n |  DELL~~Dell\\n |  HPQ~~HP-Hewlett Packard\\n |  V~~VISA\\n |  MA~~MasterCard\\n |  NSRGF~~Nestle\\n |  JPM~~JPMorgan\\n |  JNJ~~J&J\\n |  BABA~~Alibaba ADR"}}'"
2020-05-27 12:38:48,217:aiogram:Make request: "getUpdates" with data: "{'offset': 210735051, 'timeout': 20}" and files "None"
2020-05-27 12:38:56,092:asyncio:Using selector: SelectSelector
2020-05-27 12:38:56,106:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:38:56,275:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:38:56,275:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:38:56,275:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:38:56,275:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:38:56,328:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:38:56,328:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:38:57,668:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735051,\n"message":{"message_id":333,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572337,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:38:57,668:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:38:57,669:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name ~~ Company name\n |             TSLA~~Tesla\n |  GOOG~~Google\n |  MSFT~~Microsoft\n |  APPL~~Apple\n |  AMZN~~Amazon\n |  FB~~Facebook\n |  NFLX~~Netflix\n |  WMT~~Walmart\n |  SSNLF~~Samsung\n |  DIS~~Walt Disney\n |  CSCO~~Cisco\n |  ADBE~~Adobe\n |  INTC~~Intel\n |  NVDA~~NVIDIA\n |  AMD~~AMD\n |  IBM~~IBM\n |  DELL~~Dell\n |  HPQ~~HP-Hewlett Packard\n |  V~~VISA\n |  MA~~MasterCard\n |  NSRGF~~Nestle\n |  JPM~~JPMorgan\n |  JNJ~~J&J\n |  BABA~~Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:38:57,747:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":334,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572337,"text":"Enter company what you need: \\n Market name ~~ Company name\\n |             TSLA~~Tesla\\n |  GOOG~~Google\\n |  MSFT~~Microsoft\\n |  APPL~~Apple\\n |  AMZN~~Amazon\\n |  FB~~Facebook\\n |  NFLX~~Netflix\\n |  WMT~~Walmart\\n |  SSNLF~~Samsung\\n |  DIS~~Walt Disney\\n |  CSCO~~Cisco\\n |  ADBE~~Adobe\\n |  INTC~~Intel\\n |  NVDA~~NVIDIA\\n |  AMD~~AMD\\n |  IBM~~IBM\\n |  DELL~~Dell\\n |  HPQ~~HP-Hewlett Packard\\n |  V~~VISA\\n |  MA~~MasterCard\\n |  NSRGF~~Nestle\\n |  JPM~~JPMorgan\\n |  JNJ~~J&J\\n |  BABA~~Alibaba ADR"}}'"
2020-05-27 12:38:57,770:aiogram:Make request: "getUpdates" with data: "{'offset': 210735052, 'timeout': 20}" and files "None"
2020-05-27 12:39:05,998:asyncio:Using selector: SelectSelector
2020-05-27 12:39:06,012:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:39:06,137:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:39:06,138:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:39:06,138:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:39:06,138:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:39:06,177:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:39:06,177:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:39:06,907:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735052,\n"message":{"message_id":335,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572346,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:39:06,907:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:39:06,908:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name ~~ Company name\n |              TSLA~~Tesla\n |  GOOG~~Google\n |  MSFT~~Microsoft\n |  APPL~~Apple\n |  AMZN~~Amazon\n |  FB~~Facebook\n |  NFLX~~Netflix\n |  WMT~~Walmart\n |  SSNLF~~Samsung\n |  DIS~~Walt Disney\n |  CSCO~~Cisco\n |  ADBE~~Adobe\n |  INTC~~Intel\n |  NVDA~~NVIDIA\n |  AMD~~AMD\n |  IBM~~IBM\n |  DELL~~Dell\n |  HPQ~~HP-Hewlett Packard\n |  V~~VISA\n |  MA~~MasterCard\n |  NSRGF~~Nestle\n |  JPM~~JPMorgan\n |  JNJ~~J&J\n |  BABA~~Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:39:06,976:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":336,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572346,"text":"Enter company what you need: \\n Market name ~~ Company name\\n |              TSLA~~Tesla\\n |  GOOG~~Google\\n |  MSFT~~Microsoft\\n |  APPL~~Apple\\n |  AMZN~~Amazon\\n |  FB~~Facebook\\n |  NFLX~~Netflix\\n |  WMT~~Walmart\\n |  SSNLF~~Samsung\\n |  DIS~~Walt Disney\\n |  CSCO~~Cisco\\n |  ADBE~~Adobe\\n |  INTC~~Intel\\n |  NVDA~~NVIDIA\\n |  AMD~~AMD\\n |  IBM~~IBM\\n |  DELL~~Dell\\n |  HPQ~~HP-Hewlett Packard\\n |  V~~VISA\\n |  MA~~MasterCard\\n |  NSRGF~~Nestle\\n |  JPM~~JPMorgan\\n |  JNJ~~J&J\\n |  BABA~~Alibaba ADR"}}'"
2020-05-27 12:39:07,000:aiogram:Make request: "getUpdates" with data: "{'offset': 210735053, 'timeout': 20}" and files "None"
2020-05-27 12:39:27,039:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:39:27,140:aiogram:Make request: "getUpdates" with data: "{'offset': 210735053, 'timeout': 20}" and files "None"
2020-05-27 12:39:30,047:asyncio:Using selector: SelectSelector
2020-05-27 12:39:30,062:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:39:30,234:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:39:30,234:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:39:30,234:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:39:30,234:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:39:30,288:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:39:30,288:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:39:31,354:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735053,\n"message":{"message_id":337,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572370,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:39:31,354:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:39:31,355:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name ~~ Company name\n |              TSLA~~Tesla\n |              GOOG~~Google\n |              MSFT~~Microsoft\n |              APPL~~Apple\n |              AMZN~~Amazon\n |              FB~~Facebook\n |              NFLX~~Netflix\n |              WMT~~Walmart\n |              SSNLF~~Samsung\n |              DIS~~Walt Disney\n |              CSCO~~Cisco\n |              ADBE~~Adobe\n |              INTC~~Intel\n |              NVDA~~NVIDIA\n |              AMD~~AMD\n |              IBM~~IBM\n |              DELL~~Dell\n |              HPQ~~HP-Hewlett Packard\n |              V~~VISA\n |              MA~~MasterCard\n |              NSRGF~~Nestle\n |              JPM~~JPMorgan\n |              JNJ~~J&J\n |              BABA~~Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:39:31,456:aiogram:Make request: "getUpdates" with data: "{'offset': 210735054, 'timeout': 20}" and files "None"
2020-05-27 12:39:31,461:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":338,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572371,"text":"Enter company what you need: \\n Market name ~~ Company name\\n |              TSLA~~Tesla\\n |              GOOG~~Google\\n |              MSFT~~Microsoft\\n |              APPL~~Apple\\n |              AMZN~~Amazon\\n |              FB~~Facebook\\n |              NFLX~~Netflix\\n |              WMT~~Walmart\\n |              SSNLF~~Samsung\\n |              DIS~~Walt Disney\\n |              CSCO~~Cisco\\n |              ADBE~~Adobe\\n |              INTC~~Intel\\n |              NVDA~~NVIDIA\\n |              AMD~~AMD\\n |              IBM~~IBM\\n |              DELL~~Dell\\n |              HPQ~~HP-Hewlett Packard\\n |              V~~VISA\\n |              MA~~MasterCard\\n |              NSRGF~~Nestle\\n |              JPM~~JPMorgan\\n |              JNJ~~J&J\\n |              BABA~~Alibaba ADR"}}'"
2020-05-27 12:39:51,575:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:39:51,676:aiogram:Make request: "getUpdates" with data: "{'offset': 210735054, 'timeout': 20}" and files "None"
2020-05-27 12:40:11,716:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:40:11,817:aiogram:Make request: "getUpdates" with data: "{'offset': 210735054, 'timeout': 20}" and files "None"
2020-05-27 12:40:31,858:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:40:31,958:aiogram:Make request: "getUpdates" with data: "{'offset': 210735054, 'timeout': 20}" and files "None"
2020-05-27 12:40:52,000:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:40:52,101:aiogram:Make request: "getUpdates" with data: "{'offset': 210735054, 'timeout': 20}" and files "None"
2020-05-27 12:41:12,143:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:41:12,244:aiogram:Make request: "getUpdates" with data: "{'offset': 210735054, 'timeout': 20}" and files "None"
2020-05-27 12:41:32,285:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:41:32,386:aiogram:Make request: "getUpdates" with data: "{'offset': 210735054, 'timeout': 20}" and files "None"
2020-05-27 12:41:52,428:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:41:52,528:aiogram:Make request: "getUpdates" with data: "{'offset': 210735054, 'timeout': 20}" and files "None"
2020-05-27 12:42:12,569:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:42:12,669:aiogram:Make request: "getUpdates" with data: "{'offset': 210735054, 'timeout': 20}" and files "None"
2020-05-27 12:42:32,713:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:42:32,813:aiogram:Make request: "getUpdates" with data: "{'offset': 210735054, 'timeout': 20}" and files "None"
2020-05-27 12:42:37,777:asyncio:Using selector: SelectSelector
2020-05-27 12:42:37,797:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:42:38,186:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:42:38,186:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:42:38,186:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:42:38,186:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:42:38,225:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:42:38,225:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:42:58,267:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:42:58,368:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:43:01,548:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735054,\n"message":{"message_id":339,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572581,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:43:01,548:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:43:01,549:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name ~~ Company name\n | \tTSLA    ~~  Tesla\n |  GOOG    ~~  Google\n |  MSFT    ~~  Microsoft\n |  APPL    ~~  Apple\n |  AMZN    ~~  Amazon\n |  FB  ~~  Facebook\n |  NFLX    ~~  Netflix\n |  WMT ~~  Walmart\n |  SSNLF   ~~  Samsung\n |  DIS ~~  Walt Disney\n |  CSCO    ~~  Cisco\n |  ADBE    ~~  Adobe\n |  INTC    ~~  Intel\n |  NVDA    ~~  NVIDIA\n |  AMD ~~  AMD\n |  IBM ~~  IBM\n |  DELL    ~~  Dell\n |  HPQ ~~  HP-Hewlett Packard\n |  V   ~~  VISA\n |  MA  ~~  MasterCard\n |  NSRGF   ~~  Nestle\n |  JPM ~~  JPMorgan\n |  JNJ ~~  J&J\n |  BABA    ~~  Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:43:01,635:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:43:01,966:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":340,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572581,"text":"Enter company what you need: \\n Market name ~~ Company name\\n |  TSLA    ~~  Tesla\\n |  GOOG    ~~  Google\\n |  MSFT    ~~  Microsoft\\n |  APPL    ~~  Apple\\n |  AMZN    ~~  Amazon\\n |  FB  ~~  Facebook\\n |  NFLX    ~~  Netflix\\n |  WMT ~~  Walmart\\n |  SSNLF   ~~  Samsung\\n |  DIS ~~  Walt Disney\\n |  CSCO    ~~  Cisco\\n |  ADBE    ~~  Adobe\\n |  INTC    ~~  Intel\\n |  NVDA    ~~  NVIDIA\\n |  AMD ~~  AMD\\n |  IBM ~~  IBM\\n |  DELL    ~~  Dell\\n |  HPQ ~~  HP-Hewlett Packard\\n |  V   ~~  VISA\\n |  MA  ~~  MasterCard\\n |  NSRGF   ~~  Nestle\\n |  JPM ~~  JPMorgan\\n |  JNJ ~~  J&J\\n |  BABA    ~~  Alibaba ADR"}}'"
2020-05-27 12:43:21,758:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:43:21,859:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:43:41,899:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:43:42,000:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:44:02,043:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:44:02,143:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:44:22,183:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:44:22,284:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:44:42,329:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:44:42,430:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:45:02,471:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:45:02,571:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:45:22,613:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:45:22,713:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:45:42,753:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:45:42,854:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:46:02,894:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:46:02,996:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:46:23,036:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:46:23,138:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:46:43,179:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:46:43,280:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:47:03,335:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:47:03,435:aiogram:Make request: "getUpdates" with data: "{'offset': 210735055, 'timeout': 20}" and files "None"
2020-05-27 12:47:14,086:asyncio:Using selector: SelectSelector
2020-05-27 12:47:14,103:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:47:14,272:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:47:14,273:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:47:14,273:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:47:14,273:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:47:14,328:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:47:14,328:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:47:23,602:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735055,\n"message":{"message_id":341,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572843,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:47:23,603:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:47:23,603:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name ~~ Company name\n | \tTSLA   \t~~\t   Tesla\n | \tGOOG   \t~~\t   Google\n | \tMSFT   \t~~\t   Microsoft\n | \tAPPL   \t~~\t   Apple\n | \tAMZN   \t~~\t   Amazon\n | \tFB   \t~~\t   Facebook\n | \tNFLX   \t~~\t   Netflix\n | \tWMT   \t~~\t   Walmart\n | \tSSNLF   \t~~\t   Samsung\n | \tDIS   \t~~\t   Walt Disney\n | \tCSCO   \t~~\t   Cisco\n | \tADBE   \t~~\t   Adobe\n | \tINTC   \t~~\t   Intel\n | \tNVDA   \t~~\t   NVIDIA\n | \tAMD   \t~~\t   AMD\n | \tIBM   \t~~\t   IBM\n | \tDELL   \t~~\t   Dell\n | \tHPQ   \t~~\t   HP-Hewlett Packard\n | \tV   \t~~\t   VISA\n | \tMA   \t~~\t   MasterCard\n | \tNSRGF   \t~~\t   Nestle\n | \tJPM   \t~~\t   JPMorgan\n | \tJNJ   \t~~\t   J&J\n | \tBABA   \t~~\t   Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:47:23,705:aiogram:Make request: "getUpdates" with data: "{'offset': 210735056, 'timeout': 20}" and files "None"
2020-05-27 12:47:23,705:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":342,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572843,"text":"Enter company what you need: \\n Market name ~~ Company name\\n |  TSLA    ~~    Tesla\\n |  GOOG    ~~    Google\\n |  MSFT    ~~    Microsoft\\n |  APPL    ~~    Apple\\n |  AMZN    ~~    Amazon\\n |  FB    ~~    Facebook\\n |  NFLX    ~~    Netflix\\n |  WMT    ~~    Walmart\\n |  SSNLF    ~~    Samsung\\n |  DIS    ~~    Walt Disney\\n |  CSCO    ~~    Cisco\\n |  ADBE    ~~    Adobe\\n |  INTC    ~~    Intel\\n |  NVDA    ~~    NVIDIA\\n |  AMD    ~~    AMD\\n |  IBM    ~~    IBM\\n |  DELL    ~~    Dell\\n |  HPQ    ~~    HP-Hewlett Packard\\n |  V    ~~    VISA\\n |  MA    ~~    MasterCard\\n |  NSRGF    ~~    Nestle\\n |  JPM    ~~    JPMorgan\\n |  JNJ    ~~    J&J\\n |  BABA    ~~    Alibaba ADR"}}'"
2020-05-27 12:47:43,829:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:47:43,930:aiogram:Make request: "getUpdates" with data: "{'offset': 210735056, 'timeout': 20}" and files "None"
2020-05-27 12:48:03,971:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:48:04,072:aiogram:Make request: "getUpdates" with data: "{'offset': 210735056, 'timeout': 20}" and files "None"
2020-05-27 12:48:14,458:asyncio:Using selector: SelectSelector
2020-05-27 12:48:14,472:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:48:14,596:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:48:14,596:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:48:14,596:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:48:14,596:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:48:14,634:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:48:14,634:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:48:14,822:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735056,\n"message":{"message_id":343,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572894,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:48:14,823:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:48:14,823:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name ~~ Company name\n | \tTSLA             \t~~\t             Tesla\n | \tGOOG             \t~~\t             Google\n | \tMSFT             \t~~\t             Microsoft\n | \tAPPL             \t~~\t             Apple\n | \tAMZN             \t~~\t             Amazon\n | \tFB             \t~~\t             Facebook\n | \tNFLX             \t~~\t             Netflix\n | \tWMT             \t~~\t             Walmart\n | \tSSNLF             \t~~\t             Samsung\n | \tDIS             \t~~\t             Walt Disney\n | \tCSCO             \t~~\t             Cisco\n | \tADBE             \t~~\t             Adobe\n | \tINTC             \t~~\t             Intel\n | \tNVDA             \t~~\t             NVIDIA\n | \tAMD             \t~~\t             AMD\n | \tIBM             \t~~\t             IBM\n | \tDELL             \t~~\t             Dell\n | \tHPQ             \t~~\t             HP-Hewlett Packard\n | \tV             \t~~\t             VISA\n | \tMA             \t~~\t             MasterCard\n | \tNSRGF             \t~~\t             Nestle\n | \tJPM             \t~~\t             JPMorgan\n | \tJNJ             \t~~\t             J&J\n | \tBABA             \t~~\t             Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:48:14,886:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":344,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590572894,"text":"Enter company what you need: \\n Market name ~~ Company name\\n |  TSLA              ~~              Tesla\\n |  GOOG              ~~              Google\\n |  MSFT              ~~              Microsoft\\n |  APPL              ~~              Apple\\n |  AMZN              ~~              Amazon\\n |  FB              ~~              Facebook\\n |  NFLX              ~~              Netflix\\n |  WMT              ~~              Walmart\\n |  SSNLF              ~~              Samsung\\n |  DIS              ~~              Walt Disney\\n |  CSCO              ~~              Cisco\\n |  ADBE              ~~              Adobe\\n |  INTC              ~~              Intel\\n |  NVDA              ~~              NVIDIA\\n |  AMD              ~~              AMD\\n |  IBM              ~~              IBM\\n |  DELL              ~~              Dell\\n |  HPQ              ~~              HP-Hewlett Packard\\n |  V              ~~              VISA\\n |  MA              ~~              MasterCard\\n |  NSRGF              ~~              Nestle\\n |  JPM              ~~              JPMorgan\\n |  JNJ              ~~              J&J\\n |  BABA              ~~              Alibaba ADR"}}'"
2020-05-27 12:48:14,924:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:48:34,964:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:48:35,066:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:48:55,106:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:48:55,207:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:49:15,246:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:49:15,348:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:49:35,388:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:49:35,489:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:49:55,529:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:49:55,631:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:50:15,672:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:50:15,772:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:50:35,811:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:50:35,913:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:50:55,954:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:50:56,055:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:51:16,094:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:51:16,196:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:51:36,235:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:51:36,336:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:51:56,376:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:51:56,476:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:52:16,520:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:52:16,621:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:52:36,661:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:52:36,762:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:52:56,803:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:52:56,904:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:53:16,945:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:53:17,046:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:53:37,086:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:53:37,187:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:53:57,228:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:53:57,328:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:54:17,370:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:54:17,472:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:54:37,514:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:54:37,615:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:54:57,654:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:54:57,755:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:55:17,796:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:55:17,896:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:55:37,936:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:55:38,036:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:55:58,076:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:55:58,178:aiogram:Make request: "getUpdates" with data: "{'offset': 210735057, 'timeout': 20}" and files "None"
2020-05-27 12:57:29,464:asyncio:Using selector: SelectSelector
2020-05-27 12:57:29,486:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 12:57:29,614:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 12:57:29,614:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 12:57:29,615:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 12:57:29,615:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 12:57:29,655:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 12:57:29,655:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 12:57:31,232:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735057,\n"message":{"message_id":345,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590573450,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 12:57:31,232:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 12:57:31,233:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Enter company what you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 12:57:31,317:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":346,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590573450,"text":"Enter company what you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 12:57:31,317:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter market name company:'}" and files "None"
2020-05-27 12:57:31,318:aiogram:Make request: "getUpdates" with data: "{'offset': 210735058, 'timeout': 20}" and files "None"
2020-05-27 12:57:31,405:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":347,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590573450,"text":"Please enter market name company:"}}'"
2020-05-27 12:57:51,439:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:57:51,540:aiogram:Make request: "getUpdates" with data: "{'offset': 210735058, 'timeout': 20}" and files "None"
2020-05-27 12:58:11,580:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:58:11,681:aiogram:Make request: "getUpdates" with data: "{'offset': 210735058, 'timeout': 20}" and files "None"
2020-05-27 12:58:31,721:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:58:31,822:aiogram:Make request: "getUpdates" with data: "{'offset': 210735058, 'timeout': 20}" and files "None"
2020-05-27 12:58:51,862:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 12:58:51,962:aiogram:Make request: "getUpdates" with data: "{'offset': 210735058, 'timeout': 20}" and files "None"
2020-05-27 14:14:06,349:asyncio:Using selector: SelectSelector
2020-05-27 14:14:06,365:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 14:14:06,551:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 14:14:06,551:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 14:14:06,551:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 14:14:06,551:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 14:14:06,607:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 14:14:06,607:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:14:26,662:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:14:26,764:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:14:46,818:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:14:46,919:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:15:06,974:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:15:07,074:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:15:27,129:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:15:27,229:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:15:47,285:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:15:47,385:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:16:07,440:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:16:07,540:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:16:27,596:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:16:27,696:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:16:47,753:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:16:47,854:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:17:07,910:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:17:08,011:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:17:28,065:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:17:28,166:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:17:48,222:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:17:48,323:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:18:08,377:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:18:08,478:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:18:28,534:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:18:28,635:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:18:48,690:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:18:48,791:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:19:08,198:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735058,\n"message":{"message_id":348,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578347,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:19:08,198:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:19:08,199:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:19:08,300:aiogram:Make request: "getUpdates" with data: "{'offset': 210735059, 'timeout': 20}" and files "None"
2020-05-27 14:19:08,317:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":349,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578347,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:19:08,317:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:19:08,416:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":350,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578347,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:19:28,456:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:19:28,557:aiogram:Make request: "getUpdates" with data: "{'offset': 210735059, 'timeout': 20}" and files "None"
2020-05-27 14:19:48,611:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:19:48,711:aiogram:Make request: "getUpdates" with data: "{'offset': 210735059, 'timeout': 20}" and files "None"
2020-05-27 14:20:08,767:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:20:08,868:aiogram:Make request: "getUpdates" with data: "{'offset': 210735059, 'timeout': 20}" and files "None"
2020-05-27 14:20:09,839:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735059,\n"message":{"message_id":351,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578409,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 14:20:09,839:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:20:09,840:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 14:20:09,918:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":352,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578409,"text":"Hello Nikita"}}'"
2020-05-27 14:20:09,941:aiogram:Make request: "getUpdates" with data: "{'offset': 210735060, 'timeout': 20}" and files "None"
2020-05-27 14:20:29,995:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:20:30,096:aiogram:Make request: "getUpdates" with data: "{'offset': 210735060, 'timeout': 20}" and files "None"
2020-05-27 14:20:50,150:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:20:50,250:aiogram:Make request: "getUpdates" with data: "{'offset': 210735060, 'timeout': 20}" and files "None"
2020-05-27 14:24:56,089:asyncio:Using selector: SelectSelector
2020-05-27 14:24:56,104:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 14:24:56,262:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 14:24:56,262:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 14:24:56,262:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 14:24:56,263:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 14:24:56,316:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 14:24:56,316:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:24:59,568:asyncio:Using selector: SelectSelector
2020-05-27 14:24:59,586:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 14:24:59,713:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 14:24:59,714:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 14:24:59,714:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 14:24:59,714:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 14:24:59,753:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 14:24:59,754:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:25:02,504:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735060,\n"message":{"message_id":353,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578701,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:25:02,505:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:25:02,507:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:25:02,608:aiogram:Make request: "getUpdates" with data: "{'offset': 210735061, 'timeout': 20}" and files "None"
2020-05-27 14:25:02,624:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":354,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578701,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:25:08,985:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:25:22,731:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":355,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578716,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:26:15,727:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:26:16,303:aiogram:Make request: "getUpdates" with data: "{'offset': 210735061, 'timeout': 20}" and files "None"
2020-05-27 14:26:20,461:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735061,\n"message":{"message_id":356,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578778,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 14:26:20,461:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:26:21,803:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 14:26:21,805:aiogram:Make request: "getUpdates" with data: "{'offset': 210735062, 'timeout': 20}" and files "None"
2020-05-27 14:26:25,961:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":357,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578781,"text":"Hello Nikita"}}'"
2020-05-27 14:26:40,341:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735062,\n"message":{"message_id":358,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578796,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:26:40,341:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:26:40,947:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:26:40,948:aiogram:Make request: "getUpdates" with data: "{'offset': 210735063, 'timeout': 20}" and files "None"
2020-05-27 14:26:41,208:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":359,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578800,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:26:41,253:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:26:49,409:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":360,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578803,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:27:58,562:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:28:00,854:aiogram:Make request: "getUpdates" with data: "{'offset': 210735063, 'timeout': 20}" and files "None"
2020-05-27 14:28:04,195:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735063,\n"message":{"message_id":361,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578875,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 14:28:04,195:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:28:05,963:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 14:28:05,964:aiogram:Make request: "getUpdates" with data: "{'offset': 210735064, 'timeout': 20}" and files "None"
2020-05-27 14:28:10,049:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":362,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578886,"text":"Hello Nikita"}}'"
2020-05-27 14:28:41,467:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:28:42,421:aiogram:Make request: "getUpdates" with data: "{'offset': 210735064, 'timeout': 20}" and files "None"
2020-05-27 14:28:43,723:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735064,\n"message":{"message_id":363,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578917,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:28:43,724:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:28:44,825:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:28:44,826:aiogram:Make request: "getUpdates" with data: "{'offset': 210735065, 'timeout': 20}" and files "None"
2020-05-27 14:28:48,364:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":364,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578924,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:28:53,802:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:29:01,830:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":365,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578938,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:37:35,027:asyncio:Using selector: SelectSelector
2020-05-27 14:37:35,041:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 14:37:35,166:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 14:37:35,167:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 14:37:35,167:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 14:37:35,167:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 14:37:35,205:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 14:37:35,205:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:37:35,244:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735064,\n"message":{"message_id":363,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590578917,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:37:35,244:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:37:35,245:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:37:35,320:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":366,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590579454,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:37:35,321:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:37:35,344:aiogram:Make request: "getUpdates" with data: "{'offset': 210735065, 'timeout': 20}" and files "None"
2020-05-27 14:37:35,389:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":367,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590579454,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:37:40,420:asyncio:Using selector: SelectSelector
2020-05-27 14:37:40,439:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 14:37:40,612:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 14:37:40,612:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 14:37:40,612:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 14:37:40,613:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 14:37:40,666:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 14:37:40,667:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:37:49,589:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735065,\n"message":{"message_id":368,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590579468,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:37:49,590:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:37:49,592:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:37:49,693:aiogram:Make request: "getUpdates" with data: "{'offset': 210735066, 'timeout': 20}" and files "None"
2020-05-27 14:37:49,696:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":369,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590579468,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:37:54,158:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:37:59,569:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":370,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590579475,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:43:10,956:asyncio:Using selector: SelectSelector
2020-05-27 14:43:10,977:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 14:43:11,107:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 14:43:11,107:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 14:43:11,108:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 14:43:11,108:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 14:43:11,147:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 14:43:11,148:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:43:11,185:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735065,\n"message":{"message_id":368,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590579468,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:43:11,186:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:43:11,188:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:43:11,290:aiogram:Make request: "getUpdates" with data: "{'offset': 210735066, 'timeout': 20}" and files "None"
2020-05-27 14:43:11,305:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":371,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590579790,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:43:22,282:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:43:28,551:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":372,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590579806,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:48:35,846:asyncio:Using selector: SelectSelector
2020-05-27 14:48:35,860:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 14:48:35,984:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 14:48:35,984:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 14:48:35,984:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 14:48:35,984:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 14:48:36,024:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 14:48:36,024:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:48:36,064:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735065,\n"message":{"message_id":368,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590579468,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:48:36,064:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:48:36,065:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:48:36,136:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":373,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580115,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:48:36,137:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:48:36,160:aiogram:Make request: "getUpdates" with data: "{'offset': 210735066, 'timeout': 20}" and files "None"
2020-05-27 14:48:36,225:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":374,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580115,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:48:56,320:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:48:56,421:aiogram:Make request: "getUpdates" with data: "{'offset': 210735066, 'timeout': 20}" and files "None"
2020-05-27 14:49:16,479:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:49:16,579:aiogram:Make request: "getUpdates" with data: "{'offset': 210735066, 'timeout': 20}" and files "None"
2020-05-27 14:49:18,282:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735066,\n"message":{"message_id":375,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580157,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:49:18,282:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:49:18,283:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:49:18,363:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":376,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580157,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:49:18,363:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:49:18,363:aiogram:Make request: "getUpdates" with data: "{'offset': 210735067, 'timeout': 20}" and files "None"
2020-05-27 14:49:18,442:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":377,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580157,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:49:38,517:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:49:38,618:aiogram:Make request: "getUpdates" with data: "{'offset': 210735067, 'timeout': 20}" and files "None"
2020-05-27 14:49:59,363:asyncio:Using selector: SelectSelector
2020-05-27 14:49:59,377:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 14:49:59,503:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 14:49:59,503:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 14:49:59,503:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 14:49:59,503:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 14:49:59,544:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 14:49:59,545:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:50:02,693:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735067,\n"message":{"message_id":378,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580201,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:50:02,693:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:50:02,694:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:50:02,761:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":379,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580201,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:50:02,761:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:50:02,799:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:50:02,833:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":380,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580202,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:50:22,958:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:50:23,059:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:50:43,111:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:50:43,213:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:51:03,265:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:51:03,366:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:51:23,423:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:51:23,523:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:51:43,576:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:51:43,677:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:52:03,730:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:52:03,830:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:52:23,883:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:52:23,983:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:52:44,036:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:52:44,138:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:53:04,190:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:53:04,291:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:53:24,344:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:53:24,445:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:53:44,498:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:53:44,599:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:54:04,652:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:54:04,752:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:54:24,806:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:54:24,907:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:54:44,959:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:54:45,060:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:55:05,113:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:55:05,214:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:55:25,271:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:55:25,372:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:55:45,425:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:55:45,526:aiogram:Make request: "getUpdates" with data: "{'offset': 210735068, 'timeout': 20}" and files "None"
2020-05-27 14:55:47,426:asyncio:Using selector: SelectSelector
2020-05-27 14:55:47,441:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 14:55:47,615:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 14:55:47,615:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 14:55:47,615:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 14:55:47,615:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 14:55:47,670:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 14:55:47,670:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:56:07,727:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:56:07,828:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:56:08,771:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735068,\n"message":{"message_id":381,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580567,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:56:08,771:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:56:08,772:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:56:08,866:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":382,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580568,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:56:08,867:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:56:08,867:aiogram:Make request: "getUpdates" with data: "{'offset': 210735069, 'timeout': 20}" and files "None"
2020-05-27 14:56:08,946:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":383,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580568,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:56:17,887:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735069,\n"message":{"message_id":384,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580577,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 14:56:17,887:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:56:17,888:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=OperationalError('near "company": syntax error')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 183, in companies
    Info.update_info_user('company', user_companies, message.from_user.id)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 45, in update_info_user
    'users', column, values, user_id
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\db.py", line 27, in update
    f"UPDATE {table}"
sqlite3.OperationalError: near "company": syntax error
2020-05-27 14:56:17,993:aiogram:Make request: "getUpdates" with data: "{'offset': 210735070, 'timeout': 20}" and files "None"
2020-05-27 14:56:32,029:asyncio:Using selector: SelectSelector
2020-05-27 14:56:32,048:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 14:56:32,214:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 14:56:32,215:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 14:56:32,215:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 14:56:32,215:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 14:56:32,269:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 14:56:32,269:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:56:52,323:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 14:56:52,424:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 14:57:03,526:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735070,\n"message":{"message_id":385,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580622,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 14:57:03,527:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 14:57:03,529:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 14:57:03,623:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":386,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580622,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 14:57:05,550:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 14:57:08,683:aiogram:Make request: "getUpdates" with data: "{'offset': 210735071, 'timeout': 20}" and files "None"
2020-05-27 14:57:11,900:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":387,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580629,"text":"Please enter >market name< company:"}}'"
2020-05-27 14:57:37,204:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735071,\n"message":{"message_id":388,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580654,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 14:57:37,204:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 15:01:54,321:asyncio:Using selector: SelectSelector
2020-05-27 15:01:54,340:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 15:01:54,520:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 15:01:54,521:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 15:01:54,521:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 15:01:54,521:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 15:01:54,576:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 15:01:54,576:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 15:01:54,630:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735071,\n"message":{"message_id":388,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580654,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 15:01:54,630:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 15:01:54,632:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 15:01:54,734:aiogram:Make request: "getUpdates" with data: "{'offset': 210735072, 'timeout': 20}" and files "None"
2020-05-27 15:01:54,736:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":389,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580913,"text":"Hello Nikita"}}'"
2020-05-27 15:01:59,420:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735072,\n"message":{"message_id":390,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580918,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 15:01:59,421:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 15:01:59,422:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 15:01:59,509:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":391,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580918,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 15:02:02,722:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 15:02:04,843:aiogram:Make request: "getUpdates" with data: "{'offset': 210735073, 'timeout': 20}" and files "None"
2020-05-27 15:02:05,266:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":392,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580924,"text":"Please enter >market name< company:"}}'"
2020-05-27 15:02:14,908:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735073,\n"message":{"message_id":393,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580932,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 15:02:14,908:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 15:03:54,673:asyncio:Using selector: SelectSelector
2020-05-27 15:03:54,691:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 15:03:54,821:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 15:03:54,821:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 15:03:54,821:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 15:03:54,821:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 15:03:54,862:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 15:03:54,862:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 15:03:54,902:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735073,\n"message":{"message_id":393,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590580932,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 15:03:54,903:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 15:03:54,904:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 15:03:55,005:aiogram:Make request: "getUpdates" with data: "{'offset': 210735074, 'timeout': 20}" and files "None"
2020-05-27 15:03:55,034:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":394,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581034,"text":"Hello Nikita"}}'"
2020-05-27 15:03:57,259:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735074,\n"message":{"message_id":395,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581036,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 15:03:57,259:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 15:03:57,261:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 15:03:57,363:aiogram:Make request: "getUpdates" with data: "{'offset': 210735075, 'timeout': 20}" and files "None"
2020-05-27 15:03:57,393:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":396,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581036,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 15:03:58,063:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 15:03:59,298:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":397,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581038,"text":"Please enter >market name< company:"}}'"
2020-05-27 15:04:07,986:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735075,\n"message":{"message_id":398,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581045,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 15:04:07,986:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 15:05:25,343:asyncio:Using selector: SelectSelector
2020-05-27 15:05:25,360:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 15:05:25,748:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 15:05:25,748:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 15:05:25,748:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 15:05:25,748:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 15:05:25,832:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 15:05:25,832:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 15:05:25,892:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735075,\n"message":{"message_id":398,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581045,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 15:05:25,893:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 15:05:25,894:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 15:05:25,980:aiogram:Make request: "getUpdates" with data: "{'offset': 210735076, 'timeout': 20}" and files "None"
2020-05-27 15:05:26,036:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":399,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581125,"text":"Hello Nikita"}}'"
2020-05-27 15:05:46,103:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 15:05:46,204:aiogram:Make request: "getUpdates" with data: "{'offset': 210735076, 'timeout': 20}" and files "None"
2020-05-27 15:06:01,326:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735076,\n"message":{"message_id":400,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581160,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 15:06:01,326:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 15:06:01,328:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 15:06:01,399:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":401,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581160,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 15:06:02,789:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 15:06:03,812:aiogram:Make request: "getUpdates" with data: "{'offset': 210735077, 'timeout': 20}" and files "None"
2020-05-27 15:06:03,999:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":402,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581162,"text":"Please enter >market name< company:"}}'"
2020-05-27 15:06:11,641:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735077,\n"message":{"message_id":403,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581170,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 15:06:11,641:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:07:35,147:asyncio:Using selector: SelectSelector
2020-05-27 16:07:35,166:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:07:35,294:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:07:35,294:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:07:35,295:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:07:35,295:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:07:35,335:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 16:07:35,335:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:07:35,375:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735077,\n"message":{"message_id":403,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590581170,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:07:35,375:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:07:35,376:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 16:07:35,448:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":404,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590584854,"text":"Hello Nikita"}}'"
2020-05-27 16:07:35,471:aiogram:Make request: "getUpdates" with data: "{'offset': 210735078, 'timeout': 20}" and files "None"
2020-05-27 16:07:55,512:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:07:55,613:aiogram:Make request: "getUpdates" with data: "{'offset': 210735078, 'timeout': 20}" and files "None"
2020-05-27 16:08:04,300:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735078,\n"message":{"message_id":405,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590584883,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:08:04,301:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:08:04,302:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:08:04,381:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":406,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590584883,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:08:04,382:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:08:04,405:aiogram:Make request: "getUpdates" with data: "{'offset': 210735079, 'timeout': 20}" and files "None"
2020-05-27 16:08:04,447:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":407,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590584883,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:08:16,102:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735079,\n"message":{"message_id":408,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590584895,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:08:16,102:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:08:16,103:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=OperationalError('near ",": syntax error')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 184, in companies
    Info.update_info_user(column, user_companies, message.from_user.id)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 45, in update_info_user
    'users', column, values, int(user_id)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\db.py", line 27, in update
    f"UPDATE {table} "
sqlite3.OperationalError: near ",": syntax error
2020-05-27 16:08:16,208:aiogram:Make request: "getUpdates" with data: "{'offset': 210735080, 'timeout': 20}" and files "None"
2020-05-27 16:08:24,860:asyncio:Using selector: SelectSelector
2020-05-27 16:08:24,878:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:08:25,008:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:08:25,008:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:08:25,009:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:08:25,009:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:08:25,050:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:08:25,051:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:08:26,900:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735080,\n"message":{"message_id":409,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590584905,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:08:26,900:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:08:26,902:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:08:26,976:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":410,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590584905,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:08:28,883:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:08:29,903:aiogram:Make request: "getUpdates" with data: "{'offset': 210735081, 'timeout': 20}" and files "None"
2020-05-27 16:08:30,120:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":411,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590584908,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:08:39,120:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735081,\n"message":{"message_id":412,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590584915,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:08:39,120:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:12:36,428:asyncio:Using selector: SelectSelector
2020-05-27 16:12:36,445:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:12:36,575:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:12:36,575:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:12:36,575:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:12:36,576:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:12:36,615:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 16:12:36,615:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:12:36,657:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735081,\n"message":{"message_id":412,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590584915,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:12:36,657:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:12:36,659:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 16:12:36,744:aiogram:Make request: "getUpdates" with data: "{'offset': 210735082, 'timeout': 20}" and files "None"
2020-05-27 16:12:36,745:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":413,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585155,"text":"Hello Nikita"}}'"
2020-05-27 16:12:40,082:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735082,\n"message":{"message_id":414,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585158,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:12:40,082:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:12:40,084:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:12:40,167:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":415,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585159,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:12:41,966:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:12:43,588:aiogram:Make request: "getUpdates" with data: "{'offset': 210735083, 'timeout': 20}" and files "None"
2020-05-27 16:12:43,760:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":416,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585162,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:12:50,003:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735083,\n"message":{"message_id":417,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585168,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:12:50,003:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:13:04,409:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-27 16:13:13,102:aiogram:Make request: "getUpdates" with data: "{'offset': 210735084, 'timeout': 20}" and files "None"
2020-05-27 16:13:20,948:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":418,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585195,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-27 16:15:17,689:asyncio:Using selector: SelectSelector
2020-05-27 16:15:17,705:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:15:17,891:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:15:17,891:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:15:17,892:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:15:17,892:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:15:17,947:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:15:17,948:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:15:22,024:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735084,\n"message":{"message_id":419,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585320,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:15:22,025:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:15:22,027:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:15:22,113:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":420,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585321,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:15:24,141:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:15:25,085:aiogram:Make request: "getUpdates" with data: "{'offset': 210735085, 'timeout': 20}" and files "None"
2020-05-27 16:15:25,480:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":421,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585324,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:15:34,730:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735085,\n"message":{"message_id":422,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585331,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:15:34,730:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:15:41,733:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-27 16:15:48,628:aiogram:Make request: "getUpdates" with data: "{'offset': 210735086, 'timeout': 20}" and files "None"
2020-05-27 16:15:50,141:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":423,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585347,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-27 16:17:14,542:asyncio:Using selector: SelectSelector
2020-05-27 16:17:14,556:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:17:14,713:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:17:14,714:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:17:14,714:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:17:14,714:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:17:14,764:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:17:14,764:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:17:37,295:asyncio:Using selector: SelectSelector
2020-05-27 16:17:37,310:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:17:37,434:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:17:37,434:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:17:37,434:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:17:37,434:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:17:37,474:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:17:37,474:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:17:40,954:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735086,\n"message":{"message_id":424,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585459,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:17:40,955:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:17:40,956:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:17:41,020:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":425,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585459,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:17:41,021:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:17:41,044:aiogram:Make request: "getUpdates" with data: "{'offset': 210735087, 'timeout': 20}" and files "None"
2020-05-27 16:17:41,089:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":426,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585460,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:17:51,142:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735087,\n"message":{"message_id":427,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585470,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:17:51,142:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:17:51,143:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-27 16:17:51,228:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":428,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585470,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-27 16:17:51,228:aiogram:Make request: "getUpdates" with data: "{'offset': 210735088, 'timeout': 20}" and files "None"
2020-05-27 16:18:11,282:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:18:11,383:aiogram:Make request: "getUpdates" with data: "{'offset': 210735088, 'timeout': 20}" and files "None"
2020-05-27 16:18:31,436:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:18:31,538:aiogram:Make request: "getUpdates" with data: "{'offset': 210735088, 'timeout': 20}" and files "None"
2020-05-27 16:18:51,864:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:18:51,965:aiogram:Make request: "getUpdates" with data: "{'offset': 210735088, 'timeout': 20}" and files "None"
2020-05-27 16:19:12,660:asyncio:Using selector: SelectSelector
2020-05-27 16:19:12,675:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:19:12,839:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:19:12,839:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:19:12,839:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:19:12,839:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:19:12,892:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:19:12,892:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:19:19,704:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735088,\n"message":{"message_id":429,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585558,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:19:19,704:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:19:19,705:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:19:19,791:aiogram:Make request: "getUpdates" with data: "{'offset': 210735089, 'timeout': 20}" and files "None"
2020-05-27 16:19:19,796:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":430,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585558,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:19:19,796:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:19:19,876:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":431,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585558,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:19:25,609:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735089,\n"message":{"message_id":432,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585564,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:19:25,610:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:19:25,611:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-27 16:19:25,712:aiogram:Make request: "getUpdates" with data: "{'offset': 210735090, 'timeout': 20}" and files "None"
2020-05-27 16:19:25,716:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":433,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585564,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-27 16:19:45,735:asyncio:Using selector: SelectSelector
2020-05-27 16:19:45,751:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:19:45,923:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:19:45,923:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:19:45,923:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:19:45,923:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:19:45,978:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:19:45,978:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:19:49,750:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735090,\n"message":{"message_id":434,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585588,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:19:49,751:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:19:49,752:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:19:49,832:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":435,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585588,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:19:49,832:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:19:49,833:aiogram:Make request: "getUpdates" with data: "{'offset': 210735091, 'timeout': 20}" and files "None"
2020-05-27 16:19:49,909:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":436,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585588,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:19:54,272:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735091,\n"message":{"message_id":437,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585593,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:19:54,272:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:19:54,273:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-27 16:19:54,374:aiogram:Make request: "getUpdates" with data: "{'offset': 210735092, 'timeout': 20}" and files "None"
2020-05-27 16:19:54,582:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":438,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585593,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-27 16:21:55,154:asyncio:Using selector: SelectSelector
2020-05-27 16:21:55,168:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:21:55,339:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:21:55,340:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:21:55,340:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:21:55,340:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:21:55,394:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:21:55,394:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:22:02,226:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735092,\n"message":{"message_id":439,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585721,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:22:02,227:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:22:02,228:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:22:02,316:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":440,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585721,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:22:02,316:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:22:02,317:aiogram:Make request: "getUpdates" with data: "{'offset': 210735093, 'timeout': 20}" and files "None"
2020-05-27 16:22:02,404:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":441,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585721,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:22:07,296:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735093,\n"message":{"message_id":442,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585726,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:22:07,296:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:22:07,297:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-27 16:22:07,398:aiogram:Make request: "getUpdates" with data: "{'offset': 210735094, 'timeout': 20}" and files "None"
2020-05-27 16:22:07,399:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":443,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585726,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-27 16:22:30,164:asyncio:Using selector: SelectSelector
2020-05-27 16:22:30,179:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:22:30,303:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:22:30,303:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:22:30,303:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:22:30,303:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:22:30,342:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:22:30,342:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:22:32,109:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735094,\n"message":{"message_id":444,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585751,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:22:32,109:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:22:32,109:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:22:32,183:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":445,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585751,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:22:32,183:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:22:32,205:aiogram:Make request: "getUpdates" with data: "{'offset': 210735095, 'timeout': 20}" and files "None"
2020-05-27 16:22:32,250:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":446,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585751,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:22:37,216:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735095,\n"message":{"message_id":447,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585756,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:22:37,216:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:22:37,217:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-27 16:22:37,284:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":448,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590585756,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-27 16:22:37,323:aiogram:Make request: "getUpdates" with data: "{'offset': 210735096, 'timeout': 20}" and files "None"
2020-05-27 16:27:24,321:asyncio:Using selector: SelectSelector
2020-05-27 16:27:24,335:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:27:24,458:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:27:24,458:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:27:24,458:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:27:24,458:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:27:24,497:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:27:24,498:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:27:28,827:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735096,\n"message":{"message_id":449,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586047,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:27:28,827:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:27:28,828:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:27:28,902:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":450,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586047,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:27:28,902:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:27:28,926:aiogram:Make request: "getUpdates" with data: "{'offset': 210735097, 'timeout': 20}" and files "None"
2020-05-27 16:27:28,998:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":451,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586047,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:27:36,810:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735097,\n"message":{"message_id":452,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586055,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:27:36,810:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:27:36,811:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-27 16:27:36,886:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":453,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586055,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-27 16:27:36,910:aiogram:Make request: "getUpdates" with data: "{'offset': 210735098, 'timeout': 20}" and files "None"
2020-05-27 16:29:48,856:asyncio:Using selector: SelectSelector
2020-05-27 16:29:48,872:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:29:49,001:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:29:49,001:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:29:49,001:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:29:49,001:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:29:49,041:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:29:49,041:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:30:01,381:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735098,\n"message":{"message_id":454,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586200,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 16:30:01,382:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:30:01,464:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-27 16:30:01,488:aiogram:Make request: "getUpdates" with data: "{'offset': 210735099, 'timeout': 20}" and files "None"
2020-05-27 16:30:01,531:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":455,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586200,"text":"Hello!\\nI\'m StockBot, and I can help you monitor popular companies and their market prices!"}}'"
2020-05-27 16:30:01,531:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /mycompany\nList of all companies -- /companies'}" and files "None"
2020-05-27 16:30:01,602:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":456,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586200,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /mycompany\\nList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":10,"type":"bot_command"},{"offset":164,"length":10,"type":"bot_command"}]}}'"
2020-05-27 16:30:21,655:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:30:21,756:aiogram:Make request: "getUpdates" with data: "{'offset': 210735099, 'timeout': 20}" and files "None"
2020-05-27 16:30:22,814:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735099,\n"message":{"message_id":457,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586221,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:30:22,814:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:30:22,815:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:30:22,901:aiogram:Make request: "getUpdates" with data: "{'offset': 210735100, 'timeout': 20}" and files "None"
2020-05-27 16:30:22,902:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":458,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586221,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:30:22,903:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:30:22,996:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":459,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586221,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:30:30,142:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735100,\n"message":{"message_id":460,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586229,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:30:30,142:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:30:30,143:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-27 16:30:30,208:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":461,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586229,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-27 16:30:30,231:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:30:50,274:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:30:50,375:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:31:10,415:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:31:10,516:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:31:30,558:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:31:30,659:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:31:50,702:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:31:50,802:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:32:10,844:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:32:10,980:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:32:31,022:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:32:31,123:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:32:51,167:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:32:51,267:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:33:11,308:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:33:11,409:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:33:31,449:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:33:31,550:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:33:51,592:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:33:51,692:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:34:11,734:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:34:11,835:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:34:31,879:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:34:31,981:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:34:52,022:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:34:52,123:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:35:12,166:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:35:12,266:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:35:32,311:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:35:32,411:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:35:52,453:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:35:52,553:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:36:12,595:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-27 16:36:12,696:aiogram:Make request: "getUpdates" with data: "{'offset': 210735101, 'timeout': 20}" and files "None"
2020-05-27 16:36:22,457:asyncio:Using selector: SelectSelector
2020-05-27 16:36:22,475:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:36:22,607:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:36:22,607:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:36:22,607:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:36:22,608:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:36:22,658:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:36:22,658:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:36:24,946:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735101,\n"message":{"message_id":462,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586583,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:36:24,946:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:36:24,949:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:36:25,017:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":463,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586583,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:36:26,414:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:36:27,482:aiogram:Make request: "getUpdates" with data: "{'offset': 210735102, 'timeout': 20}" and files "None"
2020-05-27 16:36:27,595:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":464,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586586,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:36:39,593:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735102,\n"message":{"message_id":465,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586590,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:36:39,593:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:38:10,450:asyncio:Using selector: SelectSelector
2020-05-27 16:38:10,467:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:38:10,647:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:38:10,648:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:38:10,648:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:38:10,648:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:38:10,706:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 16:38:10,707:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:38:10,768:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735102,\n"message":{"message_id":465,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586590,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:38:10,769:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:38:10,771:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 16:38:10,863:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":466,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586689,"text":"Hello Nikita"}}'"
2020-05-27 16:38:10,864:aiogram:Make request: "getUpdates" with data: "{'offset': 210735103, 'timeout': 20}" and files "None"
2020-05-27 16:38:13,195:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735103,\n"message":{"message_id":467,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586692,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:38:13,195:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:38:13,197:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:38:13,279:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":468,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586692,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:38:14,426:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:38:15,426:aiogram:Make request: "getUpdates" with data: "{'offset': 210735104, 'timeout': 20}" and files "None"
2020-05-27 16:38:15,607:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":469,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586694,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:38:23,611:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735104,\n"message":{"message_id":470,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586700,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:38:23,611:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:39:56,234:asyncio:Using selector: SelectSelector
2020-05-27 16:39:56,252:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:39:56,431:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:39:56,432:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:39:56,432:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:39:56,432:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:39:56,486:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 16:39:56,487:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:39:56,541:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735104,\n"message":{"message_id":470,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586700,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:39:56,542:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:39:56,543:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 16:39:56,633:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":471,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586795,"text":"Hello Nikita"}}'"
2020-05-27 16:39:56,633:aiogram:Make request: "getUpdates" with data: "{'offset': 210735105, 'timeout': 20}" and files "None"
2020-05-27 16:39:58,157:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735105,\n"message":{"message_id":472,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586796,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:39:58,157:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:39:58,159:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:39:58,245:aiogram:Make request: "getUpdates" with data: "{'offset': 210735106, 'timeout': 20}" and files "None"
2020-05-27 16:39:58,268:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":473,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586797,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:39:59,325:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:40:00,467:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":474,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586799,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:40:05,773:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735106,\n"message":{"message_id":475,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586804,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:40:05,773:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:43:10,999:asyncio:Using selector: SelectSelector
2020-05-27 16:43:11,016:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:43:11,184:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:43:11,184:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:43:11,184:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:43:11,184:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:43:11,238:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 16:43:11,238:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:43:11,291:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735106,\n"message":{"message_id":475,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586804,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:43:11,291:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:43:11,292:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 16:43:11,379:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":476,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586990,"text":"Hello Nikita"}}'"
2020-05-27 16:43:11,379:aiogram:Make request: "getUpdates" with data: "{'offset': 210735107, 'timeout': 20}" and files "None"
2020-05-27 16:43:17,932:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735107,\n"message":{"message_id":477,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586996,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:43:17,932:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:43:17,932:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:43:18,013:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":478,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586996,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:43:18,013:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:43:18,037:aiogram:Make request: "getUpdates" with data: "{'offset': 210735108, 'timeout': 20}" and files "None"
2020-05-27 16:43:18,103:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":479,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586996,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:43:20,955:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735108,\n"message":{"message_id":480,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590586999,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:43:20,955:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:43:20,956:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ProgrammingError('Incorrect number of bindings supplied. The current statement uses 1, and there are 28 supplied.')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 184, in companies
    Info.update_info_user(column, user_companies, message.from_user.id)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 45, in update_info_user
    'users', column, values, user_id
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\db.py", line 31, in update
    val_id
sqlite3.ProgrammingError: Incorrect number of bindings supplied. The current statement uses 1, and there are 28 supplied.
2020-05-27 16:43:21,059:aiogram:Make request: "getUpdates" with data: "{'offset': 210735109, 'timeout': 20}" and files "None"
2020-05-27 16:43:31,279:asyncio:Using selector: SelectSelector
2020-05-27 16:43:31,297:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:43:31,428:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:43:31,429:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:43:31,429:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:43:31,429:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:43:31,469:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-27 16:43:31,469:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:43:32,371:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735109,\n"message":{"message_id":481,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587011,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:43:32,371:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:43:32,374:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:43:32,446:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":482,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587011,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:43:34,645:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:43:35,709:aiogram:Make request: "getUpdates" with data: "{'offset': 210735110, 'timeout': 20}" and files "None"
2020-05-27 16:43:35,916:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":483,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587014,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:43:41,974:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735110,\n"message":{"message_id":484,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587019,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:43:41,974:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:46:33,711:asyncio:Using selector: SelectSelector
2020-05-27 16:46:33,728:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:46:33,861:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:46:33,861:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:46:33,861:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:46:33,861:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:46:33,902:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 16:46:33,902:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:46:33,943:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735110,\n"message":{"message_id":484,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587019,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:46:33,943:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:46:33,945:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 16:46:34,017:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":485,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587192,"text":"Hello Nikita"}}'"
2020-05-27 16:46:34,055:aiogram:Make request: "getUpdates" with data: "{'offset': 210735111, 'timeout': 20}" and files "None"
2020-05-27 16:46:35,277:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735111,\n"message":{"message_id":486,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587194,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:46:35,278:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:46:35,280:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:46:35,353:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":487,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587194,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:46:37,417:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:46:38,423:aiogram:Make request: "getUpdates" with data: "{'offset': 210735112, 'timeout': 20}" and files "None"
2020-05-27 16:46:38,556:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":488,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587197,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:46:50,217:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735112,\n"message":{"message_id":489,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587200,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:46:50,217:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:48:47,107:asyncio:Using selector: SelectSelector
2020-05-27 16:48:47,124:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:48:47,280:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:48:47,280:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:48:47,280:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:48:47,280:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:48:47,329:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 16:48:47,330:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:48:47,380:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735112,\n"message":{"message_id":489,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587200,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:48:47,380:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:48:47,381:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 16:48:47,466:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":490,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587326,"text":"Hello Nikita"}}'"
2020-05-27 16:48:47,490:aiogram:Make request: "getUpdates" with data: "{'offset': 210735113, 'timeout': 20}" and files "None"
2020-05-27 16:48:52,247:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735113,\n"message":{"message_id":491,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587331,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:48:52,248:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:48:52,250:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:48:52,351:aiogram:Make request: "getUpdates" with data: "{'offset': 210735114, 'timeout': 20}" and files "None"
2020-05-27 16:48:52,369:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":492,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587331,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:48:54,911:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:48:56,125:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":493,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587334,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:49:05,246:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735114,\n"message":{"message_id":494,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587337,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:49:05,246:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:50:29,229:asyncio:Using selector: SelectSelector
2020-05-27 16:50:29,243:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:50:29,371:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:50:29,371:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:50:29,372:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:50:29,372:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:50:29,412:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 16:50:29,412:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:50:29,452:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735114,\n"message":{"message_id":494,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587337,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:50:29,453:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:50:29,453:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-27 16:50:29,554:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":495,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587428,"text":"Hello Nikita"}}'"
2020-05-27 16:50:29,554:aiogram:Make request: "getUpdates" with data: "{'offset': 210735115, 'timeout': 20}" and files "None"
2020-05-27 16:50:43,467:asyncio:Using selector: SelectSelector
2020-05-27 16:50:43,485:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-27 16:50:43,614:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-27 16:50:43,615:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-27 16:50:43,615:aiogram.dispatcher.dispatcher:Start polling.
2020-05-27 16:50:43,615:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-27 16:50:43,656:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-27 16:50:43,657:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-27 16:50:43,699:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735115,\n"message":{"message_id":496,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587442,"text":"/start","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-27 16:50:43,699:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:50:43,779:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': "Hello!\nI'm StockBot, and I can help you monitor popular companies and their market prices!"}" and files "None"
2020-05-27 16:50:43,804:aiogram:Make request: "getUpdates" with data: "{'offset': 210735116, 'timeout': 20}" and files "None"
2020-05-27 16:50:43,912:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":497,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587442,"text":"Hello!\\nI\'m StockBot, and I can help you monitor popular companies and their market prices!"}}'"
2020-05-27 16:50:43,913:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /mycompany\nList of all companies -- /companies'}" and files "None"
2020-05-27 16:50:44,032:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":498,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587442,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /mycompany\\nList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":10,"type":"bot_command"},{"offset":164,"length":10,"type":"bot_command"}]}}'"
2020-05-27 16:50:53,893:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735116,\n"message":{"message_id":499,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587452,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-27 16:50:53,894:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:50:53,896:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-27 16:50:53,961:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":500,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587452,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-27 16:50:55,502:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-27 16:50:56,596:aiogram:Make request: "getUpdates" with data: "{'offset': 210735117, 'timeout': 20}" and files "None"
2020-05-27 16:50:56,714:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":501,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587455,"text":"Please enter >market name< company:"}}'"
2020-05-27 16:51:06,072:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735117,\n"message":{"message_id":502,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587463,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:51:06,072:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-27 16:51:16,103:aiogram:Make request: "getUpdates" with data: "{'offset': 210735118, 'timeout': 20}" and files "None"
2020-05-27 16:51:16,471:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ProgrammingError('Incorrect number of bindings supplied. The current statement uses 2, and there are 28 supplied.')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 184, in companies
    Info.update_info_user(column, user_companies, message.from_user.id)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 45, in update_info_user
    'users', column, values, user_id
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\db.py", line 31, in update
    val_id
sqlite3.ProgrammingError: Incorrect number of bindings supplied. The current statement uses 2, and there are 28 supplied.
2020-05-27 16:51:29,505:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735118,\n"message":{"message_id":503,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587487,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-27 16:51:29,505:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 13:02:33,595:asyncio:Using selector: SelectSelector
2020-05-28 13:02:33,678:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 13:02:33,895:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 13:02:33,895:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 13:02:33,896:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 13:02:33,896:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 13:02:33,952:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 13:02:33,952:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 13:02:34,007:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735118,\n"message":{"message_id":503,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590587487,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 13:02:34,007:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 13:02:34,009:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 13:02:34,110:aiogram:Make request: "getUpdates" with data: "{'offset': 210735119, 'timeout': 20}" and files "None"
2020-05-28 13:02:34,163:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":504,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590660154,"text":"Hello Nikita"}}'"
2020-05-28 13:02:54,273:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-28 13:02:54,374:aiogram:Make request: "getUpdates" with data: "{'offset': 210735119, 'timeout': 20}" and files "None"
2020-05-28 13:03:14,434:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-28 13:03:14,534:aiogram:Make request: "getUpdates" with data: "{'offset': 210735119, 'timeout': 20}" and files "None"
2020-05-28 13:03:34,591:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-28 13:03:34,691:aiogram:Make request: "getUpdates" with data: "{'offset': 210735119, 'timeout': 20}" and files "None"
2020-05-28 13:03:54,746:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-28 13:03:54,847:aiogram:Make request: "getUpdates" with data: "{'offset': 210735119, 'timeout': 20}" and files "None"
2020-05-28 13:04:08,454:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735119,\n"message":{"message_id":505,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590660248,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 13:04:08,455:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 13:04:08,479:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 13:04:08,560:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":506,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590660248,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 13:04:16,549:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 13:04:18,906:aiogram:Make request: "getUpdates" with data: "{'offset': 210735120, 'timeout': 20}" and files "None"
2020-05-28 13:04:20,399:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":507,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590660260,"text":"Please enter >market name< company:"}}'"
2020-05-28 13:04:40,171:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735120,\n"message":{"message_id":508,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590660279,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 13:04:40,171:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:04:35,234:asyncio:Using selector: SelectSelector
2020-05-28 17:04:35,311:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:04:35,517:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:04:35,517:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:04:35,518:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:04:35,518:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:04:35,575:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:04:35,575:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:04:35,631:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735120,\n"message":{"message_id":508,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590660279,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:04:35,632:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:04:35,634:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:04:35,726:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":509,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674675,"text":"Hello Nikita"}}'"
2020-05-28 17:04:35,727:aiogram:Make request: "getUpdates" with data: "{'offset': 210735121, 'timeout': 20}" and files "None"
2020-05-28 17:04:53,009:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735121,\n"message":{"message_id":510,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674692,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:04:53,009:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:04:53,020:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:04:53,101:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":511,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674692,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:04:53,101:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:04:53,103:aiogram:Make request: "getUpdates" with data: "{'offset': 210735122, 'timeout': 20}" and files "None"
2020-05-28 17:04:53,214:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":512,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674693,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:05:08,803:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735122,\n"message":{"message_id":513,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674708,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:05:08,803:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:08:56,745:asyncio:Using selector: SelectSelector
2020-05-28 17:08:56,767:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:08:56,940:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:08:56,940:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:08:56,940:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:08:56,940:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:08:56,995:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:08:56,995:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:08:57,050:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735122,\n"message":{"message_id":513,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674708,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:08:57,051:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:08:57,052:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:08:57,148:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":514,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674936,"text":"Hello Nikita"}}'"
2020-05-28 17:08:57,148:aiogram:Make request: "getUpdates" with data: "{'offset': 210735123, 'timeout': 20}" and files "None"
2020-05-28 17:08:59,168:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735123,\n"message":{"message_id":515,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674938,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:08:59,169:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:08:59,170:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:08:59,271:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":516,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674939,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:08:59,271:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:08:59,273:aiogram:Make request: "getUpdates" with data: "{'offset': 210735124, 'timeout': 20}" and files "None"
2020-05-28 17:08:59,353:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":517,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674939,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:09:02,847:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735124,\n"message":{"message_id":518,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674942,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:09:02,847:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:10:13,868:asyncio:Using selector: SelectSelector
2020-05-28 17:10:13,905:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:10:14,041:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:10:14,041:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:10:14,043:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:10:14,043:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:10:14,086:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:10:14,086:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:10:14,129:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735124,\n"message":{"message_id":518,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590674942,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:10:14,130:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:10:14,132:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:10:14,235:aiogram:Make request: "getUpdates" with data: "{'offset': 210735125, 'timeout': 20}" and files "None"
2020-05-28 17:10:14,241:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":519,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675014,"text":"Hello Nikita"}}'"
2020-05-28 17:10:15,246:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735125,\n"message":{"message_id":520,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675015,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:10:15,246:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:10:15,248:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:10:15,351:aiogram:Make request: "getUpdates" with data: "{'offset': 210735126, 'timeout': 20}" and files "None"
2020-05-28 17:10:15,364:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":521,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675015,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:10:15,364:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:10:15,488:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":522,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675015,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:10:19,256:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735126,\n"message":{"message_id":523,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675019,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:10:19,256:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:11:38,461:asyncio:Using selector: SelectSelector
2020-05-28 17:11:38,481:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:11:38,648:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:11:38,648:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:11:38,649:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:11:38,649:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:11:38,700:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:11:38,700:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:11:38,752:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735126,\n"message":{"message_id":523,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675019,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:11:38,752:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:11:38,754:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:11:38,841:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":524,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675098,"text":"Hello Nikita"}}'"
2020-05-28 17:11:38,865:aiogram:Make request: "getUpdates" with data: "{'offset': 210735127, 'timeout': 20}" and files "None"
2020-05-28 17:11:40,539:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735127,\n"message":{"message_id":525,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675100,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:11:40,539:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:11:40,541:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:11:40,621:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":526,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675100,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:11:40,622:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:11:40,646:aiogram:Make request: "getUpdates" with data: "{'offset': 210735128, 'timeout': 20}" and files "None"
2020-05-28 17:11:40,697:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":527,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675100,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:11:43,463:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735128,\n"message":{"message_id":528,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675103,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:11:43,463:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:12:47,155:asyncio:Using selector: SelectSelector
2020-05-28 17:12:47,177:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:12:47,348:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:12:47,348:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:12:47,349:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:12:47,349:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:12:47,405:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:12:47,405:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:12:47,458:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735128,\n"message":{"message_id":528,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675103,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:12:47,459:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:12:47,460:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:12:47,554:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":529,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675167,"text":"Hello Nikita"}}'"
2020-05-28 17:12:47,555:aiogram:Make request: "getUpdates" with data: "{'offset': 210735129, 'timeout': 20}" and files "None"
2020-05-28 17:12:48,506:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735129,\n"message":{"message_id":530,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675168,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:12:48,507:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:12:48,508:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:12:48,611:aiogram:Make request: "getUpdates" with data: "{'offset': 210735130, 'timeout': 20}" and files "None"
2020-05-28 17:12:48,946:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":531,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675168,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:12:48,946:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:12:49,224:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":532,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675169,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:12:54,468:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735130,\n"message":{"message_id":533,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675174,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:12:54,468:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:14:39,616:asyncio:Using selector: SelectSelector
2020-05-28 17:14:39,642:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:14:39,814:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:14:39,815:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:14:39,815:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:14:39,815:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:14:39,870:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:14:39,870:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:14:39,922:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735130,\n"message":{"message_id":533,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675174,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:14:39,922:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:14:39,925:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:14:40,004:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":534,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675279,"text":"Hello Nikita"}}'"
2020-05-28 17:14:40,027:aiogram:Make request: "getUpdates" with data: "{'offset': 210735131, 'timeout': 20}" and files "None"
2020-05-28 17:14:41,059:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735131,\n"message":{"message_id":535,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675280,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:14:41,059:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:14:41,061:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:14:41,163:aiogram:Make request: "getUpdates" with data: "{'offset': 210735132, 'timeout': 20}" and files "None"
2020-05-28 17:14:41,265:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":536,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675281,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:14:41,266:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:14:41,397:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":537,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675281,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:14:45,813:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735132,\n"message":{"message_id":538,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675285,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:14:45,813:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:16:30,674:asyncio:Using selector: SelectSelector
2020-05-28 17:16:30,695:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:16:30,831:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:16:30,832:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:16:30,832:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:16:30,832:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:16:30,873:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:16:30,873:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:16:30,918:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735132,\n"message":{"message_id":538,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675285,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:16:30,918:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:16:30,920:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:16:30,999:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":539,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675390,"text":"Hello Nikita"}}'"
2020-05-28 17:16:31,022:aiogram:Make request: "getUpdates" with data: "{'offset': 210735133, 'timeout': 20}" and files "None"
2020-05-28 17:16:33,090:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735133,\n"message":{"message_id":540,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675392,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:16:33,091:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:16:33,092:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:16:33,181:aiogram:Make request: "getUpdates" with data: "{'offset': 210735134, 'timeout': 20}" and files "None"
2020-05-28 17:16:33,215:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":541,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675393,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:16:33,216:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:16:33,353:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":542,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675393,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:16:36,125:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735134,\n"message":{"message_id":543,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675395,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:16:36,125:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:17:27,854:asyncio:Using selector: SelectSelector
2020-05-28 17:17:27,876:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:17:28,057:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:17:28,057:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:17:28,057:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:17:28,057:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:17:28,112:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:17:28,112:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:17:28,168:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735134,\n"message":{"message_id":543,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675395,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:17:28,169:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:17:28,170:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:17:28,272:aiogram:Make request: "getUpdates" with data: "{'offset': 210735135, 'timeout': 20}" and files "None"
2020-05-28 17:17:28,288:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":544,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675448,"text":"Hello Nikita"}}'"
2020-05-28 17:17:48,392:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-28 17:17:48,494:aiogram:Make request: "getUpdates" with data: "{'offset': 210735135, 'timeout': 20}" and files "None"
2020-05-28 17:18:08,539:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-28 17:18:08,640:aiogram:Make request: "getUpdates" with data: "{'offset': 210735135, 'timeout': 20}" and files "None"
2020-05-28 17:18:28,684:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-28 17:18:28,785:aiogram:Make request: "getUpdates" with data: "{'offset': 210735135, 'timeout': 20}" and files "None"
2020-05-28 17:18:48,828:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-28 17:18:48,930:aiogram:Make request: "getUpdates" with data: "{'offset': 210735135, 'timeout': 20}" and files "None"
2020-05-28 17:19:08,977:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-28 17:19:09,079:aiogram:Make request: "getUpdates" with data: "{'offset': 210735135, 'timeout': 20}" and files "None"
2020-05-28 17:19:19,880:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735135,\n"message":{"message_id":545,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675559,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:19:19,880:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:19:19,897:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:19:19,977:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":546,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675559,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:19:19,978:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:19:19,979:aiogram:Make request: "getUpdates" with data: "{'offset': 210735136, 'timeout': 20}" and files "None"
2020-05-28 17:19:20,048:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":547,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675559,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:19:23,968:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735136,\n"message":{"message_id":548,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675563,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:19:23,968:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:21:38,180:asyncio:Using selector: SelectSelector
2020-05-28 17:21:38,215:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:21:38,364:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:21:38,364:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:21:38,364:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:21:38,364:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:21:38,406:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:21:38,406:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:21:38,450:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735136,\n"message":{"message_id":548,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675563,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:21:38,451:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:21:38,452:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:21:38,550:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":549,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675698,"text":"Hello Nikita"}}'"
2020-05-28 17:21:38,550:aiogram:Make request: "getUpdates" with data: "{'offset': 210735137, 'timeout': 20}" and files "None"
2020-05-28 17:21:39,824:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735137,\n"message":{"message_id":550,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675699,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:21:39,824:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:21:39,826:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:21:39,895:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":551,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675699,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:21:39,895:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:21:39,919:aiogram:Make request: "getUpdates" with data: "{'offset': 210735138, 'timeout': 20}" and files "None"
2020-05-28 17:21:39,974:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":552,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675699,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:21:43,160:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735138,\n"message":{"message_id":553,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675702,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:21:43,160:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:22:09,872:asyncio:Using selector: SelectSelector
2020-05-28 17:22:09,891:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:22:10,064:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:22:10,065:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:22:10,065:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:22:10,065:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:22:10,119:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:22:10,119:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:22:10,179:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735138,\n"message":{"message_id":553,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675702,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:22:10,179:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:22:10,180:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:22:10,283:aiogram:Make request: "getUpdates" with data: "{'offset': 210735139, 'timeout': 20}" and files "None"
2020-05-28 17:22:10,379:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":554,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675730,"text":"Hello Nikita"}}'"
2020-05-28 17:22:13,105:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735139,\n"message":{"message_id":555,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675732,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:22:13,105:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:22:13,107:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:22:13,190:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":556,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675732,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:22:13,191:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:22:13,192:aiogram:Make request: "getUpdates" with data: "{'offset': 210735140, 'timeout': 20}" and files "None"
2020-05-28 17:22:13,268:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":557,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675733,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:22:17,120:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735140,\n"message":{"message_id":558,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675736,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:22:17,120:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:22:44,681:asyncio:Using selector: SelectSelector
2020-05-28 17:22:44,699:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:22:44,872:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:22:44,873:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:22:44,873:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:22:44,873:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:22:44,929:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:22:44,929:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:22:44,987:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735140,\n"message":{"message_id":558,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675736,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:22:44,987:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:22:44,989:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:22:45,072:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":559,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675764,"text":"Hello Nikita"}}'"
2020-05-28 17:22:45,096:aiogram:Make request: "getUpdates" with data: "{'offset': 210735141, 'timeout': 20}" and files "None"
2020-05-28 17:22:47,114:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735141,\n"message":{"message_id":560,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675766,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:22:47,114:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:22:47,116:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:22:47,216:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":561,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675766,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:22:47,216:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:22:47,217:aiogram:Make request: "getUpdates" with data: "{'offset': 210735142, 'timeout': 20}" and files "None"
2020-05-28 17:22:47,318:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":562,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675767,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:22:50,642:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735142,\n"message":{"message_id":563,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675770,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:22:50,643:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:24:18,343:asyncio:Using selector: SelectSelector
2020-05-28 17:24:18,398:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:24:18,569:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:24:18,569:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:24:18,570:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:24:18,570:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:24:18,611:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:24:18,611:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:24:18,654:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735142,\n"message":{"message_id":563,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675770,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:24:18,655:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:24:18,658:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:24:18,730:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":564,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675858,"text":"Hello Nikita"}}'"
2020-05-28 17:24:18,754:aiogram:Make request: "getUpdates" with data: "{'offset': 210735143, 'timeout': 20}" and files "None"
2020-05-28 17:24:21,126:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735143,\n"message":{"message_id":565,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675860,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:24:21,126:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:24:21,128:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:24:21,203:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":566,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675860,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:24:21,203:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:24:21,243:aiogram:Make request: "getUpdates" with data: "{'offset': 210735144, 'timeout': 20}" and files "None"
2020-05-28 17:24:21,278:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":567,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675861,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:24:23,937:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735144,\n"message":{"message_id":568,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675863,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:24:23,937:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:27:12,026:asyncio:Using selector: SelectSelector
2020-05-28 17:27:12,050:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:27:12,438:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:27:12,438:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:27:12,438:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:27:12,438:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:27:12,716:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:27:12,717:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:27:12,758:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735144,\n"message":{"message_id":568,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590675863,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:27:12,759:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:27:12,760:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:27:12,850:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":569,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676032,"text":"Hello Nikita"}}'"
2020-05-28 17:27:12,850:aiogram:Make request: "getUpdates" with data: "{'offset': 210735145, 'timeout': 20}" and files "None"
2020-05-28 17:27:14,291:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735145,\n"message":{"message_id":570,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676034,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:27:14,292:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:27:14,294:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:27:14,396:aiogram:Make request: "getUpdates" with data: "{'offset': 210735146, 'timeout': 20}" and files "None"
2020-05-28 17:27:14,447:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":571,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676034,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:27:14,447:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:27:14,515:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":572,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676034,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:27:18,625:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735146,\n"message":{"message_id":573,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676038,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:27:18,626:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:27:50,101:asyncio:Using selector: SelectSelector
2020-05-28 17:27:50,121:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:27:50,256:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:27:50,257:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:27:50,257:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:27:50,257:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:27:50,302:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:27:50,302:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:27:50,346:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735146,\n"message":{"message_id":573,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676038,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:27:50,347:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:27:50,349:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:27:50,452:aiogram:Make request: "getUpdates" with data: "{'offset': 210735147, 'timeout': 20}" and files "None"
2020-05-28 17:27:50,506:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":574,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676070,"text":"Hello Nikita"}}'"
2020-05-28 17:27:51,931:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735147,\n"message":{"message_id":575,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676071,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:27:51,931:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:27:51,933:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:27:52,035:aiogram:Make request: "getUpdates" with data: "{'offset': 210735148, 'timeout': 20}" and files "None"
2020-05-28 17:27:52,052:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":576,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676071,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:27:52,053:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:27:52,152:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":577,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676071,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:27:55,091:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735148,\n"message":{"message_id":578,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676074,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:27:55,092:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:28:11,905:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-28 17:28:22,646:aiogram:Make request: "getUpdates" with data: "{'offset': 210735149, 'timeout': 20}" and files "None"
2020-05-28 17:28:44,739:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":579,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676124,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-28 17:29:59,440:asyncio:Using selector: SelectSelector
2020-05-28 17:29:59,578:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:29:59,726:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:29:59,726:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:29:59,726:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:29:59,726:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:29:59,771:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:29:59,771:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:29:59,811:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735149,\n"message":{"message_id":580,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676197,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:29:59,811:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:29:59,813:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:29:59,892:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":581,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676199,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:29:59,892:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:29:59,893:aiogram:Make request: "getUpdates" with data: "{'offset': 210735150, 'timeout': 20}" and files "None"
2020-05-28 17:29:59,959:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":582,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676199,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:30:03,892:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735150,\n"message":{"message_id":583,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676203,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:30:03,893:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:30:03,895:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-28 17:30:03,995:aiogram:Make request: "getUpdates" with data: "{'offset': 210735151, 'timeout': 20}" and files "None"
2020-05-28 17:30:03,997:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":584,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676203,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-28 17:30:24,043:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-28 17:30:24,143:aiogram:Make request: "getUpdates" with data: "{'offset': 210735151, 'timeout': 20}" and files "None"
2020-05-28 17:33:23,953:asyncio:Using selector: SelectSelector
2020-05-28 17:33:23,973:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:33:24,108:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:33:24,109:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:33:24,109:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:33:24,109:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:33:24,152:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-28 17:33:24,152:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:33:29,203:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735151,\n"message":{"message_id":585,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676408,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:33:29,203:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:33:29,204:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:33:29,272:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":586,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676409,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:33:29,272:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:33:29,296:aiogram:Make request: "getUpdates" with data: "{'offset': 210735152, 'timeout': 20}" and files "None"
2020-05-28 17:33:29,346:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":587,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676409,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:33:33,484:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735152,\n"message":{"message_id":588,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676413,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:33:33,484:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:33:38,523:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=OperationalError('database is locked')>
Traceback (most recent call last):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "D:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 184, in companies
    Info.update_info_user(column, user_companies, message.from_user.id)
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\UserInfo.py", line 45, in update_info_user
    'users', column, values, user_id
  File "D:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\db.py", line 33, in update
    conn.commit()
sqlite3.OperationalError: database is locked
2020-05-28 17:33:38,553:aiogram:Make request: "getUpdates" with data: "{'offset': 210735153, 'timeout': 20}" and files "None"
2020-05-28 17:33:45,611:asyncio:Using selector: SelectSelector
2020-05-28 17:33:45,636:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:33:46,086:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:33:46,087:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:33:46,087:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:33:46,087:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:33:46,140:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-28 17:33:46,140:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:34:09,216:asyncio:Using selector: SelectSelector
2020-05-28 17:34:09,251:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:34:09,748:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:34:09,748:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:34:09,748:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:34:09,748:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:34:09,805:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:34:09,806:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:34:09,862:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735153,\n"message":{"message_id":589,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676444,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:34:09,863:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:34:09,866:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:34:09,952:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":590,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676449,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:34:09,952:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:34:09,976:aiogram:Make request: "getUpdates" with data: "{'offset': 210735154, 'timeout': 20}" and files "None"
2020-05-28 17:34:10,039:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":591,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676449,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:34:15,025:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735154,\n"message":{"message_id":592,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676454,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:34:15,026:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:34:54,303:asyncio:Using selector: SelectSelector
2020-05-28 17:34:54,318:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-28 17:34:54,451:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-28 17:34:54,451:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-28 17:34:54,451:aiogram.dispatcher.dispatcher:Start polling.
2020-05-28 17:34:54,451:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-28 17:34:54,495:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-28 17:34:54,495:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-28 17:34:54,541:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735154,\n"message":{"message_id":592,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676454,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:34:54,541:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:34:54,542:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-28 17:34:54,605:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":593,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676494,"text":"Hello Nikita"}}'"
2020-05-28 17:34:54,645:aiogram:Make request: "getUpdates" with data: "{'offset': 210735155, 'timeout': 20}" and files "None"
2020-05-28 17:34:56,302:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735155,\n"message":{"message_id":594,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676496,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-28 17:34:56,302:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:34:56,303:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-28 17:34:56,386:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":595,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676496,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-28 17:34:56,386:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-28 17:34:56,410:aiogram:Make request: "getUpdates" with data: "{'offset': 210735156, 'timeout': 20}" and files "None"
2020-05-28 17:34:56,491:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":596,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676496,"text":"Please enter >market name< company:"}}'"
2020-05-28 17:34:59,942:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735156,\n"message":{"message_id":597,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676499,"text":"TSLA, MSFT, DELL, NVDA, AMZN"}}]}'"
2020-05-28 17:34:59,942:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-28 17:35:00,047:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-28 17:35:00,048:aiogram:Make request: "getUpdates" with data: "{'offset': 210735157, 'timeout': 20}" and files "None"
2020-05-28 17:35:00,127:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":598,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590676499,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-30 13:37:32,638:asyncio:Using selector: SelectSelector
2020-05-30 13:37:32,688:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 13:37:33,152:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 13:37:33,152:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 13:37:33,152:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 13:37:33,153:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 13:37:33,193:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-30 13:37:33,193:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 13:37:53,235:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 13:37:53,336:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 13:38:13,377:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 13:38:13,478:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 13:38:29,933:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735157,\n"message":{"message_id":599,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835110,"text":"Hey"}}]}'"
2020-05-30 13:38:29,934:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 13:38:29,937:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-30 13:38:30,038:aiogram:Make request: "getUpdates" with data: "{'offset': 210735158, 'timeout': 20}" and files "None"
2020-05-30 13:38:30,106:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":600,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835110,"text":"Hello Nikita"}}'"
2020-05-30 13:38:37,047:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735158,\n"message":{"message_id":601,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835117,"text":"Stock"}}]}'"
2020-05-30 13:38:37,047:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 13:38:37,047:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-30 13:38:37,116:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":602,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835117,"text":"Hello Nikita"}}'"
2020-05-30 13:38:37,138:aiogram:Make request: "getUpdates" with data: "{'offset': 210735159, 'timeout': 20}" and files "None"
2020-05-30 13:38:37,948:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735159,\n"message":{"message_id":603,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835118,"text":"User"}}]}'"
2020-05-30 13:38:37,949:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 13:38:37,949:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-30 13:38:38,013:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":604,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835118,"text":"Hello Nikita"}}'"
2020-05-30 13:38:38,051:aiogram:Make request: "getUpdates" with data: "{'offset': 210735160, 'timeout': 20}" and files "None"
2020-05-30 13:38:47,751:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735160,\n"message":{"message_id":605,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835128,"text":"/help","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-30 13:38:47,752:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 13:38:47,752:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /mycompany\nList of all companies -- /companies'}" and files "None"
2020-05-30 13:38:47,853:aiogram:Make request: "getUpdates" with data: "{'offset': 210735161, 'timeout': 20}" and files "None"
2020-05-30 13:38:47,858:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":606,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835128,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /mycompany\\nList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":10,"type":"bot_command"},{"offset":164,"length":10,"type":"bot_command"}]}}'"
2020-05-30 13:38:53,800:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735161,\n"message":{"message_id":607,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835134,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-30 13:38:53,800:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 13:38:53,802:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-30 13:38:54,614:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-30 13:38:54,843:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Tesla shares cost in:\n>>Tesla: 834.405$'}" and files "None"
2020-05-30 13:38:54,844:aiogram:Make request: "getUpdates" with data: "{'offset': 210735162, 'timeout': 20}" and files "None"
2020-05-30 13:38:54,937:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":608,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835135,"text":"Tesla shares cost in:\\n>>Tesla: 834.405$"}}'"
2020-05-30 13:39:10,924:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735162,\n"message":{"message_id":609,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835151,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 13:39:10,924:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 13:39:10,944:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Your companies:\n|', 'reply_to_message_id': 609, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-30 13:39:11,015:aiogram:Make request: "getUpdates" with data: "{'offset': 210735163, 'timeout': 20}" and files "None"
2020-05-30 13:39:11,041:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":610,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835151,"reply_to_message":{"message_id":609,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835151,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]},"text":"Your companies:\\n|"}}'"
2020-05-30 13:39:19,441:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735163,\n"message":{"message_id":611,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835160,"text":"/companies","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 13:39:19,441:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 13:39:19,442:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-30 13:39:19,544:aiogram:Make request: "getUpdates" with data: "{'offset': 210735164, 'timeout': 20}" and files "None"
2020-05-30 13:39:19,597:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":612,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590835160,"text":"Hello Nikita"}}'"
2020-05-30 16:17:42,981:asyncio:Using selector: SelectSelector
2020-05-30 16:17:43,060:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:17:43,251:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:17:43,252:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:17:43,252:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:17:43,252:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:17:43,305:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-30 16:17:43,306:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:17:50,117:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735164,\n"message":{"message_id":613,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590844671,"text":"G"}}]}'"
2020-05-30 16:17:50,118:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:17:50,118:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-30 16:17:50,200:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":614,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590844671,"text":"Hello Nikita"}}'"
2020-05-30 16:17:50,223:aiogram:Make request: "getUpdates" with data: "{'offset': 210735165, 'timeout': 20}" and files "None"
2020-05-30 16:17:54,461:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735165,\n"message":{"message_id":615,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590844675,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-30 16:17:54,462:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:17:54,479:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-30 16:17:54,566:aiogram:Make request: "getUpdates" with data: "{'offset': 210735166, 'timeout': 20}" and files "None"
2020-05-30 16:17:54,636:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":616,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590844675,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-30 16:17:54,636:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-30 16:17:54,789:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":617,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590844675,"text":"Please enter >market name< company:"}}'"
2020-05-30 16:18:14,736:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:18:14,836:aiogram:Make request: "getUpdates" with data: "{'offset': 210735166, 'timeout': 20}" and files "None"
2020-05-30 16:18:15,228:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735166,\n"message":{"message_id":618,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590844696,"text":"TSLA, MSFT, NVDA"}}]}'"
2020-05-30 16:18:15,228:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:18:15,322:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-30 16:18:15,323:aiogram:Make request: "getUpdates" with data: "{'offset': 210735167, 'timeout': 20}" and files "None"
2020-05-30 16:18:15,399:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":619,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590844696,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-30 16:18:35,450:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:18:35,550:aiogram:Make request: "getUpdates" with data: "{'offset': 210735167, 'timeout': 20}" and files "None"
2020-05-30 16:18:55,590:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:18:55,692:aiogram:Make request: "getUpdates" with data: "{'offset': 210735167, 'timeout': 20}" and files "None"
2020-05-30 16:19:15,732:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:19:15,833:aiogram:Make request: "getUpdates" with data: "{'offset': 210735167, 'timeout': 20}" and files "None"
2020-05-30 16:19:35,877:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:19:35,978:aiogram:Make request: "getUpdates" with data: "{'offset': 210735167, 'timeout': 20}" and files "None"
2020-05-30 16:19:56,018:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:19:56,118:aiogram:Make request: "getUpdates" with data: "{'offset': 210735167, 'timeout': 20}" and files "None"
2020-05-30 16:20:16,160:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:20:16,260:aiogram:Make request: "getUpdates" with data: "{'offset': 210735167, 'timeout': 20}" and files "None"
2020-05-30 16:20:36,300:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:20:36,401:aiogram:Make request: "getUpdates" with data: "{'offset': 210735167, 'timeout': 20}" and files "None"
2020-05-30 16:20:56,444:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:20:56,545:aiogram:Make request: "getUpdates" with data: "{'offset': 210735167, 'timeout': 20}" and files "None"
2020-05-30 16:21:15,500:asyncio:Using selector: SelectSelector
2020-05-30 16:21:15,519:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:21:15,683:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:21:15,684:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:21:15,684:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:21:15,684:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:21:15,735:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-30 16:21:15,735:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:21:35,788:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:21:35,889:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:21:55,941:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:21:56,041:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:22:16,094:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:22:16,195:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:22:36,246:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:22:36,347:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:22:56,399:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:22:56,500:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:23:16,551:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:23:16,652:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:23:36,703:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:23:36,804:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:23:51,040:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735167,\n"message":{"message_id":620,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590845032,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-30 16:23:51,041:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:23:51,055:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-30 16:23:51,142:aiogram:Make request: "getUpdates" with data: "{'offset': 210735168, 'timeout': 20}" and files "None"
2020-05-30 16:23:51,143:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":621,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590845032,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-30 16:23:51,144:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-30 16:23:51,223:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":622,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590845032,"text":"Please enter >market name< company:"}}'"
2020-05-30 16:24:11,317:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:24:11,417:aiogram:Make request: "getUpdates" with data: "{'offset': 210735168, 'timeout': 20}" and files "None"
2020-05-30 16:24:26,078:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735168,\n"message":{"message_id":623,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590845067,"text":"TSLA, AMD, IBM, NFLX"}}]}'"
2020-05-30 16:24:26,078:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:24:26,165:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-30 16:24:26,166:aiogram:Make request: "getUpdates" with data: "{'offset': 210735169, 'timeout': 20}" and files "None"
2020-05-30 16:24:26,242:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":624,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590845067,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-30 16:24:46,295:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:24:46,395:aiogram:Make request: "getUpdates" with data: "{'offset': 210735169, 'timeout': 20}" and files "None"
2020-05-30 16:39:56,212:asyncio:Using selector: SelectSelector
2020-05-30 16:39:56,278:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:39:56,422:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:39:56,422:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:39:56,422:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:39:56,422:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:39:56,461:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-30 16:39:56,461:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:40:06,895:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735169,\n"message":{"message_id":625,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846007,"text":"/help","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-30 16:40:06,915:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:40:06,916:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'My command:\nStock price your follow companies -- /stock\nHelp, list of commands(this command) -- /help\nList of your companies -- /mycompany\nList of all companies -- /companies'}" and files "None"
2020-05-30 16:40:06,999:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":626,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846008,"text":"My command:\\nStock price your follow companies -- /stock\\nHelp, list of commands(this command) -- /help\\nList of your companies -- /mycompany\\nList of all companies -- /companies","entities":[{"offset":49,"length":6,"type":"bot_command"},{"offset":96,"length":5,"type":"bot_command"},{"offset":128,"length":10,"type":"bot_command"},{"offset":164,"length":10,"type":"bot_command"}]}}'"
2020-05-30 16:40:07,022:aiogram:Make request: "getUpdates" with data: "{'offset': 210735170, 'timeout': 20}" and files "None"
2020-05-30 16:40:16,065:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735170,\n"message":{"message_id":627,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846017,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:40:16,066:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:40:16,066:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Your companies:\n|', 'reply_to_message_id': 627, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-30 16:40:16,168:aiogram:Make request: "getUpdates" with data: "{'offset': 210735171, 'timeout': 20}" and files "None"
2020-05-30 16:40:16,191:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":628,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846017,"reply_to_message":{"message_id":627,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846017,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]},"text":"Your companies:\\n|"}}'"
2020-05-30 16:40:36,333:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:40:36,434:aiogram:Make request: "getUpdates" with data: "{'offset': 210735171, 'timeout': 20}" and files "None"
2020-05-30 16:40:56,489:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:40:56,589:aiogram:Make request: "getUpdates" with data: "{'offset': 210735171, 'timeout': 20}" and files "None"
2020-05-30 16:41:16,753:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:41:16,854:aiogram:Make request: "getUpdates" with data: "{'offset': 210735171, 'timeout': 20}" and files "None"
2020-05-30 16:46:28,237:asyncio:Using selector: SelectSelector
2020-05-30 16:46:28,296:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:46:28,484:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:46:28,484:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:46:28,485:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:46:28,485:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:46:28,541:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-30 16:46:28,541:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:46:29,465:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735171,\n"message":{"message_id":629,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846390,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:46:29,465:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:48:26,252:asyncio:Using selector: SelectSelector
2020-05-30 16:48:26,298:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:48:26,435:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:48:26,435:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:48:26,436:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:48:26,436:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:48:26,476:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-30 16:48:26,477:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:48:26,515:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735171,\n"message":{"message_id":629,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846390,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:48:26,515:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:50:26,197:asyncio:Using selector: SelectSelector
2020-05-30 16:50:26,213:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:50:26,344:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:50:26,344:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:50:26,345:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:50:26,345:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:50:26,383:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":2}}'"
2020-05-30 16:50:26,384:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:50:26,424:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735171,\n"message":{"message_id":629,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846390,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}},{"update_id":210735172,\n"message":{"message_id":630,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846511,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:50:26,424:aiogram.dispatcher.dispatcher:Received 2 updates.
2020-05-30 16:50:26,425:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 144, in button_company_handler
    "\n | ".join(u.company for u in users if u.id == str(message.from_user.id))
TypeError: sequence item 0: expected str instance, list found
2020-05-30 16:50:26,537:aiogram:Make request: "getUpdates" with data: "{'offset': 210735173, 'timeout': 20}" and files "None"
2020-05-30 16:50:28,408:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735173,\n"message":{"message_id":631,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846629,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:50:28,408:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:50:28,409:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 144, in button_company_handler
    "\n | ".join(u.company for u in users if u.id == str(message.from_user.id))
TypeError: sequence item 0: expected str instance, list found
2020-05-30 16:50:28,510:aiogram:Make request: "getUpdates" with data: "{'offset': 210735174, 'timeout': 20}" and files "None"
2020-05-30 16:50:41,387:asyncio:Using selector: SelectSelector
2020-05-30 16:50:41,405:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:50:41,577:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:50:41,577:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:50:41,577:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:50:41,578:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:50:41,631:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-30 16:50:41,631:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:50:47,593:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735174,\n"message":{"message_id":632,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846648,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:50:47,594:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:51:17,555:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 144, in button_company_handler
    "\n | ".join(u.company for u in users if u.id == str(message.from_user.id))
TypeError: sequence item 0: expected str instance, list found
2020-05-30 16:51:17,557:aiogram:Make request: "getUpdates" with data: "{'offset': 210735175, 'timeout': 20}" and files "None"
2020-05-30 16:51:37,741:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:51:37,841:aiogram:Make request: "getUpdates" with data: "{'offset': 210735175, 'timeout': 20}" and files "None"
2020-05-30 16:51:57,900:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:51:58,001:aiogram:Make request: "getUpdates" with data: "{'offset': 210735175, 'timeout': 20}" and files "None"
2020-05-30 16:52:13,166:asyncio:Using selector: SelectSelector
2020-05-30 16:52:13,186:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:52:13,319:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:52:13,319:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:52:13,319:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:52:13,320:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:52:13,359:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-30 16:52:13,359:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:52:21,818:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735175,\n"message":{"message_id":633,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846742,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:52:21,818:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:53:14,487:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 144, in button_company_handler
    "\n | ".join(u.company for u in users if u.id == str(message.from_user.id))
TypeError: sequence item 0: expected str instance, list found
2020-05-30 16:53:14,507:aiogram:Make request: "getUpdates" with data: "{'offset': 210735176, 'timeout': 20}" and files "None"
2020-05-30 16:53:34,639:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:53:34,740:aiogram:Make request: "getUpdates" with data: "{'offset': 210735176, 'timeout': 20}" and files "None"
2020-05-30 16:53:54,783:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:53:54,884:aiogram:Make request: "getUpdates" with data: "{'offset': 210735176, 'timeout': 20}" and files "None"
2020-05-30 16:54:14,927:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:54:15,029:aiogram:Make request: "getUpdates" with data: "{'offset': 210735176, 'timeout': 20}" and files "None"
2020-05-30 16:54:35,071:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:54:35,172:aiogram:Make request: "getUpdates" with data: "{'offset': 210735176, 'timeout': 20}" and files "None"
2020-05-30 16:54:55,214:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:54:55,315:aiogram:Make request: "getUpdates" with data: "{'offset': 210735176, 'timeout': 20}" and files "None"
2020-05-30 16:55:15,358:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:55:15,458:aiogram:Make request: "getUpdates" with data: "{'offset': 210735176, 'timeout': 20}" and files "None"
2020-05-30 16:55:22,611:asyncio:Using selector: SelectSelector
2020-05-30 16:55:22,631:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:55:22,809:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:55:22,809:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:55:22,809:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:55:22,809:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:55:22,866:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-30 16:55:22,866:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:55:23,655:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735176,\n"message":{"message_id":634,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590846924,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:55:23,655:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:55:36,279:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 145, in button_company_handler
    for u in users
TypeError: sequence item 0: expected str instance, list found
2020-05-30 16:55:36,280:aiogram:Make request: "getUpdates" with data: "{'offset': 210735177, 'timeout': 20}" and files "None"
2020-05-30 16:55:56,336:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:55:56,436:aiogram:Make request: "getUpdates" with data: "{'offset': 210735177, 'timeout': 20}" and files "None"
2020-05-30 16:56:16,491:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:56:16,592:aiogram:Make request: "getUpdates" with data: "{'offset': 210735177, 'timeout': 20}" and files "None"
2020-05-30 16:56:36,647:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:56:36,747:aiogram:Make request: "getUpdates" with data: "{'offset': 210735177, 'timeout': 20}" and files "None"
2020-05-30 16:56:56,803:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:56:56,903:aiogram:Make request: "getUpdates" with data: "{'offset': 210735177, 'timeout': 20}" and files "None"
2020-05-30 16:57:16,959:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 16:57:17,060:aiogram:Make request: "getUpdates" with data: "{'offset': 210735177, 'timeout': 20}" and files "None"
2020-05-30 16:57:20,287:asyncio:Using selector: SelectSelector
2020-05-30 16:57:20,306:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:57:20,473:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:57:20,473:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:57:20,473:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:57:20,474:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:57:20,525:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-30 16:57:20,526:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:57:28,683:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735177,\n"message":{"message_id":635,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590847049,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:57:28,684:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:57:54,620:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 144, in button_company_handler
    "\n | ".join([u.company for u in users if u.id == str(message.from_user.id)])
TypeError: sequence item 0: expected str instance, list found
2020-05-30 16:57:54,639:aiogram:Make request: "getUpdates" with data: "{'offset': 210735178, 'timeout': 20}" and files "None"
2020-05-30 16:58:05,399:asyncio:Using selector: SelectSelector
2020-05-30 16:58:05,445:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:58:05,581:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:58:05,582:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:58:05,582:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:58:05,582:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:58:05,623:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-30 16:58:05,624:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:58:07,300:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735178,\n"message":{"message_id":636,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590847088,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:58:07,301:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:58:09,956:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 144, in button_company_handler
    "\n | ".join([u.company for u in users if u.id == str(message.from_user.id)])
TypeError: sequence item 0: expected str instance, list found
2020-05-30 16:58:09,957:aiogram:Make request: "getUpdates" with data: "{'offset': 210735179, 'timeout': 20}" and files "None"
2020-05-30 16:58:28,368:asyncio:Using selector: SelectSelector
2020-05-30 16:58:28,386:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:58:28,565:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:58:28,565:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:58:28,566:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:58:28,566:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:58:28,621:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-30 16:58:28,621:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:58:29,749:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735179,\n"message":{"message_id":637,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590847110,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:58:29,750:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 16:59:55,095:asyncio:Using selector: SelectSelector
2020-05-30 16:59:55,112:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-30 16:59:55,279:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-30 16:59:55,279:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-30 16:59:55,279:aiogram.dispatcher.dispatcher:Start polling.
2020-05-30 16:59:55,279:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-30 16:59:55,332:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-30 16:59:55,332:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-30 16:59:55,383:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735179,\n"message":{"message_id":637,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590847110,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-30 16:59:55,384:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-30 17:00:05,965:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 144, in button_company_handler
    "\n | ".join([u.company for u in users if u.id == str(message.from_user.id)])
TypeError: sequence item 0: expected str instance, list found
2020-05-30 17:00:05,966:aiogram:Make request: "getUpdates" with data: "{'offset': 210735180, 'timeout': 20}" and files "None"
2020-05-30 17:00:26,020:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 17:00:26,121:aiogram:Make request: "getUpdates" with data: "{'offset': 210735180, 'timeout': 20}" and files "None"
2020-05-30 17:00:46,173:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 17:00:46,274:aiogram:Make request: "getUpdates" with data: "{'offset': 210735180, 'timeout': 20}" and files "None"
2020-05-30 17:01:06,326:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 17:01:06,427:aiogram:Make request: "getUpdates" with data: "{'offset': 210735180, 'timeout': 20}" and files "None"
2020-05-30 17:01:26,480:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 17:01:26,580:aiogram:Make request: "getUpdates" with data: "{'offset': 210735180, 'timeout': 20}" and files "None"
2020-05-30 17:01:46,637:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 17:01:46,738:aiogram:Make request: "getUpdates" with data: "{'offset': 210735180, 'timeout': 20}" and files "None"
2020-05-30 17:02:06,790:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-30 17:02:06,891:aiogram:Make request: "getUpdates" with data: "{'offset': 210735180, 'timeout': 20}" and files "None"
2020-05-31 12:37:31,475:asyncio:Using selector: SelectSelector
2020-05-31 12:37:31,516:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 12:37:31,676:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 12:37:31,676:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 12:37:31,676:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 12:37:31,676:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 12:37:31,717:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 12:37:31,717:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:37:51,758:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:37:51,859:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:38:11,901:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:38:12,001:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:38:32,043:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:38:32,144:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:38:52,186:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:38:52,287:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:39:12,330:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:39:12,431:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:39:32,473:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:39:32,573:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:39:52,614:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:39:52,714:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:40:12,757:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:40:12,858:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:40:32,898:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:40:32,999:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:40:53,044:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:40:53,144:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:41:13,186:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:41:13,287:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:41:33,329:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:41:33,429:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:41:53,471:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:41:53,571:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:42:13,613:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:42:13,715:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:42:33,756:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:42:33,856:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:42:46,352:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735180,\n"message":{"message_id":638,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918166,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-31 12:42:46,353:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 12:43:27,835:asyncio:Using selector: SelectSelector
2020-05-31 12:43:27,864:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 12:43:28,036:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 12:43:28,037:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 12:43:28,037:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 12:43:28,037:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 12:43:28,086:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":2}}'"
2020-05-31 12:43:28,087:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:43:28,138:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735180,\n"message":{"message_id":638,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918166,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}},{"update_id":210735181,\n"message":{"message_id":639,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918207,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-31 12:43:28,138:aiogram.dispatcher.dispatcher:Received 2 updates.
2020-05-31 12:44:00,197:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 144, in button_company_handler
    "\n | ".join(u.company for u in users if u.id == str(message.from_user.id))
TypeError: sequence item 0: expected str instance, list found
2020-05-31 12:44:00,236:aiogram:Make request: "getUpdates" with data: "{'offset': 210735182, 'timeout': 20}" and files "None"
2020-05-31 12:44:20,421:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:44:20,522:aiogram:Make request: "getUpdates" with data: "{'offset': 210735182, 'timeout': 20}" and files "None"
2020-05-31 12:44:40,587:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:44:40,690:aiogram:Make request: "getUpdates" with data: "{'offset': 210735182, 'timeout': 20}" and files "None"
2020-05-31 12:44:48,530:asyncio:Using selector: SelectSelector
2020-05-31 12:44:48,547:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 12:44:48,725:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 12:44:48,726:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 12:44:48,726:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 12:44:48,726:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 12:44:48,782:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 12:44:48,782:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:44:50,695:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735182,\n"message":{"message_id":640,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918290,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-31 12:44:50,695:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 12:44:53,560:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 143, in button_company_handler
    answer_message = "Your companies:\n | " + "\n | ".join(u.company for u in users if u.id == str(message.from_user.id))
TypeError: sequence item 0: expected str instance, list found
2020-05-31 12:44:53,562:aiogram:Make request: "getUpdates" with data: "{'offset': 210735183, 'timeout': 20}" and files "None"
2020-05-31 12:45:00,632:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735183,\n"message":{"message_id":641,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918300,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-31 12:45:00,633:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 12:45:10,850:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 143, in button_company_handler
    answer_message = "Your companies:\n | " + "\n | ".join(u.company for u in users if u.id == str(message.from_user.id))
TypeError: sequence item 0: expected str instance, list found
2020-05-31 12:45:10,851:aiogram:Make request: "getUpdates" with data: "{'offset': 210735184, 'timeout': 20}" and files "None"
2020-05-31 12:45:28,754:asyncio:Using selector: SelectSelector
2020-05-31 12:45:28,776:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 12:45:28,921:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 12:45:28,921:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 12:45:28,921:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 12:45:28,921:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 12:45:28,963:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 12:45:28,963:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:45:40,752:asyncio:Using selector: SelectSelector
2020-05-31 12:45:40,769:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 12:45:40,902:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 12:45:40,902:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 12:45:40,902:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 12:45:40,902:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 12:45:40,943:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 12:45:40,943:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:45:43,148:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735184,\n"message":{"message_id":642,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918343,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-31 12:45:43,148:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 12:45:47,445:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'answer_message', 'reply_to_message_id': 642, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-31 12:45:47,449:aiogram:Make request: "getUpdates" with data: "{'offset': 210735185, 'timeout': 20}" and files "None"
2020-05-31 12:45:47,572:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":643,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918347,"reply_to_message":{"message_id":642,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918343,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]},"text":"answer_message"}}'"
2020-05-31 12:46:20,349:asyncio:Using selector: SelectSelector
2020-05-31 12:46:20,366:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 12:46:20,535:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 12:46:20,535:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 12:46:20,535:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 12:46:20,535:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 12:46:20,587:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 12:46:20,587:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:46:40,120:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735185,\n"message":{"message_id":644,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918400,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]}}]}'"
2020-05-31 12:46:40,121:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 12:46:40,122:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'User info:\n| Nikita (TSLA, AMD, IBM, NFLX)', 'reply_to_message_id': 644, 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-31 12:46:40,224:aiogram:Make request: "getUpdates" with data: "{'offset': 210735186, 'timeout': 20}" and files "None"
2020-05-31 12:46:40,298:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":645,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918400,"reply_to_message":{"message_id":644,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918400,"text":"/user","entities":[{"offset":0,"length":5,"type":"bot_command"}]},"text":"User info:\\n| Nikita (TSLA, AMD, IBM, NFLX)"}}'"
2020-05-31 12:47:00,381:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:47:00,482:aiogram:Make request: "getUpdates" with data: "{'offset': 210735186, 'timeout': 20}" and files "None"
2020-05-31 12:47:20,534:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:47:20,635:aiogram:Make request: "getUpdates" with data: "{'offset': 210735186, 'timeout': 20}" and files "None"
2020-05-31 12:47:40,687:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:47:40,787:aiogram:Make request: "getUpdates" with data: "{'offset': 210735186, 'timeout': 20}" and files "None"
2020-05-31 12:48:00,838:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:48:00,938:aiogram:Make request: "getUpdates" with data: "{'offset': 210735186, 'timeout': 20}" and files "None"
2020-05-31 12:48:20,989:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:48:21,089:aiogram:Make request: "getUpdates" with data: "{'offset': 210735186, 'timeout': 20}" and files "None"
2020-05-31 12:48:41,141:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:48:41,242:aiogram:Make request: "getUpdates" with data: "{'offset': 210735186, 'timeout': 20}" and files "None"
2020-05-31 12:49:00,731:asyncio:Using selector: SelectSelector
2020-05-31 12:49:00,752:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 12:49:00,934:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 12:49:00,934:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 12:49:00,934:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 12:49:00,935:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 12:49:00,989:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 12:49:00,989:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:49:02,512:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735186,\n"message":{"message_id":646,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918542,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-31 12:49:02,512:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 12:49:22,580:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('sequence item 0: expected str instance, list found')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 145, in button_company_handler
    answer_message = "Your companies:\n | " + "\n | ".join(u.company for u in users if u.id == user_id)
TypeError: sequence item 0: expected str instance, list found
2020-05-31 12:49:22,594:aiogram:Make request: "getUpdates" with data: "{'offset': 210735187, 'timeout': 20}" and files "None"
2020-05-31 12:49:43,024:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:49:43,125:aiogram:Make request: "getUpdates" with data: "{'offset': 210735187, 'timeout': 20}" and files "None"
2020-05-31 12:50:03,170:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:50:03,270:aiogram:Make request: "getUpdates" with data: "{'offset': 210735187, 'timeout': 20}" and files "None"
2020-05-31 12:50:23,314:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:50:23,415:aiogram:Make request: "getUpdates" with data: "{'offset': 210735187, 'timeout': 20}" and files "None"
2020-05-31 12:50:43,459:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 12:50:43,560:aiogram:Make request: "getUpdates" with data: "{'offset': 210735187, 'timeout': 20}" and files "None"
2020-05-31 12:51:02,464:asyncio:Using selector: SelectSelector
2020-05-31 12:51:02,481:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 12:51:02,647:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 12:51:02,647:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 12:51:02,647:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 12:51:02,648:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 12:51:02,699:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 12:51:02,699:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 12:51:06,315:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735187,\n"message":{"message_id":647,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918666,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-31 12:51:06,315:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 12:53:18,952:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Your companies:\n | TSLA\n | AMD\n | IBM\n | NFLX', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-31 12:53:18,959:aiogram:Make request: "getUpdates" with data: "{'offset': 210735188, 'timeout': 20}" and files "None"
2020-05-31 12:53:19,109:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":648,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590918799,"text":"Your companies:\\n | TSLA\\n | AMD\\n | IBM\\n | NFLX"}}'"
2020-05-31 13:03:57,263:asyncio:Using selector: SelectSelector
2020-05-31 13:03:57,323:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:03:57,472:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:03:57,485:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:03:57,485:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:03:57,486:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:03:57,526:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 13:03:57,526:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:03:57,568:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735188,\n"message":{"message_id":649,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590919437,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-31 13:03:57,569:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:03:57,570:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Your companies:\n | TSLA\n | AMD\n | IBM\n | NFLX', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-31 13:03:57,636:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":650,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590919437,"text":"Your companies:\\n | TSLA\\n | AMD\\n | IBM\\n | NFLX"}}'"
2020-05-31 13:03:57,674:aiogram:Make request: "getUpdates" with data: "{'offset': 210735189, 'timeout': 20}" and files "None"
2020-05-31 13:04:07,028:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735189,\n"message":{"message_id":651,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590919447,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:04:07,028:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:04:24,758:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:04:25,498:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:04:25,677:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:04:26,381:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=AMD&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:04:26,519:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:04:27,173:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:04:27,311:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:04:29,946:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=NFLX&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:05:27,490:asyncio:Using selector: SelectSelector
2020-05-31 13:05:27,507:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:05:27,697:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:05:27,698:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:05:27,698:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:05:27,698:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:05:27,750:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 13:05:27,750:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:05:27,803:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735189,\n"message":{"message_id":651,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590919447,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:05:27,804:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:05:32,989:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:05:33,671:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:05:48,455:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('tuple indices must be integers or slices, not str')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in button_stock_handler
    stock_company = {k: v for k in user_companies for v in ts.get_intraday(symbol=k, interval='1min')['4. close']}
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in <dictcomp>
    stock_company = {k: v for k in user_companies for v in ts.get_intraday(symbol=k, interval='1min')['4. close']}
TypeError: tuple indices must be integers or slices, not str
2020-05-31 13:05:48,469:aiogram:Make request: "getUpdates" with data: "{'offset': 210735190, 'timeout': 20}" and files "None"
2020-05-31 13:05:48,597:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735190,\n"message":{"message_id":652,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590919530,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:05:48,598:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:05:49,332:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:05:50,631:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:07:07,267:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('tuple indices must be integers or slices, not str')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in button_stock_handler
    stock_company = {k: v for k in user_companies for v in ts.get_intraday(symbol=k, interval='1min')['4. close']}
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in <dictcomp>
    stock_company = {k: v for k in user_companies for v in ts.get_intraday(symbol=k, interval='1min')['4. close']}
TypeError: tuple indices must be integers or slices, not str
2020-05-31 13:07:07,268:aiogram:Make request: "getUpdates" with data: "{'offset': 210735191, 'timeout': 20}" and files "None"
2020-05-31 13:07:18,559:asyncio:Using selector: SelectSelector
2020-05-31 13:07:18,580:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:07:18,723:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:07:18,724:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:07:18,724:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:07:18,724:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:07:18,766:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:07:18,766:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:07:38,809:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:07:38,910:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:07:58,952:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:07:59,053:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:08:19,097:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:08:19,198:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:08:39,240:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:08:39,340:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:08:49,440:asyncio:Using selector: SelectSelector
2020-05-31 13:08:49,460:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:08:49,596:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:08:49,597:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:08:49,597:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:08:49,597:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:08:49,636:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:08:49,636:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:08:51,759:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735191,\n"message":{"message_id":653,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590919731,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:08:51,760:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:08:54,276:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:08:55,112:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:09:00,700:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('tuple indices must be integers or slices, not str')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in button_stock_handler
    stock_company = {k: ts.get_intraday(symbol=k, interval='1min')['4. close'] for k in user_companies}
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in <dictcomp>
    stock_company = {k: ts.get_intraday(symbol=k, interval='1min')['4. close'] for k in user_companies}
TypeError: tuple indices must be integers or slices, not str
2020-05-31 13:09:00,713:aiogram:Make request: "getUpdates" with data: "{'offset': 210735192, 'timeout': 20}" and files "None"
2020-05-31 13:09:20,754:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:09:20,855:aiogram:Make request: "getUpdates" with data: "{'offset': 210735192, 'timeout': 20}" and files "None"
2020-05-31 13:09:40,896:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:09:40,998:aiogram:Make request: "getUpdates" with data: "{'offset': 210735192, 'timeout': 20}" and files "None"
2020-05-31 13:09:45,583:asyncio:Using selector: SelectSelector
2020-05-31 13:09:45,600:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:09:45,731:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:09:45,731:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:09:45,732:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:09:45,732:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:09:45,772:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:09:45,773:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:10:05,815:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:10:05,915:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:10:25,959:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:10:26,059:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:10:46,102:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:10:46,202:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:11:06,245:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:11:06,345:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:11:26,387:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:11:26,488:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:11:46,530:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:11:46,631:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:12:06,674:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:12:06,774:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:12:26,816:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:12:26,917:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:12:46,959:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:12:47,059:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:13:07,099:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:13:07,201:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:13:27,244:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:13:27,345:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:13:47,386:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:13:47,488:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:14:07,529:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:14:07,630:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:14:27,671:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:14:27,771:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:14:35,132:asyncio:Using selector: SelectSelector
2020-05-31 13:14:35,169:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:14:35,308:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:14:35,309:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:14:35,309:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:14:35,309:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:14:35,350:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:14:35,350:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:14:36,252:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735192,\n"message":{"message_id":654,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590920076,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:14:36,252:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:14:56,948:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:14:57,582:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=AMD&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:15:01,856:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('tuple indices must be integers or slices, not str')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in button_stock_handler
    stock_company[k] = ts.get_intraday(symbol=k, interval='1min')['4. close']
TypeError: tuple indices must be integers or slices, not str
2020-05-31 13:15:01,871:aiogram:Make request: "getUpdates" with data: "{'offset': 210735193, 'timeout': 20}" and files "None"
2020-05-31 13:15:22,038:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:15:22,139:aiogram:Make request: "getUpdates" with data: "{'offset': 210735193, 'timeout': 20}" and files "None"
2020-05-31 13:15:42,193:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:15:42,295:aiogram:Make request: "getUpdates" with data: "{'offset': 210735193, 'timeout': 20}" and files "None"
2020-05-31 13:16:02,352:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:16:02,453:aiogram:Make request: "getUpdates" with data: "{'offset': 210735193, 'timeout': 20}" and files "None"
2020-05-31 13:16:22,517:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:16:22,617:aiogram:Make request: "getUpdates" with data: "{'offset': 210735193, 'timeout': 20}" and files "None"
2020-05-31 13:16:42,673:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:16:42,806:aiogram:Make request: "getUpdates" with data: "{'offset': 210735193, 'timeout': 20}" and files "None"
2020-05-31 13:17:02,865:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:17:02,966:aiogram:Make request: "getUpdates" with data: "{'offset': 210735193, 'timeout': 20}" and files "None"
2020-05-31 13:17:23,021:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:17:23,122:aiogram:Make request: "getUpdates" with data: "{'offset': 210735193, 'timeout': 20}" and files "None"
2020-05-31 13:17:43,178:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:17:43,280:aiogram:Make request: "getUpdates" with data: "{'offset': 210735193, 'timeout': 20}" and files "None"
2020-05-31 13:18:06,166:asyncio:Using selector: SelectSelector
2020-05-31 13:18:06,187:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:18:06,354:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:18:06,354:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:18:06,355:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:18:06,355:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:18:06,404:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:18:06,404:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:18:22,321:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735193,\n"message":{"message_id":655,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590920302,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:18:22,322:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:18:27,246:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:18:28,012:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:18:28,143:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('tuple indices must be integers or slices, not str')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 109, in button_stock_handler
    stock_values = [ts.get_intraday(symbol=k, interval='1min')['4. close'] for k in stock_keys]
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 109, in <listcomp>
    stock_values = [ts.get_intraday(symbol=k, interval='1min')['4. close'] for k in stock_keys]
TypeError: tuple indices must be integers or slices, not str
2020-05-31 13:18:28,154:aiogram:Make request: "getUpdates" with data: "{'offset': 210735194, 'timeout': 20}" and files "None"
2020-05-31 13:18:48,209:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:18:48,309:aiogram:Make request: "getUpdates" with data: "{'offset': 210735194, 'timeout': 20}" and files "None"
2020-05-31 13:19:00,710:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735194,\n"message":{"message_id":656,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590920340,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:19:00,710:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:21:05,850:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:21:06,533:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:21:09,096:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('tuple indices must be integers or slices, not str')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 109, in button_stock_handler
    stock_values = [ts.get_intraday(symbol=k, interval='1min')['4. close'] for k in stock_keys]
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 109, in <listcomp>
    stock_values = [ts.get_intraday(symbol=k, interval='1min')['4. close'] for k in stock_keys]
TypeError: tuple indices must be integers or slices, not str
2020-05-31 13:21:09,097:aiogram:Make request: "getUpdates" with data: "{'offset': 210735195, 'timeout': 20}" and files "None"
2020-05-31 13:21:29,231:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:21:29,332:aiogram:Make request: "getUpdates" with data: "{'offset': 210735195, 'timeout': 20}" and files "None"
2020-05-31 13:21:32,424:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735195,\n"message":{"message_id":657,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590920492,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:21:32,424:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:21:34,954:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:21:35,594:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:21:46,899:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('tuple indices must be integers or slices, not str')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 109, in button_stock_handler
    stock_values = [ts.get_intraday(symbol=k, interval='1min')['4. close'] for k in stock_keys]
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 109, in <listcomp>
    stock_values = [ts.get_intraday(symbol=k, interval='1min')['4. close'] for k in stock_keys]
TypeError: tuple indices must be integers or slices, not str
2020-05-31 13:21:46,900:aiogram:Make request: "getUpdates" with data: "{'offset': 210735196, 'timeout': 20}" and files "None"
2020-05-31 13:21:59,591:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735196,\n"message":{"message_id":658,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590920519,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:21:59,591:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:22:01,717:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:22:02,557:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:24:40,302:asyncio:Using selector: SelectSelector
2020-05-31 13:24:40,362:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:24:40,569:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:24:40,570:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:24:40,570:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:24:40,570:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:24:40,627:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 13:24:40,628:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:24:40,688:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735196,\n"message":{"message_id":658,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590920519,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:24:40,688:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:25:14,086:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:25:14,894:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:25:33,405:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('tuple indices must be integers or slices, not str')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 112, in button_stock_handler
    stock_values = stock['4. close']
TypeError: tuple indices must be integers or slices, not str
2020-05-31 13:25:33,423:aiogram:Make request: "getUpdates" with data: "{'offset': 210735197, 'timeout': 20}" and files "None"
2020-05-31 13:25:33,598:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735197,\n"message":{"message_id":659,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590920705,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:25:33,598:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:25:46,128:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:25:46,789:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:25:51,210:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('tuple indices must be integers or slices, not str')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 112, in button_stock_handler
    stock_values = stock['4. close']
TypeError: tuple indices must be integers or slices, not str
2020-05-31 13:25:51,211:aiogram:Make request: "getUpdates" with data: "{'offset': 210735198, 'timeout': 20}" and files "None"
2020-05-31 13:26:11,371:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:26:11,471:aiogram:Make request: "getUpdates" with data: "{'offset': 210735198, 'timeout': 20}" and files "None"
2020-05-31 13:26:31,523:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:26:31,624:aiogram:Make request: "getUpdates" with data: "{'offset': 210735198, 'timeout': 20}" and files "None"
2020-05-31 13:26:49,676:asyncio:Using selector: SelectSelector
2020-05-31 13:26:49,693:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:26:49,822:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:26:49,822:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:26:49,823:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:26:49,823:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:26:49,863:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:26:49,864:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:26:51,291:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735198,\n"message":{"message_id":660,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590920811,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:26:51,291:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:26:55,556:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:26:56,203:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:27:32,853:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:27:33,666:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=AMD&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:32:13,952:asyncio:Using selector: SelectSelector
2020-05-31 13:32:14,012:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:32:14,215:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:32:14,215:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:32:14,215:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:32:14,216:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:32:14,268:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 13:32:14,268:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:32:14,320:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735198,\n"message":{"message_id":660,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590920811,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:32:14,321:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:32:21,884:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:32:22,602:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:32:29,141:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:32:29,767:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=AMD&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:32:55,403:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:32:56,120:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:32:58,113:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:32:58,953:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=NFLX&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:34:10,206:asyncio:Using selector: SelectSelector
2020-05-31 13:34:10,223:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:34:10,391:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:34:10,391:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:34:10,391:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:34:10,392:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:34:10,442:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":3}}'"
2020-05-31 13:34:10,442:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:34:10,493:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735198,\n"message":{"message_id":660,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590920811,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735199,\n"message":{"message_id":661,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921134,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735200,\n"message":{"message_id":662,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921250,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:34:10,494:aiogram.dispatcher.dispatcher:Received 3 updates.
2020-05-31 13:34:14,209:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:34:14,956:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:34:16,786:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:34:17,441:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=AMD&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:34:18,839:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:34:19,459:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:34:21,115:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:34:21,891:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=NFLX&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:34:54,502:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:34:55,162:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:34:57,212:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:34:57,741:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=AMD&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:34:58,582:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:34:59,128:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:34:59,194:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('too many values to unpack (expected 2)')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 117, in button_stock_handler
    "\n>>".join([k + ": " + v + "$" for k, v in stock_companies])
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 117, in <listcomp>
    "\n>>".join([k + ": " + v + "$" for k, v in stock_companies])
ValueError: too many values to unpack (expected 2)
2020-05-31 13:34:59,205:aiogram:Make request: "getUpdates" with data: "{'offset': 210735201, 'timeout': 20}" and files "None"
2020-05-31 13:35:19,333:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:35:19,434:aiogram:Make request: "getUpdates" with data: "{'offset': 210735201, 'timeout': 20}" and files "None"
2020-05-31 13:35:39,477:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:35:39,578:aiogram:Make request: "getUpdates" with data: "{'offset': 210735201, 'timeout': 20}" and files "None"
2020-05-31 13:35:59,621:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:35:59,722:aiogram:Make request: "getUpdates" with data: "{'offset': 210735201, 'timeout': 20}" and files "None"
2020-05-31 13:36:10,489:asyncio:Using selector: SelectSelector
2020-05-31 13:36:10,506:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:36:10,638:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:36:10,638:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:36:10,638:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:36:10,638:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:36:10,680:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:36:10,680:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:36:14,930:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735201,\n"message":{"message_id":663,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921374,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:36:14,931:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:36:19,634:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:36:20,315:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:36:21,894:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:36:22,512:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=AMD&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:36:24,249:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:36:24,903:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:36:26,969:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:36:27,622:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=NFLX&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:36:42,755:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError('can only concatenate str (not "numpy.float64") to str')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 117, in button_stock_handler
    "\n>>".join([k + ": " + v + " $" for k, v in stock_companies.items()])
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 117, in <listcomp>
    "\n>>".join([k + ": " + v + " $" for k, v in stock_companies.items()])
TypeError: can only concatenate str (not "numpy.float64") to str
2020-05-31 13:36:42,757:aiogram:Make request: "getUpdates" with data: "{'offset': 210735202, 'timeout': 20}" and files "None"
2020-05-31 13:36:54,950:asyncio:Using selector: SelectSelector
2020-05-31 13:36:54,967:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:36:55,140:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:36:55,140:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:36:55,140:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:36:55,140:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:36:55,192:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:36:55,192:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:36:59,791:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735202,\n"message":{"message_id":664,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921419,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:36:59,792:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:37:02,400:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:37:03,272:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:37:04,131:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:37:04,800:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=AMD&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:37:06,250:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:37:06,957:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:37:08,075:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:37:08,717:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=NFLX&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:38:21,325:asyncio:Using selector: SelectSelector
2020-05-31 13:38:21,352:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:38:21,535:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:38:21,535:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:38:21,536:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:38:21,536:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:38:21,594:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 13:38:21,595:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:38:21,651:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735202,\n"message":{"message_id":664,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921419,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:38:21,651:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:38:24,325:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:38:25,017:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:38:26,075:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:38:26,818:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=AMD&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:38:28,285:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:38:28,938:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:38:30,392:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:38:31,034:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=NFLX&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:38:51,975:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\nTSLA: 834.405 $\n>>AMD: 53.67 $\n>>IBM: 125.02 $\n>>NFLX: 420.23 $'}" and files "None"
2020-05-31 13:38:51,980:aiogram:Make request: "getUpdates" with data: "{'offset': 210735203, 'timeout': 20}" and files "None"
2020-05-31 13:38:52,112:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735203,\n"message":{"message_id":665,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921501,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:38:52,113:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:39:31,059:asyncio:Using selector: SelectSelector
2020-05-31 13:39:31,074:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:39:31,242:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:39:31,242:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:39:31,242:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:39:31,242:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:39:31,295:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 13:39:31,295:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:39:31,350:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735203,\n"message":{"message_id":665,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921501,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:39:31,350:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:39:31,352:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:39:31,971:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=TSLA&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:39:32,101:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:39:32,737:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=AMD&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:39:32,865:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:39:33,490:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:39:33,618:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:39:34,268:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=NFLX&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:39:34,402:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>TSLA: 834.405 $\n>>AMD: 53.67 $\n>>IBM: 125.02 $\n>>NFLX: 420.23 $'}" and files "None"
2020-05-31 13:39:34,402:aiogram:Make request: "getUpdates" with data: "{'offset': 210735204, 'timeout': 20}" and files "None"
2020-05-31 13:39:34,583:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":667,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921574,"text":"Shares cost in:\\n>>TSLA: 834.405 $\\n>>AMD: 53.67 $\\n>>IBM: 125.02 $\\n>>NFLX: 420.23 $"}}'"
2020-05-31 13:39:48,023:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735204,\n"message":{"message_id":668,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921587,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-31 13:39:48,024:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:39:48,024:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAPPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-31 13:39:48,126:aiogram:Make request: "getUpdates" with data: "{'offset': 210735205, 'timeout': 20}" and files "None"
2020-05-31 13:39:48,127:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":669,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921587,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  APPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-31 13:39:48,127:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-31 13:39:48,234:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":670,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921588,"text":"Please enter >market name< company:"}}'"
2020-05-31 13:40:08,180:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:40:08,281:aiogram:Make request: "getUpdates" with data: "{'offset': 210735205, 'timeout': 20}" and files "None"
2020-05-31 13:40:28,334:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:40:28,435:aiogram:Make request: "getUpdates" with data: "{'offset': 210735205, 'timeout': 20}" and files "None"
2020-05-31 13:40:33,237:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735205,\n"message":{"message_id":671,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921633,"text":"INTC, CSCO, DIS, GOOG, APPL"}}]}'"
2020-05-31 13:40:33,238:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:40:33,322:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-31 13:40:33,345:aiogram:Make request: "getUpdates" with data: "{'offset': 210735206, 'timeout': 20}" and files "None"
2020-05-31 13:40:33,554:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":672,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921633,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-31 13:40:37,296:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735206,\n"message":{"message_id":673,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921637,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:40:37,296:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:40:37,298:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:40:37,965:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=INTC&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:40:38,092:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:40:38,814:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=CSCO&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:40:38,949:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:40:39,594:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DIS&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:40:39,726:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:40:40,369:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=GOOG&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:40:40,505:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:40:41,136:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=APPL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:40:41,138:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in button_stock_handler
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 292, in _handle_api_call
    raise ValueError(json_response["Error Message"])
ValueError: Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.
2020-05-31 13:40:41,176:aiogram:Make request: "getUpdates" with data: "{'offset': 210735207, 'timeout': 20}" and files "None"
2020-05-31 13:41:01,230:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:41:01,331:aiogram:Make request: "getUpdates" with data: "{'offset': 210735207, 'timeout': 20}" and files "None"
2020-05-31 13:41:04,549:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735207,\n"message":{"message_id":674,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921664,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:41:04,549:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:41:04,551:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:41:05,354:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=INTC&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:41:05,483:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:41:06,441:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=CSCO&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:41:06,568:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:41:07,188:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DIS&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:41:07,318:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:41:08,080:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=GOOG&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:41:08,221:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:41:08,805:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=APPL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:41:08,807:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in button_stock_handler
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 292, in _handle_api_call
    raise ValueError(json_response["Error Message"])
ValueError: Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.
2020-05-31 13:41:08,808:aiogram:Make request: "getUpdates" with data: "{'offset': 210735208, 'timeout': 20}" and files "None"
2020-05-31 13:41:39,971:asyncio:Using selector: SelectSelector
2020-05-31 13:41:39,988:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:41:40,124:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:41:40,124:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:41:40,124:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:41:40,124:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:41:40,166:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:41:40,166:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:41:43,788:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735208,\n"message":{"message_id":675,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921703,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:41:43,789:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:41:48,529:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:41:49,087:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=INTC&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:41:49,090:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in button_stock_handler
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 13:41:49,092:aiogram:Make request: "getUpdates" with data: "{'offset': 210735209, 'timeout': 20}" and files "None"
2020-05-31 13:42:09,135:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:42:09,235:aiogram:Make request: "getUpdates" with data: "{'offset': 210735209, 'timeout': 20}" and files "None"
2020-05-31 13:42:11,808:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735209,\n"message":{"message_id":676,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921731,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:42:11,809:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:44:09,497:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:44:10,141:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=INTC&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:44:10,378:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:44:11,005:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=CSCO&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:44:11,135:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:44:11,800:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DIS&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:44:11,933:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:44:12,566:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=GOOG&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:44:12,698:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:44:13,325:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=APPL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:44:13,327:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in button_stock_handler
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 292, in _handle_api_call
    raise ValueError(json_response["Error Message"])
ValueError: Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.
2020-05-31 13:44:13,328:aiogram:Make request: "getUpdates" with data: "{'offset': 210735210, 'timeout': 20}" and files "None"
2020-05-31 13:44:19,884:asyncio:Using selector: SelectSelector
2020-05-31 13:44:19,901:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:44:20,072:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:44:20,072:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:44:20,072:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:44:20,072:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:44:20,124:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:44:20,124:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:44:40,448:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:44:40,548:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:44:44,522:asyncio:Using selector: SelectSelector
2020-05-31 13:44:44,539:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:44:44,715:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:44:44,715:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:44:44,715:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:44:44,716:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:44:44,770:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:44:44,770:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:44:46,978:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735210,\n"message":{"message_id":677,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921886,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:44:46,978:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:44:58,432:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:44:58,980:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=INTC&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:45:00,194:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in button_stock_handler
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 13:45:00,221:aiogram:Make request: "getUpdates" with data: "{'offset': 210735211, 'timeout': 20}" and files "None"
2020-05-31 13:45:20,278:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:45:20,378:aiogram:Make request: "getUpdates" with data: "{'offset': 210735211, 'timeout': 20}" and files "None"
2020-05-31 13:45:40,438:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:45:40,538:aiogram:Make request: "getUpdates" with data: "{'offset': 210735211, 'timeout': 20}" and files "None"
2020-05-31 13:45:52,283:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735211,\n"message":{"message_id":678,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590921952,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:45:52,283:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:45:59,493:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:46:00,186:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=INTC&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:46:39,260:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:46:39,913:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=CSCO&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:46:44,866:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:46:45,553:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DIS&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:46:51,512:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:46:52,211:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=GOOG&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:46:58,148:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:46:58,769:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=APPL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:47:00,634:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in button_stock_handler
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 292, in _handle_api_call
    raise ValueError(json_response["Error Message"])
ValueError: Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.
2020-05-31 13:47:00,635:aiogram:Make request: "getUpdates" with data: "{'offset': 210735212, 'timeout': 20}" and files "None"
2020-05-31 13:47:09,645:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735212,\n"message":{"message_id":679,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922029,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:47:09,645:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:47:12,196:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:47:12,848:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=INTC&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:47:13,481:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:47:14,097:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=CSCO&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:47:14,762:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:47:15,463:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DIS&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:47:16,231:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:47:16,886:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=GOOG&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:49:02,890:asyncio:Using selector: SelectSelector
2020-05-31 13:49:02,917:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:49:03,085:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:49:03,086:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:49:03,086:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:49:03,086:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:49:03,137:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":2}}'"
2020-05-31 13:49:03,137:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:49:03,190:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735212,\n"message":{"message_id":679,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922029,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735213,\n"message":{"message_id":680,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922131,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-31 13:49:03,190:aiogram.dispatcher.dispatcher:Received 2 updates.
2020-05-31 13:49:03,192:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:49:04,239:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=INTC&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:49:04,374:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:49:05,386:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=CSCO&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:49:05,521:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:49:06,193:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DIS&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:49:06,328:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:49:07,056:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=GOOG&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:49:07,192:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:49:07,761:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=APPL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:49:07,763:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAAPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-31 13:49:07,764:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in button_stock_handler
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 292, in _handle_api_call
    raise ValueError(json_response["Error Message"])
ValueError: Invalid API call. Please retry or visit the documentation (https://www.alphavantage.co/documentation/) for TIME_SERIES_INTRADAY.
2020-05-31 13:49:07,797:aiogram:Make request: "getUpdates" with data: "{'offset': 210735214, 'timeout': 20}" and files "None"
2020-05-31 13:49:07,842:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":681,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922147,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  AAPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-31 13:49:07,842:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-31 13:49:07,919:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":682,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922147,"text":"Please enter >market name< company:"}}'"
2020-05-31 13:49:22,337:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735214,\n"message":{"message_id":683,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922162,"text":"INTC, CSCO, DIS, GOOG, AAPL"}}]}'"
2020-05-31 13:49:22,337:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:49:22,430:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-31 13:49:22,431:aiogram:Make request: "getUpdates" with data: "{'offset': 210735215, 'timeout': 20}" and files "None"
2020-05-31 13:49:22,518:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":684,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922162,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-31 13:49:28,644:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735215,\n"message":{"message_id":685,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922168,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:49:28,644:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:49:28,646:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:49:29,189:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=INTC&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:49:29,191:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in button_stock_handler
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 13:49:29,192:aiogram:Make request: "getUpdates" with data: "{'offset': 210735216, 'timeout': 20}" and files "None"
2020-05-31 13:49:49,246:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:49:49,346:aiogram:Make request: "getUpdates" with data: "{'offset': 210735216, 'timeout': 20}" and files "None"
2020-05-31 13:50:08,607:asyncio:Using selector: SelectSelector
2020-05-31 13:50:08,624:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:50:08,757:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:50:08,757:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:50:08,757:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:50:08,757:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:50:08,797:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:50:08,797:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:50:12,822:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735216,\n"message":{"message_id":686,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922212,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:50:12,822:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:50:22,979:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:50:23,633:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=INTC&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:50:25,113:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:50:25,744:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=CSCO&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:50:26,713:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:50:27,371:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DIS&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:50:28,184:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:50:28,885:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=GOOG&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:50:32,436:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:50:33,081:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=AAPL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:51:15,247:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>INTC: 63.06 $\n>>CSCO: 47.77 $\n>>DIS: 117.38 $\n>>GOOG: 1432.5 $\n>>AAPL: 319.3 $'}" and files "None"
2020-05-31 13:51:15,251:aiogram:Make request: "getUpdates" with data: "{'offset': 210735217, 'timeout': 20}" and files "None"
2020-05-31 13:51:15,419:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":687,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922275,"text":"Shares cost in:\\n>>INTC: 63.06 $\\n>>CSCO: 47.77 $\\n>>DIS: 117.38 $\\n>>GOOG: 1432.5 $\\n>>AAPL: 319.3 $"}}'"
2020-05-31 13:51:25,122:asyncio:Using selector: SelectSelector
2020-05-31 13:51:25,138:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 13:51:25,310:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 13:51:25,310:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 13:51:25,310:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 13:51:25,310:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 13:51:25,364:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 13:51:25,364:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 13:51:31,743:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735217,\n"message":{"message_id":688,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922291,"text":"/addcompany","entities":[{"offset":0,"length":11,"type":"bot_command"}]}}]}'"
2020-05-31 13:51:31,743:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:51:31,744:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Choose company which you need: \n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAAPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-31 13:51:31,844:aiogram:Make request: "getUpdates" with data: "{'offset': 210735218, 'timeout': 20}" and files "None"
2020-05-31 13:51:31,865:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":689,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922291,"text":"Choose company which you need: \\n Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  AAPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-31 13:51:31,865:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Please enter >market name< company:'}" and files "None"
2020-05-31 13:51:31,963:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":690,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922291,"text":"Please enter >market name< company:"}}'"
2020-05-31 13:51:51,999:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:51:52,099:aiogram:Make request: "getUpdates" with data: "{'offset': 210735218, 'timeout': 20}" and files "None"
2020-05-31 13:52:12,151:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:52:12,251:aiogram:Make request: "getUpdates" with data: "{'offset': 210735218, 'timeout': 20}" and files "None"
2020-05-31 13:52:27,401:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735218,\n"message":{"message_id":691,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922347,"text":"MSFT, FB, JMP, ADBE, DELL"}}]}'"
2020-05-31 13:52:27,401:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:52:27,482:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Thank you!\n Your companies are added in your list!'}" and files "None"
2020-05-31 13:52:27,505:aiogram:Make request: "getUpdates" with data: "{'offset': 210735219, 'timeout': 20}" and files "None"
2020-05-31 13:52:27,559:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":692,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922347,"text":"Thank you!\\n Your companies are added in your list!"}}'"
2020-05-31 13:52:30,601:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735219,\n"message":{"message_id":693,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922350,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 13:52:30,601:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 13:52:30,603:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:52:31,272:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:52:31,400:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:52:32,050:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:52:32,186:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:52:32,873:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:52:33,007:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:52:33,671:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:52:33,798:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 13:52:34,469:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 13:52:34,603:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 13:52:34,604:aiogram:Make request: "getUpdates" with data: "{'offset': 210735220, 'timeout': 20}" and files "None"
2020-05-31 13:52:34,671:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":694,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922354,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 13:52:54,658:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 13:52:54,759:aiogram:Make request: "getUpdates" with data: "{'offset': 210735220, 'timeout': 20}" and files "None"
2020-05-31 14:00:54,658:asyncio:Using selector: SelectSelector
2020-05-31 14:00:54,706:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:00:54,911:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:00:54,911:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:00:54,911:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:00:54,911:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:00:54,967:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 14:00:54,967:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:00:55,023:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735220,\n"message":{"message_id":695,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"ru"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922853,"text":"/companies","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-31 14:00:55,023:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:00:55,024:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}], [{"text": "User"}]], "resize_keyboard": true}'}" and files "None"
2020-05-31 14:00:55,118:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":696,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590922854,"text":"Hello Nikita"}}'"
2020-05-31 14:00:55,118:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:01:15,177:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:01:15,277:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:01:35,334:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:01:35,435:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:01:55,494:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:01:55,594:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:02:15,655:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:02:15,755:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:02:35,813:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:02:35,914:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:02:55,972:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:02:56,073:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:03:16,130:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:03:16,230:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:03:36,289:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:03:36,390:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:03:56,451:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:03:56,552:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:04:16,616:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:04:16,718:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:04:36,776:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:04:36,877:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:04:56,934:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:04:57,035:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:05:17,092:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:05:17,192:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:05:37,253:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:05:37,353:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:05:57,412:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:05:57,534:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:06:17,595:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:06:17,696:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:06:37,793:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:06:37,901:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:06:57,961:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:06:58,063:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:07:18,119:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:07:18,220:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:07:38,278:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:07:38,378:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:07:58,436:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:07:58,538:aiogram:Make request: "getUpdates" with data: "{'offset': 210735221, 'timeout': 20}" and files "None"
2020-05-31 14:14:22,158:asyncio:Using selector: SelectSelector
2020-05-31 14:14:22,207:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:14:22,401:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:14:22,401:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:14:22,402:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:14:22,402:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:14:22,456:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:14:22,457:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:14:22,769:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735221,\n"message":{"message_id":697,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590923662,"text":"/companies","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-31 14:14:22,769:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:14:22,770:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': '\n Market name ~~ Company name\n | \tTSLA        \t~~\t        Tesla\n | \tGOOG        \t~~\t        Google\n | \tMSFT        \t~~\t        Microsoft\n | \tAAPL        \t~~\t        Apple\n | \tAMZN        \t~~\t        Amazon\n | \tFB        \t~~\t        Facebook\n | \tNFLX        \t~~\t        Netflix\n | \tWMT        \t~~\t        Walmart\n | \tSSNLF        \t~~\t        Samsung\n | \tDIS        \t~~\t        Walt Disney\n | \tCSCO        \t~~\t        Cisco\n | \tADBE        \t~~\t        Adobe\n | \tINTC        \t~~\t        Intel\n | \tNVDA        \t~~\t        NVIDIA\n | \tAMD        \t~~\t        AMD\n | \tIBM        \t~~\t        IBM\n | \tDELL        \t~~\t        Dell\n | \tHPQ        \t~~\t        HP-Hewlett Packard\n | \tV        \t~~\t        VISA\n | \tMA        \t~~\t        MasterCard\n | \tNSRGF        \t~~\t        Nestle\n | \tJPM        \t~~\t        JPMorgan\n | \tJNJ        \t~~\t        J&J\n | \tBABA        \t~~\t        Alibaba ADR'}" and files "None"
2020-05-31 14:14:22,858:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":698,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590923662,"text":"Market name ~~ Company name\\n |  TSLA         ~~         Tesla\\n |  GOOG         ~~         Google\\n |  MSFT         ~~         Microsoft\\n |  AAPL         ~~         Apple\\n |  AMZN         ~~         Amazon\\n |  FB         ~~         Facebook\\n |  NFLX         ~~         Netflix\\n |  WMT         ~~         Walmart\\n |  SSNLF         ~~         Samsung\\n |  DIS         ~~         Walt Disney\\n |  CSCO         ~~         Cisco\\n |  ADBE         ~~         Adobe\\n |  INTC         ~~         Intel\\n |  NVDA         ~~         NVIDIA\\n |  AMD         ~~         AMD\\n |  IBM         ~~         IBM\\n |  DELL         ~~         Dell\\n |  HPQ         ~~         HP-Hewlett Packard\\n |  V         ~~         VISA\\n |  MA         ~~         MasterCard\\n |  NSRGF         ~~         Nestle\\n |  JPM         ~~         JPMorgan\\n |  JNJ         ~~         J&J\\n |  BABA         ~~         Alibaba ADR"}}'"
2020-05-31 14:14:22,882:aiogram:Make request: "getUpdates" with data: "{'offset': 210735222, 'timeout': 20}" and files "None"
2020-05-31 14:14:42,942:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:14:43,042:aiogram:Make request: "getUpdates" with data: "{'offset': 210735222, 'timeout': 20}" and files "None"
2020-05-31 14:15:03,098:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:15:03,199:aiogram:Make request: "getUpdates" with data: "{'offset': 210735222, 'timeout': 20}" and files "None"
2020-05-31 14:15:23,255:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:15:23,355:aiogram:Make request: "getUpdates" with data: "{'offset': 210735222, 'timeout': 20}" and files "None"
2020-05-31 14:15:33,950:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735222,\n"message":{"message_id":699,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590923733,"text":"/mycompany","entities":[{"offset":0,"length":10,"type":"bot_command"}]}}]}'"
2020-05-31 14:15:33,951:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:15:33,951:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Your companies:\n | MSFT\n | FB\n | JMP\n | ADBE\n | DELL', 'reply_markup': '{"remove_keyboard": true}'}" and files "None"
2020-05-31 14:15:34,038:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":700,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590923733,"text":"Your companies:\\n | MSFT\\n | FB\\n | JMP\\n | ADBE\\n | DELL"}}'"
2020-05-31 14:15:34,038:aiogram:Make request: "getUpdates" with data: "{'offset': 210735223, 'timeout': 20}" and files "None"
2020-05-31 14:15:41,393:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735223,\n"message":{"message_id":701,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590923741,"text":"F"}}]}'"
2020-05-31 14:15:41,393:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:15:41,393:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}]], "resize_keyboard": true}'}" and files "None"
2020-05-31 14:15:41,473:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":702,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590923741,"text":"Hello Nikita"}}'"
2020-05-31 14:15:41,496:aiogram:Make request: "getUpdates" with data: "{'offset': 210735224, 'timeout': 20}" and files "None"
2020-05-31 14:15:49,358:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735224,\n"message":{"message_id":703,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590923749,"text":"Stock"}}]}'"
2020-05-31 14:15:49,358:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:15:49,359:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}]], "resize_keyboard": true}'}" and files "None"
2020-05-31 14:15:49,460:aiogram:Make request: "getUpdates" with data: "{'offset': 210735225, 'timeout': 20}" and files "None"
2020-05-31 14:15:49,535:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":704,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590923749,"text":"Hello Nikita"}}'"
2020-05-31 14:18:09,112:asyncio:Using selector: SelectSelector
2020-05-31 14:18:09,160:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:18:09,313:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:18:09,313:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:18:09,313:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:18:09,314:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:18:09,353:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 14:18:09,353:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:18:09,391:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735225,\n"message":{"message_id":705,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590923888,"text":"Stock"}}]}'"
2020-05-31 14:18:09,391:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:18:09,392:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError("button_stock_handler() missing 1 required positional argument: 'message'")>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 248, in message_handler
    await button_stock_handler()
TypeError: button_stock_handler() missing 1 required positional argument: 'message'
2020-05-31 14:18:09,480:aiogram:Make request: "getUpdates" with data: "{'offset': 210735226, 'timeout': 20}" and files "None"
2020-05-31 14:18:21,894:asyncio:Using selector: SelectSelector
2020-05-31 14:18:21,910:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:18:22,084:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:18:22,085:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:18:22,085:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:18:22,085:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:18:22,140:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:18:22,140:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:18:33,460:asyncio:Using selector: SelectSelector
2020-05-31 14:18:33,473:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:18:33,647:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:18:33,647:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:18:33,647:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:18:33,647:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:18:33,701:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:18:33,701:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:18:39,148:asyncio:Using selector: SelectSelector
2020-05-31 14:18:39,166:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:18:39,302:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:18:39,303:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:18:39,303:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:18:39,303:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:18:39,343:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:18:39,343:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:18:57,546:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735226,\n"message":{"message_id":706,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590923937,"text":"Stock"}}]}'"
2020-05-31 14:18:57,547:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:19:05,107:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=TypeError("button_stock_handler() missing 1 required positional argument: 'message'")>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 248, in message_handler
    await button_stock_handler()
TypeError: button_stock_handler() missing 1 required positional argument: 'message'
2020-05-31 14:19:05,109:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:19:25,152:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:19:25,253:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:19:45,297:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:19:45,397:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:20:05,443:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:20:05,545:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:20:25,588:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:20:25,689:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:20:45,731:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:20:45,831:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:21:05,873:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:21:05,975:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:21:26,019:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:21:26,119:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:21:46,163:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:21:46,263:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:22:06,308:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:22:06,408:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:22:26,452:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:22:26,552:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:22:46,596:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:22:46,697:aiogram:Make request: "getUpdates" with data: "{'offset': 210735227, 'timeout': 20}" and files "None"
2020-05-31 14:23:04,544:asyncio:Using selector: SelectSelector
2020-05-31 14:23:04,564:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:23:04,738:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:23:04,738:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:23:04,738:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:23:04,738:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:23:04,793:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:23:04,793:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:23:11,259:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735227,\n"message":{"message_id":707,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924190,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:23:11,259:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:23:11,282:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:23:12,113:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:23:12,354:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:23:12,990:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:23:13,120:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:23:13,800:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:23:13,932:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:23:14,663:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:23:14,796:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:23:15,462:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:23:15,594:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:23:15,595:aiogram:Make request: "getUpdates" with data: "{'offset': 210735228, 'timeout': 20}" and files "None"
2020-05-31 14:23:15,741:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":708,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924195,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:23:20,620:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735228,\n"message":{"message_id":709,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924200,"text":"Stock"}}]}'"
2020-05-31 14:23:20,620:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:23:20,622:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:23:21,173:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:23:21,175:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 253, in message_handler
    stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 98, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:23:21,205:aiogram:Make request: "getUpdates" with data: "{'offset': 210735229, 'timeout': 20}" and files "None"
2020-05-31 14:23:41,261:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:23:41,362:aiogram:Make request: "getUpdates" with data: "{'offset': 210735229, 'timeout': 20}" and files "None"
2020-05-31 14:24:01,415:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:24:01,516:aiogram:Make request: "getUpdates" with data: "{'offset': 210735229, 'timeout': 20}" and files "None"
2020-05-31 14:24:21,574:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:24:21,676:aiogram:Make request: "getUpdates" with data: "{'offset': 210735229, 'timeout': 20}" and files "None"
2020-05-31 14:28:18,455:asyncio:Using selector: SelectSelector
2020-05-31 14:28:18,503:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:28:18,663:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:28:18,663:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:28:18,663:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:28:18,663:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:28:18,702:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:28:18,702:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:28:20,945:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735229,\n"message":{"message_id":710,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924500,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:28:20,945:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:28:20,947:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:28:21,623:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:28:21,804:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:28:22,453:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:28:22,582:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:28:23,245:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:28:23,373:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:28:24,067:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:28:24,201:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:28:24,839:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:28:24,966:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:28:24,967:aiogram:Make request: "getUpdates" with data: "{'offset': 210735230, 'timeout': 20}" and files "None"
2020-05-31 14:28:25,043:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":711,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924504,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:28:26,594:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735230,\n"message":{"message_id":712,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924506,"text":"Stock"}}]}'"
2020-05-31 14:28:26,594:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:28:26,596:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:28:27,142:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:28:27,143:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 260, in message_handler
    answer = stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:28:27,190:aiogram:Make request: "getUpdates" with data: "{'offset': 210735231, 'timeout': 20}" and files "None"
2020-05-31 14:28:47,567:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:28:47,667:aiogram:Make request: "getUpdates" with data: "{'offset': 210735231, 'timeout': 20}" and files "None"
2020-05-31 14:29:07,710:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:29:07,812:aiogram:Make request: "getUpdates" with data: "{'offset': 210735231, 'timeout': 20}" and files "None"
2020-05-31 14:29:21,112:asyncio:Using selector: SelectSelector
2020-05-31 14:29:21,129:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:29:21,568:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:29:21,568:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:29:21,569:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:29:21,569:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:29:21,610:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:29:21,610:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:29:22,562:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735231,\n"message":{"message_id":713,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924562,"text":"Stock"}}]}'"
2020-05-31 14:29:22,563:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:29:32,977:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:29:33,606:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:29:33,738:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:29:34,442:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:29:34,582:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:29:35,250:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:29:35,381:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:29:36,010:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:29:36,144:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:29:36,767:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:29:49,498:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:29:49,502:aiogram:Make request: "getUpdates" with data: "{'offset': 210735232, 'timeout': 20}" and files "None"
2020-05-31 14:29:49,689:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":714,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924589,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:29:56,984:asyncio:Using selector: SelectSelector
2020-05-31 14:29:57,000:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:29:57,159:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:29:57,159:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:29:57,159:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:29:57,159:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:29:57,207:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:29:57,207:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:29:59,085:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735232,\n"message":{"message_id":715,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924598,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:29:59,085:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:29:59,087:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:29:59,614:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:29:59,617:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 128, in button_stock_handler
    text = stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:29:59,618:aiogram:Make request: "getUpdates" with data: "{'offset': 210735233, 'timeout': 20}" and files "None"
2020-05-31 14:30:16,084:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735233,\n"message":{"message_id":716,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924615,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:30:16,084:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:30:16,086:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:30:16,769:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:30:16,899:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:30:17,525:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:30:17,653:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:30:18,325:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:30:18,451:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:30:19,094:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:30:19,222:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:30:19,930:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:30:20,061:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:30:20,062:aiogram:Make request: "getUpdates" with data: "{'offset': 210735234, 'timeout': 20}" and files "None"
2020-05-31 14:30:20,141:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":717,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924619,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:30:22,568:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735234,\n"message":{"message_id":718,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924622,"text":"Stock"}}]}'"
2020-05-31 14:30:22,568:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:30:22,571:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:30:23,119:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:30:23,120:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 260, in message_handler
    answer = stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:30:23,121:aiogram:Make request: "getUpdates" with data: "{'offset': 210735235, 'timeout': 20}" and files "None"
2020-05-31 14:30:40,309:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735235,\n"message":{"message_id":719,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924640,"text":"Stock"}}]}'"
2020-05-31 14:30:40,309:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:30:40,311:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:30:40,839:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:30:40,841:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 260, in message_handler
    answer = stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:30:40,841:aiogram:Make request: "getUpdates" with data: "{'offset': 210735236, 'timeout': 20}" and files "None"
2020-05-31 14:31:00,892:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:31:00,993:aiogram:Make request: "getUpdates" with data: "{'offset': 210735236, 'timeout': 20}" and files "None"
2020-05-31 14:31:21,043:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:31:21,143:aiogram:Make request: "getUpdates" with data: "{'offset': 210735236, 'timeout': 20}" and files "None"
2020-05-31 14:31:41,194:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:31:41,294:aiogram:Make request: "getUpdates" with data: "{'offset': 210735236, 'timeout': 20}" and files "None"
2020-05-31 14:32:01,343:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:32:01,444:aiogram:Make request: "getUpdates" with data: "{'offset': 210735236, 'timeout': 20}" and files "None"
2020-05-31 14:32:21,494:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:32:21,596:aiogram:Make request: "getUpdates" with data: "{'offset': 210735236, 'timeout': 20}" and files "None"
2020-05-31 14:32:41,647:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:32:41,748:aiogram:Make request: "getUpdates" with data: "{'offset': 210735236, 'timeout': 20}" and files "None"
2020-05-31 14:32:59,712:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735236,\n"message":{"message_id":720,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924779,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:32:59,713:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:32:59,714:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:33:00,385:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:33:00,521:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:33:01,382:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:33:01,517:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:33:02,174:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:33:02,301:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:33:03,176:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:33:03,311:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:33:04,181:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:33:04,315:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:33:04,316:aiogram:Make request: "getUpdates" with data: "{'offset': 210735237, 'timeout': 20}" and files "None"
2020-05-31 14:33:04,390:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":721,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924784,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:33:12,184:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735237,\n"message":{"message_id":722,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924791,"text":"Hello"}}]}'"
2020-05-31 14:33:12,185:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:33:12,188:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}]], "resize_keyboard": true}'}" and files "None"
2020-05-31 14:33:12,280:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":723,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924791,"text":"Hello Nikita"}}'"
2020-05-31 14:33:12,281:aiogram:Make request: "getUpdates" with data: "{'offset': 210735238, 'timeout': 20}" and files "None"
2020-05-31 14:33:13,685:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735238,\n"message":{"message_id":724,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924793,"text":"Stock"}}]}'"
2020-05-31 14:33:13,685:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:33:13,687:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:33:14,320:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:33:14,450:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:33:15,080:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:33:15,209:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:33:15,738:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:33:15,739:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 260, in message_handler
    answer = stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:33:15,740:aiogram:Make request: "getUpdates" with data: "{'offset': 210735239, 'timeout': 20}" and files "None"
2020-05-31 14:33:35,792:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:33:35,893:aiogram:Make request: "getUpdates" with data: "{'offset': 210735239, 'timeout': 20}" and files "None"
2020-05-31 14:33:56,899:asyncio:Using selector: SelectSelector
2020-05-31 14:33:56,917:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:33:57,060:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:33:57,060:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:33:57,060:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:33:57,060:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:33:57,105:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:33:57,105:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:33:59,673:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735239,\n"message":{"message_id":725,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924839,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:33:59,674:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:33:59,679:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:34:00,724:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:34:00,854:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:34:01,695:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:34:01,833:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:34:02,539:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:34:02,672:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:34:03,608:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:34:03,741:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:34:04,611:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:34:04,740:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:34:04,742:aiogram:Make request: "getUpdates" with data: "{'offset': 210735240, 'timeout': 20}" and files "None"
2020-05-31 14:34:04,809:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":726,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924844,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:34:08,554:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735240,\n"message":{"message_id":727,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924848,"text":"Stock"}}]}'"
2020-05-31 14:34:08,555:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:34:10,654:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:34:11,366:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:34:11,497:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:34:12,018:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:34:16,731:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 260, in message_handler
    answer = stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:34:16,760:aiogram:Make request: "getUpdates" with data: "{'offset': 210735241, 'timeout': 20}" and files "None"
2020-05-31 14:34:29,819:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735241,\n"message":{"message_id":728,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590924869,"text":"Stock"}}]}'"
2020-05-31 14:34:29,820:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:34:31,116:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:34:31,672:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:34:34,360:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 260, in message_handler
    answer = stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 108, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:34:34,360:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:34:54,417:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:34:54,517:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:35:14,848:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:35:14,948:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:35:35,003:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:35:35,104:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:35:55,160:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:35:55,260:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:36:15,591:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:36:15,692:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:36:35,746:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:36:35,848:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:36:55,903:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:36:56,004:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:37:16,059:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:37:16,159:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:37:36,215:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:37:36,317:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:37:56,372:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:37:56,472:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:38:16,528:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:38:16,629:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:38:36,685:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:38:36,787:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:38:56,841:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:38:56,942:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:39:16,997:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:39:17,098:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:39:37,153:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:39:37,255:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:39:57,310:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:39:57,410:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:40:17,466:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:40:17,566:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:40:37,621:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:40:37,723:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:40:57,779:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:40:57,881:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:41:17,936:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:41:18,037:aiogram:Make request: "getUpdates" with data: "{'offset': 210735242, 'timeout': 20}" and files "None"
2020-05-31 14:41:27,039:asyncio:Using selector: SelectSelector
2020-05-31 14:41:27,060:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:41:27,197:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:41:27,197:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:41:27,198:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:41:27,198:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:41:27,237:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:41:27,238:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:41:28,696:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735242,\n"message":{"message_id":729,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925288,"text":"Stock"}}]}'"
2020-05-31 14:41:28,696:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:41:31,979:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:41:32,644:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:41:32,782:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:41:33,408:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:41:33,539:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:41:34,372:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:41:34,505:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:41:35,175:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:41:35,315:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:41:35,967:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:41:37,600:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:41:37,604:aiogram:Make request: "getUpdates" with data: "{'offset': 210735243, 'timeout': 20}" and files "None"
2020-05-31 14:41:37,688:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":730,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925297,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:42:26,143:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}]], "resize_keyboard": true}'}" and files "None"
2020-05-31 14:42:26,187:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735243,\n"message":{"message_id":731,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925300,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}},{"update_id":210735244,\n"message":{"message_id":732,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925316,"text":"Stock"}},{"update_id":210735245,\n"message":{"message_id":733,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925339,"text":"Stock"}}]}'"
2020-05-31 14:42:26,188:aiogram.dispatcher.dispatcher:Received 3 updates.
2020-05-31 14:42:26,192:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:42:26,832:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:42:26,968:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:42:27,592:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:42:27,722:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:42:28,448:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:42:28,581:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:42:29,261:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:42:29,392:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:42:30,012:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:42:30,140:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:42:30,880:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:42:31,406:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:42:33,613:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:42:34,143:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:42:34,878:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 264, in message_handler
    stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:42:34,914:aiogram:Make request: "getUpdates" with data: "{'offset': 210735246, 'timeout': 20}" and files "None"
2020-05-31 14:42:34,951:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":735,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925354,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:42:35,070:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735246,\n"message":{"message_id":734,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925347,"text":"Stock"}}]}'"
2020-05-31 14:42:35,070:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:42:36,861:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:42:37,380:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:42:37,781:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 264, in message_handler
    stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:42:37,782:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":736,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925354,"text":"Hello Nikita"}}'"
2020-05-31 14:42:37,782:aiogram:Make request: "getUpdates" with data: "{'offset': 210735247, 'timeout': 20}" and files "None"
2020-05-31 14:42:43,723:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735247,\n"message":{"message_id":737,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925363,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:42:43,723:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:42:43,727:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:42:44,398:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:42:44,400:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 132, in button_stock_handler
    stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:42:44,401:aiogram:Make request: "getUpdates" with data: "{'offset': 210735248, 'timeout': 20}" and files "None"
2020-05-31 14:42:59,197:asyncio:Using selector: SelectSelector
2020-05-31 14:42:59,227:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:42:59,366:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:42:59,366:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:42:59,367:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:42:59,367:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:42:59,409:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:42:59,409:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:43:05,064:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735248,\n"message":{"message_id":738,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925384,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:43:05,065:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:43:05,070:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:43:05,871:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:43:06,011:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:43:06,742:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:43:06,873:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:43:07,550:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:43:07,680:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:43:08,345:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:43:08,476:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:43:09,117:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:43:09,245:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:43:09,247:aiogram:Make request: "getUpdates" with data: "{'offset': 210735249, 'timeout': 20}" and files "None"
2020-05-31 14:43:09,328:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":739,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925389,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:43:29,410:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:43:29,511:aiogram:Make request: "getUpdates" with data: "{'offset': 210735249, 'timeout': 20}" and files "None"
2020-05-31 14:43:44,580:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735249,\n"message":{"message_id":740,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925424,"text":"Stock"}}]}'"
2020-05-31 14:43:44,580:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:43:46,769:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:43:47,292:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:43:48,388:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 264, in message_handler
    stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:43:48,421:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:44:08,475:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:44:08,576:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:44:28,636:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:44:28,737:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:44:48,791:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:44:48,892:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:45:08,949:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:45:09,051:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:45:29,107:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:45:29,208:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:45:49,264:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:45:49,365:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:46:09,419:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:46:09,521:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:46:29,575:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:46:29,676:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:46:49,732:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:46:49,834:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:47:09,889:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:47:09,989:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:47:30,044:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:47:30,145:aiogram:Make request: "getUpdates" with data: "{'offset': 210735250, 'timeout': 20}" and files "None"
2020-05-31 14:47:37,969:asyncio:Using selector: SelectSelector
2020-05-31 14:47:37,992:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:47:38,130:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:47:38,130:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:47:38,131:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:47:38,131:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:47:38,172:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 14:47:38,172:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:47:38,214:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735250,\n"message":{"message_id":741,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925657,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:47:38,215:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:47:38,219:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:47:38,904:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:47:39,035:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:47:39,741:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:47:39,873:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:47:40,557:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:47:40,694:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:47:41,352:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:47:41,491:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:47:42,108:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:47:42,238:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:47:42,240:aiogram:Make request: "getUpdates" with data: "{'offset': 210735251, 'timeout': 20}" and files "None"
2020-05-31 14:47:42,306:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":742,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925661,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:47:44,411:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735251,\n"message":{"message_id":743,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925664,"text":"Stock"}}]}'"
2020-05-31 14:47:44,412:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:48:01,484:asyncio:Using selector: SelectSelector
2020-05-31 14:48:01,536:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:48:01,732:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:48:01,732:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:48:01,732:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:48:01,732:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:48:01,786:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 14:48:01,786:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:48:01,840:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735251,\n"message":{"message_id":743,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925664,"text":"Stock"}}]}'"
2020-05-31 14:48:01,840:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:48:14,129:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:48:14,866:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:48:15,048:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:48:15,677:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:48:15,810:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:48:16,500:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:48:16,632:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:48:17,260:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:48:17,393:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:48:18,041:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:48:19,021:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:48:19,025:aiogram:Make request: "getUpdates" with data: "{'offset': 210735252, 'timeout': 20}" and files "None"
2020-05-31 14:48:19,149:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735252,\n"message":{"message_id":744,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925683,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:48:19,149:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:48:19,153:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:48:19,675:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:48:19,677:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 132, in button_stock_handler
    stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:48:19,718:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":745,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925698,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:48:24,299:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}]], "resize_keyboard": true}'}" and files "None"
2020-05-31 14:48:24,300:aiogram:Make request: "getUpdates" with data: "{'offset': 210735253, 'timeout': 20}" and files "None"
2020-05-31 14:48:24,367:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":746,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925704,"text":"Hello Nikita"}}'"
2020-05-31 14:48:33,251:asyncio:Using selector: SelectSelector
2020-05-31 14:48:33,277:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:48:33,442:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:48:33,442:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:48:33,442:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:48:33,442:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:48:33,495:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 14:48:33,495:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:48:33,549:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735253,\n"message":{"message_id":747,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925712,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:48:33,550:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:48:33,555:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:48:34,228:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:48:34,244:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 132, in button_stock_handler
    stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:48:34,246:aiogram:Make request: "getUpdates" with data: "{'offset': 210735254, 'timeout': 20}" and files "None"
2020-05-31 14:48:54,299:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:48:54,399:aiogram:Make request: "getUpdates" with data: "{'offset': 210735254, 'timeout': 20}" and files "None"
2020-05-31 14:48:57,895:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735254,\n"message":{"message_id":748,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925737,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:48:57,895:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:48:57,899:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:48:58,427:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:48:58,429:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 132, in button_stock_handler
    stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:48:58,430:aiogram:Make request: "getUpdates" with data: "{'offset': 210735255, 'timeout': 20}" and files "None"
2020-05-31 14:49:18,805:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:49:18,907:aiogram:Make request: "getUpdates" with data: "{'offset': 210735255, 'timeout': 20}" and files "None"
2020-05-31 14:49:25,050:asyncio:Using selector: SelectSelector
2020-05-31 14:49:25,067:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:49:25,210:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:49:25,210:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:49:25,210:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:49:25,211:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:49:25,252:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:49:25,253:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:49:26,495:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735255,\n"message":{"message_id":749,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925766,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:49:26,496:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:49:26,501:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:49:27,128:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:49:27,257:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:49:27,902:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:49:28,040:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:49:28,736:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:49:28,872:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:49:29,546:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:49:29,684:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:49:30,309:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:49:51,543:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:49:51,547:aiogram:Make request: "getUpdates" with data: "{'offset': 210735256, 'timeout': 20}" and files "None"
2020-05-31 14:49:51,701:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":750,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925791,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:49:54,677:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735256,\n"message":{"message_id":751,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590925794,"text":"Stock"}}]}'"
2020-05-31 14:49:54,677:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:49:56,588:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:49:57,116:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:53:33,188:asyncio:Task exception was never retrieved
future: <Task finished coro=<Dispatcher._process_polling_updates() done, defined at E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py:324> exception=ValueError('Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.')>
Traceback (most recent call last):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 332, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 188, in process_updates
    return await asyncio.gather(*tasks)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 208, in process_update
    return await self.message_handlers.notify(update.message)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 264, in message_handler
    stock_function(message)
  File "E:/Download/Py/Bot's/Telegram/Telegram_bot7(StockBot)/bot.py", line 111, in stock_function
    stock, _ = ts.get_intraday(symbol=k, interval='1min')
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 174, in _format_wrapper
    self, *args, **kwargs)
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 159, in _call_wrapper
    return self._handle_api_call(url), data_key, meta_data_key
  File "E:\Download\Py\Bot's\Telegram\Telegram_bot7(StockBot)\Bot_intprtr\lib\site-packages\alpha_vantage\alphavantage.py", line 296, in _handle_api_call
    raise ValueError(json_response["Note"])
ValueError: Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.
2020-05-31 14:53:33,190:aiogram:Make request: "getUpdates" with data: "{'offset': 210735257, 'timeout': 20}" and files "None"
2020-05-31 14:53:54,547:asyncio:Using selector: SelectSelector
2020-05-31 14:53:54,567:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 14:53:54,734:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 14:53:54,735:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 14:53:54,735:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 14:53:54,735:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 14:53:54,785:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 14:53:54,785:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 14:53:55,636:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735257,\n"message":{"message_id":752,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590926035,"text":"/stock","entities":[{"offset":0,"length":6,"type":"bot_command"}]}}]}'"
2020-05-31 14:53:55,636:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:53:55,638:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:53:56,354:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:53:56,489:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:53:57,153:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:53:57,279:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:53:57,927:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:53:58,055:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:53:58,753:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:53:58,881:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:53:59,593:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:53:59,725:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:53:59,726:aiogram:Make request: "getUpdates" with data: "{'offset': 210735258, 'timeout': 20}" and files "None"
2020-05-31 14:53:59,802:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":753,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590926039,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:54:05,057:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735258,\n"message":{"message_id":754,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590926044,"text":"Stock"}}]}'"
2020-05-31 14:54:05,057:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 14:54:05,059:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:54:05,709:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:54:05,842:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:54:06,604:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:54:06,737:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:54:07,435:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:54:07,563:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:54:08,183:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:54:08,310:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 14:54:09,013:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 14:54:09,142:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 14:54:09,143:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:54:09,214:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":755,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590926048,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 14:54:09,214:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}]], "resize_keyboard": true}'}" and files "None"
2020-05-31 14:54:09,319:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":756,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590926048,"text":"Hello Nikita"}}'"
2020-05-31 14:54:29,194:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:54:29,294:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:54:49,346:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:54:49,446:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:55:09,497:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:55:09,599:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:55:29,649:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:55:29,751:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:55:49,801:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:55:49,902:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:56:09,953:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:56:10,054:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:56:30,105:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:56:30,206:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:56:50,257:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:56:50,358:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:57:10,409:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:57:10,509:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:57:30,560:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:57:30,661:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:57:50,716:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:57:50,817:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:58:10,867:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:58:10,968:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:58:31,020:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:58:31,120:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:58:51,171:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:58:51,272:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:59:11,323:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:59:11,423:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:59:31,474:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:59:31,575:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 14:59:51,626:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 14:59:51,727:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:00:11,777:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:00:11,878:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:00:31,929:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:00:32,030:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:00:52,082:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:00:52,183:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:01:12,234:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:01:12,335:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:01:32,386:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:01:32,486:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:01:52,535:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:01:52,636:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:02:12,687:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:02:12,787:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:02:32,838:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:02:32,938:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:02:52,989:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:02:53,089:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:03:13,141:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:03:13,241:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:03:33,291:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:03:33,393:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:03:53,443:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:03:53,543:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:04:13,594:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:04:13,695:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:04:33,746:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:04:33,847:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:04:53,897:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:04:53,998:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:05:14,048:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:05:14,150:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:05:34,200:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:05:34,301:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:05:54,352:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:05:54,452:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:06:14,502:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:06:14,603:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:06:34,654:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:06:34,755:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:06:54,805:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:06:54,906:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:07:14,957:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:07:15,057:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:07:35,109:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:07:35,209:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:07:55,263:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:07:55,365:aiogram:Make request: "getUpdates" with data: "{'offset': 210735259, 'timeout': 20}" and files "None"
2020-05-31 15:10:30,626:asyncio:Using selector: SelectSelector
2020-05-31 15:10:30,645:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 15:10:30,779:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 15:10:30,779:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 15:10:30,779:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 15:10:30,779:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 15:10:30,818:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":1}}'"
2020-05-31 15:10:30,818:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 15:10:30,858:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735259,\n"message":{"message_id":757,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590927029,"text":"Stock"}}]}'"
2020-05-31 15:10:30,858:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 15:10:30,858:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}]], "resize_keyboard": true}'}" and files "None"
2020-05-31 15:10:30,925:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":758,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590927030,"text":"Hello Nikita"}}'"
2020-05-31 15:10:30,948:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:10:50,989:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:10:51,091:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:11:11,131:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:11:11,232:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:11:31,274:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:11:31,374:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:11:51,416:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:11:51,516:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:12:11,557:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:12:11,658:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:12:31,700:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:12:31,800:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:12:51,842:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:12:51,944:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:13:11,984:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:13:12,086:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:13:32,129:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:13:32,230:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:13:52,270:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:13:52,370:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:14:12,417:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:14:12,517:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:14:32,560:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:14:32,661:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:14:52,702:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:14:52,804:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:15:12,845:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:15:12,945:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:15:32,986:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:15:33,087:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:15:53,127:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:15:53,228:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:16:13,270:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:16:13,370:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:16:33,411:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:16:33,512:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:16:53,553:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:16:53,655:aiogram:Make request: "getUpdates" with data: "{'offset': 210735260, 'timeout': 20}" and files "None"
2020-05-31 15:16:57,988:asyncio:Using selector: SelectSelector
2020-05-31 15:16:58,007:aiogram:Make request: "getMe" with data: "{}" and files "None"
2020-05-31 15:16:58,184:aiogram:Response for getMe: [200] "'{"ok":true,"result":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2020-05-31 15:16:58,184:aiogram:Bot: StockBot [@Info_stockBot]
2020-05-31 15:16:58,184:aiogram.dispatcher.dispatcher:Start polling.
2020-05-31 15:16:58,184:aiogram:Make request: "getWebhookInfo" with data: "{}" and files "None"
2020-05-31 15:16:58,238:aiogram:Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2020-05-31 15:16:58,238:aiogram:Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
2020-05-31 15:17:01,530:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[{"update_id":210735260,\n"message":{"message_id":759,"from":{"id":425452377,"is_bot":false,"first_name":"Nikita","username":"OneUnix","language_code":"en"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590927421,"text":"Stock"}}]}'"
2020-05-31 15:17:01,530:aiogram.dispatcher.dispatcher:Received 1 updates.
2020-05-31 15:17:01,531:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Hello Nikita', 'reply_markup': '{"keyboard": [[{"text": "Stock"}]], "resize_keyboard": true}'}" and files "None"
2020-05-31 15:17:01,611:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":760,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590927421,"text":"Hello Nikita"}}'"
2020-05-31 15:17:01,626:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 15:17:02,538:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=MSFT&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 15:17:02,763:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 15:17:03,667:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=FB&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 15:17:03,794:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 15:17:04,517:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=JMP&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 15:17:04,647:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 15:17:05,520:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=ADBE&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 15:17:05,650:urllib3.connectionpool:Starting new HTTPS connection (1): www.alphavantage.co:443
2020-05-31 15:17:06,570:urllib3.connectionpool:https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_INTRADAY&symbol=DELL&interval=1min&outputsize=compact&apikey=YKI79BJG7YMG82NG&datatype=json HTTP/1.1" 200 None
2020-05-31 15:17:06,697:aiogram:Make request: "sendMessage" with data: "{'chat_id': 425452377, 'text': 'Shares cost in:\n>>MSFT: 184.08 $\n>>FB: 225.87 $\n>>JMP: 2.88 $\n>>ADBE: 386.911 $\n>>DELL: 49.64 $'}" and files "None"
2020-05-31 15:17:06,698:aiogram:Make request: "getUpdates" with data: "{'offset': 210735261, 'timeout': 20}" and files "None"
2020-05-31 15:17:06,798:aiogram:Response for sendMessage: [200] "'{"ok":true,"result":{"message_id":761,"from":{"id":929079007,"is_bot":true,"first_name":"StockBot","username":"Info_stockBot"},"chat":{"id":425452377,"first_name":"Nikita","username":"OneUnix","type":"private"},"date":1590927426,"text":"Shares cost in:\\n>>MSFT: 184.08 $\\n>>FB: 225.87 $\\n>>JMP: 2.88 $\\n>>ADBE: 386.911 $\\n>>DELL: 49.64 $"}}'"
2020-05-31 15:17:26,852:aiogram:Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
2020-05-31 15:17:26,954:aiogram:Make request: "getUpdates" with data: "{'offset': 210735261, 'timeout': 20}" and files "None"
